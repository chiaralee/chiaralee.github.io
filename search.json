[{"title":"Hello World","url":"https://chiaralee.gitee.io/2022/02/02/hello-world/","content":"<p>Welcome to <a class=\"link\"   href=\"https://hexo.io/\" >Hexo<i class=\"fas fa-external-link-alt\"></i></a>! This is your very first post. Check <a class=\"link\"   href=\"https://hexo.io/docs/\" >documentation<i class=\"fas fa-external-link-alt\"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class=\"link\"   href=\"https://hexo.io/docs/troubleshooting.html\" >troubleshooting<i class=\"fas fa-external-link-alt\"></i></a> or you can ask me on <a class=\"link\"   href=\"https://github.com/hexojs/hexo/issues\" >GitHub<i class=\"fas fa-external-link-alt\"></i></a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a class=\"link\"   href=\"https://hexo.io/docs/writing.html\" >Writing<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a class=\"link\"   href=\"https://hexo.io/docs/server.html\" >Server<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a class=\"link\"   href=\"https://hexo.io/docs/generating.html\" >Generating<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a class=\"link\"   href=\"https://hexo.io/docs/one-command-deployment.html\" >Deployment<i class=\"fas fa-external-link-alt\"></i></a></p>\n","categories":[],"tags":[]},{"title":"ip地址加/8/16/24/32","url":"https://chiaralee.gitee.io/2022/01/17/ip地址加-8-16-24-32/","content":"<blockquote>\n<p>数字即掩码的位数</p>\n</blockquote>\n<h1 id=\"8\"><a href=\"#8\" class=\"headerlink\" title=\"/8\"></a>/8</h1><p>A类IP地址的默认子网掩码为255.0.0.0（由于255相当于二进制的8位1，所以也缩写成“/8”，表示网络号占了8位），即11111111.00000000.00000000.00000000</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">举个栗子：</span><br><span class=\"line\">10.1.0.5/8（子网掩码是255.0.0.0），即10段的ip（10.0.0.0～10.255.255.255）都可以ping通</span><br></pre></td></tr></table></figure>\n<h1 id=\"16\"><a href=\"#16\" class=\"headerlink\" title=\"/16\"></a>/16</h1><p>B类的为255.255.0.0（/16）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">举个栗子：</span><br><span class=\"line\">10.1.0.5/16（子网掩码是255.255.0.0），即10.1段的ip（10.1.0.0～10.1.255.255）都可以ping通</span><br></pre></td></tr></table></figure>\n<h1 id=\"24\"><a href=\"#24\" class=\"headerlink\" title=\"/24\"></a>/24</h1><p>C类的为255.255.255.0（/24）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">举个栗子：</span><br><span class=\"line\">10.1.0.5/24（子网掩码是255.255.255.0），即10.1.0段的ip（10.1.0.0～10.1.0.255）都可以ping通</span><br></pre></td></tr></table></figure>\n<h1 id=\"32\"><a href=\"#32\" class=\"headerlink\" title=\"/32\"></a>/32</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">举个栗子：</span><br><span class=\"line\">10.1.0.5/32（子网掩码是255.255.255.255），即10.1.0.5的ip只能自己ping通自己</span><br></pre></td></tr></table></figure>\n","categories":["基操"],"tags":["Linux"]},{"title":"NFS搭建","url":"https://chiaralee.gitee.io/2022/01/14/NFS搭建/","content":"<blockquote>\n<p>NFS 是 Network File System 的缩写，即网络文件系统。</p>\n<p>功能是让客户端通过网络访问不同主机上磁盘里的数据，主要用在类Unix系统上实现文件共享的一种方法。 </p>\n</blockquote>\n<p><a class=\"link\"   href=\"https://cloud.tencent.com/developer/article/1720669\" >https://cloud.tencent.com/developer/article/1720669<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\"   href=\"https://qizhanming.com/blog/2018/08/08/how-to-install-nfs-on-centos-7\" >https://qizhanming.com/blog/2018/08/08/how-to-install-nfs-on-centos-7<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h1 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h1><h2 id=\"安装NFS\"><a href=\"#安装NFS\" class=\"headerlink\" title=\"安装NFS\"></a>安装NFS</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用yum 安装 NFS</span></span><br><span class=\"line\">yum install nfs-utils</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置 NFS 服务开机启动 并 启动 NFS 服务</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> nfs &amp;&amp; systemctl start nfs</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置共享目录\"><a href=\"#配置共享目录\" class=\"headerlink\" title=\"配置共享目录\"></a>配置共享目录</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt;<span class=\"string\">E &gt;&gt; /etc/exports</span></span><br><span class=\"line\"><span class=\"string\">/tmp/nfs_data 10.1.0.1/24(rw,sync,no_root_squash,no_subtree_check)</span></span><br><span class=\"line\"><span class=\"string\">eof</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>/tmp/nfs_data: 共享目录位置</li>\n<li>10.1.0.1/24: 客户端 IP 范围，* 代表所有，即没有限制</li>\n<li>共享目录权限设置：<ul>\n<li>rw: 权限设置，可读可写</li>\n<li>sync: 同步共享目录</li>\n<li>no_root_squash: 可以使用 root 授权</li>\n<li>no_all_squash: 可以使用普通用户授权</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"共享目录配置完成后，重启-NFS-服务\"><a href=\"#共享目录配置完成后，重启-NFS-服务\" class=\"headerlink\" title=\"共享目录配置完成后，重启 NFS 服务\"></a>共享目录配置完成后，重启 NFS 服务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart nfs</span><br></pre></td></tr></table></figure>\n<h1 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h1><h2 id=\"检查服务端共享目录\"><a href=\"#检查服务端共享目录\" class=\"headerlink\" title=\"检查服务端共享目录\"></a>检查服务端共享目录</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">showmount -e <span class=\"variable\">$client_ip</span></span><br><span class=\"line\"><span class=\"comment\"># Export list for $client_ip:</span></span><br><span class=\"line\"><span class=\"comment\"># /tmp/nfs_data 10.1.0.1/24</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"安装NFS-1\"><a href=\"#安装NFS-1\" class=\"headerlink\" title=\"安装NFS\"></a>安装NFS</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用yum 安装 NFS</span></span><br><span class=\"line\">yum install nfs-utils</span><br></pre></td></tr></table></figure>\n<h2 id=\"客户端连接-NFS\"><a href=\"#客户端连接-NFS\" class=\"headerlink\" title=\"客户端连接 NFS\"></a>客户端连接 NFS</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建客户端目录</span></span><br><span class=\"line\">mkdir -p /tmp/nfs_data</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 挂载目录</span></span><br><span class=\"line\">mount -t nfs <span class=\"variable\">$server_ip</span>:/tmp/nfs_data /tmp/nfs_data</span><br></pre></td></tr></table></figure>\n","categories":["开新地图"],"tags":["Linux","NFS"]},{"title":"docker buildx","url":"https://chiaralee.gitee.io/2022/01/11/docker-buildx/","content":"<h1 id=\"docker-buildx\"><a href=\"#docker-buildx\" class=\"headerlink\" title=\"docker buildx\"></a>docker buildx</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>参考</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>docker buildx prune -f</td>\n<td><a class=\"link\"   href=\"https://docs.docker.com/engine/reference/commandline/buildx_prune/\" >https://docs.docker.com/engine/reference/commandline/buildx_prune/<i class=\"fas fa-external-link-alt\"></i></a></td>\n<td>强制清楚构建器缓存</td>\n</tr>\n<tr>\n<td>docker buildx imagetools inspect [OPTIONS] NAME</td>\n<td><a class=\"link\"   href=\"https://docs.docker.com/engine/reference/commandline/buildx_imagetools_inspect/\" >https://docs.docker.com/engine/reference/commandline/buildx_imagetools_inspect/<i class=\"fas fa-external-link-alt\"></i></a></td>\n<td>查看构建的镜像信息</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"容器内使用docker-buildx\"><a href=\"#容器内使用docker-buildx\" class=\"headerlink\" title=\"容器内使用docker buildx\"></a>容器内使用docker buildx</h2><blockquote>\n<p><a class=\"link\"   href=\"https://github.com/docker/buildx#from-dockerfile\" >https://github.com/docker/buildx#from-dockerfile<i class=\"fas fa-external-link-alt\"></i></a></p>\n</blockquote>\n<p>Here is how to use buildx inside a Dockerfile through the <a href=\"https://hub.docker.com/r/docker/buildx-bin\"><code>docker/buildx-bin</code></a> image:</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> docker</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> --from=docker/buildx-bin /buildx /usr/libexec/docker/cli-plugins/docker-buildx</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> docker buildx version</span></span><br></pre></td></tr></table></figure>\n","categories":["开新地图"],"tags":["Docker","arm","amd"]},{"title":"多版本go环境的管理和切换","url":"https://chiaralee.gitee.io/2021/11/10/多版本go环境的管理和切换/","content":"<blockquote>\n<p>项目地址：<a class=\"link\"   href=\"https://github.com/voidint/g\" >https://github.com/voidint/g<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>下载地址：<a class=\"link\"   href=\"https://github.com/voidint/g/releases\" >https://github.com/voidint/g/releases<i class=\"fas fa-external-link-alt\"></i></a></p>\n</blockquote>\n<h1 id=\"下载地址\"><a href=\"#下载地址\" class=\"headerlink\" title=\"下载地址\"></a>下载地址</h1><p>dockerhub：<a class=\"link\"   href=\"https://hub.docker.com/_/golang?tab=tags&amp;page=1&amp;name=1.11\" >https://hub.docker.com/_/golang?tab=tags&amp;page=1&amp;name=1.11<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>g工具使用：<a class=\"link\"   href=\"https://blog.csdn.net/cf313995/article/details/109517921\" >https://blog.csdn.net/cf313995/article/details/109517921<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>国内加速镜像：<a class=\"link\"   href=\"https://www.cnblogs.com/sunnydou/p/15035161.html\" >https://www.cnblogs.com/sunnydou/p/15035161.html<i class=\"fas fa-external-link-alt\"></i></a></p>\n","categories":["工具"],"tags":["golang","g"]},{"title":"npm vs yarn","url":"https://chiaralee.gitee.io/2021/10/21/npm-vs-yarn/","content":"<blockquote>\n<p>REF：<a class=\"link\"   href=\"http://yarnpkg.top/CLI.html\" >http://yarnpkg.top/CLI.html<i class=\"fas fa-external-link-alt\"></i></a></p>\n</blockquote>\n<h1 id=\"镜像源\"><a href=\"#镜像源\" class=\"headerlink\" title=\"镜像源\"></a>镜像源</h1><h2 id=\"常用镜像源们\"><a href=\"#常用镜像源们\" class=\"headerlink\" title=\"常用镜像源们\"></a>常用镜像源们</h2><ul>\n<li>npm —- <a class=\"link\"   href=\"https://registry.npmjs.org/\" >https://registry.npmjs.org/<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>cnpm —- <a class=\"link\"   href=\"https://r.cnpmjs.org/\" >https://r.cnpmjs.org/<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>taobao —- <a class=\"link\"   href=\"https://registry.npm.taobao.org/\" >https://registry.npm.taobao.org/<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>nj —- <a class=\"link\"   href=\"https://registry.nodejitsu.com/\" >https://registry.nodejitsu.com/<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>rednpm —- <a class=\"link\"   href=\"https://registry.mirror.cqupt.edu.cn/\" >https://registry.mirror.cqupt.edu.cn/<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>npmMirror —- <a class=\"link\"   href=\"https://skimdb.npmjs.com/registry/\" >https://skimdb.npmjs.com/registry/<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>deunpm —- <a class=\"link\"   href=\"http://registry.enpmjs.org/\" >http://registry.enpmjs.org/<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<h2 id=\"查看源和换源\"><a href=\"#查看源和换源\" class=\"headerlink\" title=\"查看源和换源\"></a>查看源和换源</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>描述</th>\n<th>npm</th>\n<th>yarn</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>查看当前镜像源</td>\n<td>npm config get registry</td>\n<td>yarn config get registry</td>\n</tr>\n<tr>\n<td>设置镜像源</td>\n<td>npm config set registry <a class=\"link\"   href=\"https://registry.npm.taobao.org/\" >https://registry.npm.taobao.org/<i class=\"fas fa-external-link-alt\"></i></a></td>\n<td>yarn config set registry <a class=\"link\"   href=\"https://registry.npm.taobao.org/\" >https://registry.npm.taobao.org/<i class=\"fas fa-external-link-alt\"></i></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>还可以直接打开npm 配置文件设置源</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config edit</span><br></pre></td></tr></table></figure>\n<h1 id=\"依赖管理\"><a href=\"#依赖管理\" class=\"headerlink\" title=\"依赖管理\"></a>依赖管理</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>描述</th>\n<th>npm</th>\n<th>yarn</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>项目安装所有依赖</td>\n<td>npm [install/i]</td>\n<td>yarn</td>\n</tr>\n<tr>\n<td>项目卸载所有依赖</td>\n<td>npm [uninstall/un]</td>\n<td>yarn remove</td>\n</tr>\n<tr>\n<td>全局安装</td>\n<td>npm install <package...> [–-global/-g]</td>\n<td>yarn global add <package...></td>\n</tr>\n<tr>\n<td>安装依赖</td>\n<td>npm [install/i] <package...> [—save/-S]</td>\n<td>yarn add <package...></td>\n</tr>\n<tr>\n<td>开发模式安装依赖</td>\n<td>npm [install/i] <package...> [—save-dev/-D]</td>\n<td>yarn add <package...> [—dev/-D]</td>\n</tr>\n<tr>\n<td>卸载依赖</td>\n<td>npm [uninstall/un] <package...></td>\n<td>yarn remove <package...></td>\n</tr>\n<tr>\n<td>更新依赖</td>\n<td>npm update —save</td>\n<td>yarn upgrade</td>\n</tr>\n<tr>\n<td>全局更新</td>\n<td>npm update –-global</td>\n<td>yarn global upgrade</td>\n</tr>\n<tr>\n<td>清除缓存</td>\n<td>npm cache clean</td>\n<td>yarn cache clean</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"升级依赖包\"><a href=\"#升级依赖包\" class=\"headerlink\" title=\"升级依赖包\"></a>升级依赖包</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 需要手动选择升级的依赖包，按空格键选择，a 键切换所有，i 键反选选择</span></span><br><span class=\"line\">yarn upgrade-interactive --latest</span><br></pre></td></tr></table></figure>\n<h1 id=\"React-条件渲染\"><a href=\"#React-条件渲染\" class=\"headerlink\" title=\"React 条件渲染\"></a>React 条件渲染</h1><h2 id=\"JSX中的-if-else-语句\"><a href=\"#JSX中的-if-else-语句\" class=\"headerlink\" title=\"JSX中的 if else 语句\"></a>JSX中的 if else 语句</h2><p>在 JSX 中注入 if-else 语句仅适用于立即调用函数表达式（IIFE），如下：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> (</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    &#123;(() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"xml\">      if (flag) &#123;</span></span><br><span class=\"line\"><span class=\"xml\">        return <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>hiahiahia.<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>;</span></span><br><span class=\"line\"><span class=\"xml\">      &#125;</span></span><br><span class=\"line\"><span class=\"xml\">    &#125;)()&#125;</span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h2 id=\"JSX中的三元运算符\"><a href=\"#JSX中的三元运算符\" class=\"headerlink\" title=\"JSX中的三元运算符\"></a>JSX中的三元运算符</h2><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;flag ? <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>hiahiahia.<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> : null&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>; </span><br></pre></td></tr></table></figure>\n<h2 id=\"JSX中的-amp-amp-运算符\"><a href=\"#JSX中的-amp-amp-运算符\" class=\"headerlink\" title=\"JSX中的&amp;&amp;运算符\"></a>JSX中的&amp;&amp;运算符</h2><p>当不必去执行”else”块中的代码时（即，else {null}），可使用 <code>&amp;&amp;</code> 运算符进行简单的条件渲染。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;flag &amp;&amp; <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>hiahiahia.<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>; </span><br></pre></td></tr></table></figure>\n<h2 id=\"JSX中的switch语句\"><a href=\"#JSX中的switch语句\" class=\"headerlink\" title=\"JSX中的switch语句\"></a>JSX中的switch语句</h2><p>当有且只有一个变量作为判断条件时，可使用 <code>swtich</code> 进行多条件渲染。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> (</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    &#123;(() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"xml\">      switch (status) &#123;</span></span><br><span class=\"line\"><span class=\"xml\">        case &quot;success&quot;:</span></span><br><span class=\"line\"><span class=\"xml\">          return <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>hiahiahia.<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>;</span></span><br><span class=\"line\"><span class=\"xml\">        case &quot;failed&quot;:</span></span><br><span class=\"line\"><span class=\"xml\">          return <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>hiahiahiahia.<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>;</span></span><br><span class=\"line\"><span class=\"xml\">        default:</span></span><br><span class=\"line\"><span class=\"xml\">          return <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>hiahiahiahiah.<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>;</span></span><br><span class=\"line\"><span class=\"xml\">      &#125;</span></span><br><span class=\"line\"><span class=\"xml\">    &#125;)()&#125;</span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">); </span><br></pre></td></tr></table></figure>\n<h1 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h1><h2 id=\"umijs-runtime-load-component-failed-Error-Module-“-hox”-does-not-exist-in-container\"><a href=\"#umijs-runtime-load-component-failed-Error-Module-“-hox”-does-not-exist-in-container\" class=\"headerlink\" title=\"[@umijs/runtime] load component failed Error: Module “./hox” does not exist in container.\"></a>[@umijs/runtime] load component failed Error: Module “./hox” does not exist in container.</h2><h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>项目使用umi 框架，并使用 mfsu 开启了热更新，引入新的依赖包后，代码编译运行正常，但浏览器F12在Console出现异常打印：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">devScripts.js:<span class=\"number\">6523</span> [@umijs/runtime] load component failed <span class=\"built_in\">Error</span>: Module <span class=\"string\">&quot;./hox&quot;</span> does not exist <span class=\"keyword\">in</span> container.</span><br><span class=\"line\"><span class=\"keyword\">while</span> loading <span class=\"string\">&quot;./hox&quot;</span> <span class=\"keyword\">from</span> webpack/container/reference/mf</span><br><span class=\"line\">    at mf-va_remoteEntry.js:<span class=\"number\">663</span> </span><br></pre></td></tr></table></figure>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>删除 <code>src/.umi</code> 文件夹，相当于清缓存</p>\n","categories":["前端技术栈"],"tags":["npm","yarn"]},{"title":"List、数组","url":"https://chiaralee.gitee.io/2021/09/27/List、数组/","content":"<h1 id=\"List转数组\"><a href=\"#List转数组\" class=\"headerlink\" title=\"List转数组\"></a>List转数组</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.google.common.collect.Lists;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    List&lt;String&gt; list = Lists.newArrayList(<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;c&quot;</span>);</span><br><span class=\"line\">    String[] arrays = list.toArray(String[]::<span class=\"keyword\">new</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["JavaSE"],"tags":["JavaSE"]},{"title":"Date、LocalDateTime、Timestamp","url":"https://chiaralee.gitee.io/2021/09/23/Date、LocalDateTime、Timestamp/","content":"<h1 id=\"LocalDateTime转Date\"><a href=\"#LocalDateTime转Date\" class=\"headerlink\" title=\"LocalDateTime转Date\"></a>LocalDateTime转Date</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.time.LocalDateTime;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.time.ZoneOffset;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TimeExample</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    LocalDateTime localDateTime = LocalDateTime.now();</span><br><span class=\"line\">    Date date = Date.from(localDateTime.atZone(ZoneOffset.ofHours(<span class=\"number\">8</span>)).toInstant());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;LocalDateTime: &quot;</span> + localDateTime);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Date: &quot;</span> + date);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"Date转LocalDateTime\"><a href=\"#Date转LocalDateTime\" class=\"headerlink\" title=\"Date转LocalDateTime\"></a>Date转LocalDateTime</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.time.LocalDateTime;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.time.ZoneOffset;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TimeExample</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Date date = <span class=\"keyword\">new</span> Date();</span><br><span class=\"line\">    LocalDateTime localDateTime = date.toInstant().atZone(ZoneOffset.ofHours(<span class=\"number\">8</span>)).toLocalDateTime();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Date: &quot;</span> + date);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;LocalDateTime: &quot;</span> + localDateTime);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"LocalDateTime转Timestamp\"><a href=\"#LocalDateTime转Timestamp\" class=\"headerlink\" title=\"LocalDateTime转Timestamp\"></a>LocalDateTime转Timestamp</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.time.LocalDateTime;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.time.ZoneOffset;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TimeExample</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    LocalDateTime localDateTime = LocalDateTime.now();</span><br><span class=\"line\">    <span class=\"keyword\">long</span> timestamp = localDateTime.toInstant(ZoneOffset.ofHours(<span class=\"number\">8</span>)).toEpochMilli();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Timestamp: &quot;</span> + timestamp);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;LocalDateTime: &quot;</span> + localDateTime);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"Timestamp转LocalDateTime\"><a href=\"#Timestamp转LocalDateTime\" class=\"headerlink\" title=\"Timestamp转LocalDateTime\"></a>Timestamp转LocalDateTime</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.time.LocalDateTime;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.time.ZoneOffset;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TimeExample</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> timestamp = System.currentTimeMillis();</span><br><span class=\"line\">    LocalDateTime localDateTime =</span><br><span class=\"line\">        Instant.ofEpochMilli(timestamp).atZone(ZoneOffset.ofHours(<span class=\"number\">8</span>)).toLocalDateTime();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Timestamp: &quot;</span> + timestamp);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;LocalDateTime: &quot;</span> + localDateTime);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["JavaSE"],"tags":["JavaSE"]},{"title":"【ALL-IN】Docker常用命令","url":"https://chiaralee.gitee.io/2021/09/23/【ALL-IN】Docker常用命令/","content":"<h1 id=\"账号密码\"><a href=\"#账号密码\" class=\"headerlink\" title=\"账号密码\"></a>账号密码</h1><p>Linux服务器上，密码存储路径为：<code>~/.docker/config.json</code></p>\n<h1 id=\"docker-清理\"><a href=\"#docker-清理\" class=\"headerlink\" title=\"docker 清理\"></a>docker 清理</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 删除异常停止的docker容器</span></span><br><span class=\"line\">docker rm `docker ps -a | grep Exited | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>`</span><br><span class=\"line\"><span class=\"comment\"># 删除名称或标签为none的镜像</span></span><br><span class=\"line\">docker rmi -f `docker images | grep <span class=\"string\">&#x27;&lt;none&gt;&#x27;</span> | awk <span class=\"string\">&#x27;&#123;print $3&#125;&#x27;</span>`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除latest的镜像</span></span><br><span class=\"line\">docker rmi `docker images | grep <span class=\"string\">&#x27;latest&#x27;</span> | awk <span class=\"string\">&#x27;&#123;print $1&quot;:&quot;$2&#125;&#x27;</span>`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用于删除悬挂和未被使用的图像</span></span><br><span class=\"line\">docker image prune -a</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"Proxy\"><a href=\"#Proxy\" class=\"headerlink\" title=\"Proxy\"></a>Proxy</h1><blockquote>\n<p>REF：<a class=\"link\"   href=\"https://docs.docker.com/network/proxy/\" >https://docs.docker.com/network/proxy/<i class=\"fas fa-external-link-alt\"></i></a></p>\n</blockquote>\n<p>通过Env配置容器代理</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Dockerfile example</th>\n<th>docker run example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HTTP_PROXY</td>\n<td>ENV HTTP_PROXY=”<a class=\"link\"   href=\"http://192.168.1.12:3128\" >http://192.168.1.12:3128<i class=\"fas fa-external-link-alt\"></i></a>“</td>\n<td>—env HTTP_PROXY=”<a class=\"link\"   href=\"http://192.168.1.12:3128\" >http://192.168.1.12:3128<i class=\"fas fa-external-link-alt\"></i></a>“</td>\n</tr>\n<tr>\n<td>HTTPS_PROXY</td>\n<td>ENV HTTPS_PROXY=”<a class=\"link\"   href=\"https://192.168.1.12:3128\" >https://192.168.1.12:3128<i class=\"fas fa-external-link-alt\"></i></a>“</td>\n<td>—env HTTPS_PROXY=”<a class=\"link\"   href=\"https://192.168.1.12:3128\" >https://192.168.1.12:3128<i class=\"fas fa-external-link-alt\"></i></a>“</td>\n</tr>\n<tr>\n<td>FTP_PROXY</td>\n<td>ENV FTP_PROXY=”ftp://192.168.1.12:3128”</td>\n<td>—env FTP_PROXY=”ftp://192.168.1.12:3128”</td>\n</tr>\n<tr>\n<td>ALL_PROXY</td>\n<td>ENV ALL_PROXY=”<a class=\"link\"   href=\"https://192.168.1.12:3128\" >https://192.168.1.12:3128<i class=\"fas fa-external-link-alt\"></i></a>“</td>\n<td>—env ALL_PROXY=”<a class=\"link\"   href=\"https://192.168.1.12:3128\" >https://192.168.1.12:3128<i class=\"fas fa-external-link-alt\"></i></a>“</td>\n</tr>\n<tr>\n<td>NO_PROXY</td>\n<td>ENV NO_PROXY=”*.test.example.com,.example2.com”</td>\n<td>—env NO_PROXY=”*.test.example.com,.example2.com”</td>\n</tr>\n</tbody>\n</table>\n</div>\n","categories":["Docker"],"tags":["Docker","all-in"]},{"title":"Mathjax|hexo中插入数学公式","url":"https://chiaralee.gitee.io/2021/08/22/Mathjax-hexo中插入数学公式/","content":"<p>REF：</p>\n<p><a class=\"link\"   href=\"https://blog.csdn.net/u014630987/article/details/78670258\" >如何在hexo中支持Mathjax？<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\"   href=\"https://blog.csdn.net/littlehaes/article/details/84370393\" >在hexo中使用mathjax的方法<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\"   href=\"https://zhuanlan.zhihu.com/p/33857596\" >Hexo博客使用MathJax公式并解决Markdown渲染冲突问题<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><a class=\"link\"   href=\"https://www.mathelounge.de/509545/mathjax-latex-basic-tutorial-und-referenz-deutsch\" >MathJax: LaTeX Basic Tutorial und Referenz (Deutsch)<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h1 id=\"使用Kramed代替Marked\"><a href=\"#使用Kramed代替Marked\" class=\"headerlink\" title=\"使用Kramed代替Marked\"></a>使用Kramed代替Marked</h1><p><code>hexo</code> 默认的渲染引擎是 <code>marked</code>，但 <code>marked</code> 不支持 <code>mathjax</code>， <code>kramed</code> 是在 <code>marked</code> 的基础上进行修改。在工程目录下执行以下命令来安装 <code>kramed</code>。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-renderer-marked --save</span><br><span class=\"line\">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure>\n<p>进入：博客根目录/node_modules/hexo-renderer-kramed/lib/，修改 <code>renderer.js</code>文件内容（修改L67）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Change inline math rule</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">formatText</span>(<span class=\"params\">text</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// Fit kramed&#x27;s rule: $$ + \\1 + $$</span></span><br><span class=\"line\">  <span class=\"comment\">// return text.replace(/`\\$(.*?)\\$`/g, &#x27;$$$$$1$$$$&#x27;); // L67，内容修改为：</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> text;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用hexo-renderer-mathjax-代替-hexo-math\"><a href=\"#使用hexo-renderer-mathjax-代替-hexo-math\" class=\"headerlink\" title=\"使用hexo-renderer-mathjax 代替 hexo-math\"></a>使用hexo-renderer-mathjax 代替 hexo-math</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-math --save</span><br><span class=\"line\">npm install hexo-renderer-mathjax --save</span><br></pre></td></tr></table></figure>\n<h1 id=\"更新-Mathjax-的-CDN-链接\"><a href=\"#更新-Mathjax-的-CDN-链接\" class=\"headerlink\" title=\"更新 Mathjax 的 CDN 链接\"></a>更新 Mathjax 的 CDN 链接</h1><p>进入：博客根目录/node_modules/kramed/lib/rules/，修改 <code>inline.js</code> 文件内容（修改L15中script的src）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">L15：原文配置</span></span><br><span class=\"line\"><span class=\"comment\">&lt;script src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"更改默认转义规则\"><a href=\"#更改默认转义规则\" class=\"headerlink\" title=\"更改默认转义规则\"></a>更改默认转义规则</h1><p>进入：博客根目录/node_modules/kramed/lib/rules/，修改 <code>inline.js</code> 文件内容（修改L11、L20)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// escape: /^\\\\([\\\\`*&#123;&#125;\\[\\]()#$+\\-.!_&gt;])/, // L11内容修改为：</span></span><br><span class=\"line\"><span class=\"attr\">escape</span>: <span class=\"regexp\">/^\\\\([`*\\[\\]()#$+\\-.!_&gt;])/</span>,</span><br><span class=\"line\"><span class=\"comment\">// em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/, // L20内容修改为：</span></span><br><span class=\"line\">em: <span class=\"regexp\">/^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/</span>,</span><br></pre></td></tr></table></figure>\n<h1 id=\"开启mathjax\"><a href=\"#开启mathjax\" class=\"headerlink\" title=\"开启mathjax\"></a>开启mathjax</h1><p>进入：博客根目录，配置 <code>_config.yml</code> 文件mathjax属性</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># MathJax Support</span></span><br><span class=\"line\"><span class=\"attr\">mathjax:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">per_page:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">cdn:</span> <span class=\"string\">//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML</span></span><br></pre></td></tr></table></figure>\n<p>再在需要插入数学公式的文章标题，新增mathjax: true</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Mathjax|hexo中插入数学公式</span><br><span class=\"line\">date: 2021-08-22 20:35:27</span><br><span class=\"line\">tags: [Markdown, hexo, Mathjax]</span><br><span class=\"line\">categories: [工具]</span><br><span class=\"line\"><span class=\"section\">mathjax: true</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"常用LaTex代码\"><a href=\"#常用LaTex代码\" class=\"headerlink\" title=\"常用LaTex代码\"></a>常用LaTex代码</h1><ul>\n<li><code>\\frac</code>：分子分母之间的横线<ul>\n<li>$y=\\frac{1}{x}$</li>\n</ul>\n</li>\n<li><code>_</code>：下标<ul>\n<li>$x_i$</li>\n</ul>\n</li>\n<li><code>^</code>：上标<ul>\n<li>$x^i$</li>\n</ul>\n</li>\n<li><code>\\sum</code>：累加器，上下标用上述编码<ul>\n<li>$\\sum_{i=0}^n$</li>\n</ul>\n</li>\n<li><code>\\delta</code>、<code>\\Delta</code>：希腊字母，大小写由首字母控制<ul>\n<li>$\\delta$：小写delta</li>\n<li>$\\Delta$：大写delta</li>\n</ul>\n</li>\n</ul>\n","categories":["工具"],"tags":["Markdown","hexo","Mathjax"]},{"title":"中级经济师","url":"https://chiaralee.gitee.io/2021/08/22/中级经济师/","content":"<h1 id=\"等式们\"><a href=\"#等式们\" class=\"headerlink\" title=\"等式们\"></a>等式们</h1><h2 id=\"分子分母式：\"><a href=\"#分子分母式：\" class=\"headerlink\" title=\"分子分母式：\"></a>分子分母式：</h2><h3 id=\"需求价格弹性\"><a href=\"#需求价格弹性\" class=\"headerlink\" title=\"需求价格弹性\"></a>需求价格弹性</h3><p>$E_d=|\\frac{\\Delta Q/Q}{\\Delta P/P}|$</p>\n<ul>\n<li>E：Elasticity 弹性</li>\n<li>$_d$：Demand 需求</li>\n<li>Q：Quantity 数量</li>\n<li>P：Price 价格</li>\n</ul>\n<h4 id=\"需求价格弧弹性系数\"><a href=\"#需求价格弧弹性系数\" class=\"headerlink\" title=\"需求价格弧弹性系数\"></a>需求价格弧弹性系数</h4><p>$E_d=|\\frac{\\Delta Q/{\\frac{(Q_0+Q_1)}{2}}}{\\Delta P/{\\frac{(P_0+P_1)}{2}}}|$</p>\n<h3 id=\"平均产量\"><a href=\"#平均产量\" class=\"headerlink\" title=\"平均产量\"></a>平均产量</h3><p>$AP=\\frac{TP}{L}$</p>\n<ul>\n<li>AP：Average Product 平均产量</li>\n<li>TP：Total Product 总产量</li>\n<li>L：Labor 投入</li>\n</ul>\n","categories":["经济"],"tags":["支线任务","经济基础"]},{"title":"SpringCloud Alibaba 初探","url":"https://chiaralee.gitee.io/2021/08/13/SpringCloud-Alibaba-初探/","content":"<h1 id=\"SpringCloud-Alibaba\"><a href=\"#SpringCloud-Alibaba\" class=\"headerlink\" title=\"SpringCloud Alibaba\"></a>SpringCloud Alibaba</h1><ul>\n<li>Sentinel：把流量作为切入点，从<strong>流量控制</strong>、熔断降级、系统负载保护等多个维度保护服务的稳定性。</li>\n<li>Nacos：一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。</li>\n<li>RocketMQ：一款开源的分布式消息系统，基于高可用分布式集群技术，提供低延时的、高可靠的消息发布与订阅服务。</li>\n<li>Dubbo：Apache Dubbo™ 是一款高性能Java RPC框架。</li>\n<li>Seata：阿里巴巴开源产品，一个易于使用的高性能微服务分布式事务解决方案。</li>\n</ul>\n","categories":["Spring","开新地图"],"tags":["Spring","SpringCloud"]},{"title":"在WebStorm上跳过的坑们","url":"https://chiaralee.gitee.io/2021/08/11/在WebStorm上跳过的坑们/","content":"<h1 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h1><p>因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。</p>\n<ul>\n<li>报错信息如下：</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">PS</span> D:\\.MegrezCode\\qiankun_demo&gt; tyarn <span class=\"literal\">-v</span></span><br><span class=\"line\">tyarn : 无法加载文件 C:\\Users\\<span class=\"number\">32722</span>\\AppData\\Roaming\\npm\\tyarn.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=<span class=\"number\">135170</span> 中的 about_Execution_Policies。</span><br><span class=\"line\">所在位置 行:<span class=\"number\">1</span> 字符: <span class=\"number\">1</span></span><br><span class=\"line\">+ tyarn <span class=\"literal\">-v</span></span><br><span class=\"line\">+ ~~~~~</span><br><span class=\"line\">    + CategoryInfo          : SecurityError: (:) []，PSSecurityException</span><br><span class=\"line\">    + FullyQualifiedErrorId : UnauthorizedAccess</span><br></pre></td></tr></table></figure>\n<h2 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h2><p>设置执行策略，在任意 <code>Windows PowerShell</code> 窗口中，输入以下指令</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set-executionpolicy</span> remotesigned</span><br></pre></td></tr></table></figure>\n<p>如下图所示操作：</p>\n<p><img src=\"Snipaste_2021-08-11_12-00-46.png\" alt=\"执行策略更改\"></p>\n","categories":["工具"],"tags":["WebStorm"]},{"title":"qiankun初探","url":"https://chiaralee.gitee.io/2021/08/11/qiankun初探/","content":"<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装yarn</span></span><br><span class=\"line\">npm i yarn tyarn -g</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 创建项目目录</span></span><br><span class=\"line\">mkdir myapp &amp;&amp; cd myapp</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 通过官方工具创建项目</span></span><br><span class=\"line\">yarn create @umijs/umi-app</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装依赖</span></span><br><span class=\"line\">yarn</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 启动项目</span></span><br><span class=\"line\">yarn start</span><br></pre></td></tr></table></figure>\n","categories":["开新地图","前端技术栈"],"tags":["umi","qiankun"]},{"title":"Jenkins初探","url":"https://chiaralee.gitee.io/2021/07/26/Jenkins初探/","content":"<h1 id=\"容器化部署\"><a href=\"#容器化部署\" class=\"headerlink\" title=\"容器化部署\"></a>容器化部署</h1><h2 id=\"官方镜像\"><a href=\"#官方镜像\" class=\"headerlink\" title=\"官方镜像\"></a>官方镜像</h2><ul>\n<li><a class=\"link\"   href=\"https://hub.docker.com/r/jenkins/jenkins\" >dockerhub-jenkins<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>REF: <a class=\"link\"   href=\"https://www.jenkins.io/zh/blog/2018/12/10/the-official-Docker-image/\" >Docker Hub 上的官方 Jenkins 镜像<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<h2 id=\"运行容器\"><a href=\"#运行容器\" class=\"headerlink\" title=\"运行容器\"></a>运行容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name jenkins_server -d \\</span><br><span class=\"line\">-p 50000:50000 -p 8080:8080 \\</span><br><span class=\"line\">--restart=always -u 0 \\</span><br><span class=\"line\">-v /usr/bin/docker:/usr/bin/docker \\</span><br><span class=\"line\">-v /var/run/docker.sock:/var/run/docker.sock \\</span><br><span class=\"line\">-v /usr/lib64/libltdl.so.7:/usr/lib64/libltdl.so.7 \\</span><br><span class=\"line\">-v /opt/jenkins_data:/var/jenkins_home \\</span><br><span class=\"line\">jenkins/jenkins:lts-centos</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p><code>-u 0</code>：因-v使用主机上的文件夹，故需指定root账号启动</p>\n<blockquote>\n<p>Tips：若未指定-u，启动容器时将出现如下异常日志打印：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch: cannot touch &#x27;/var/jenkins_home/copy_reference_file.log&#x27;: Permission denied</span><br><span class=\"line\">Can not write to /var/jenkins_home/copy_reference_file.log. Wrong volume permissions?</span><br></pre></td></tr></table></figure>\n<p>REF：</p>\n<p>NOTE: Avoid using a <a class=\"link\"   href=\"https://docs.docker.com/storage/bind-mounts/\" >bind mount<i class=\"fas fa-external-link-alt\"></i></a> from a folder on the host machine into <code>/var/jenkins_home</code>, as this might result in file permission issues (the user used inside the container might not have rights to the folder on the host machine). If you <em>really</em> need to bind mount jenkins_home, ensure that the directory on the host is accessible by the jenkins user inside the container (jenkins user - uid 1000) or use <code>-u some_other_user</code> parameter with <code>docker run</code>.</p>\n<p>——以上摘自《<a class=\"link\"   href=\"https://github.com/jenkinsci/docker\" >Official Jenkins Docker image<i class=\"fas fa-external-link-alt\"></i></a>》</p>\n</blockquote>\n</li>\n<li><p><code>-v /usr/bin/docker:/usr/bin/docker</code>：将宿主机的docker命令挂载到容器中</p>\n<ul>\n<li>可以使用which docker命令查看具体位置</li>\n<li>或者把挂载的参数改为: -v $(which docker):/usr/bin/docker</li>\n</ul>\n</li>\n<li><p><code>-v /var/run/docker.sock:/var/run/docker.sock</code>：容器中的进程可以通过它与Docker守护进程进行通信</p>\n</li>\n<li><p><code>-v /usr/lib64/libltdl.so.7:/usr/lib64/libltdl.so.7</code>：libltdl.so.7是Docker命令执行所依赖的函数库</p>\n<ul>\n<li>可以通过whereis libltdl.so.7命令查看具体位置</li>\n<li>centos7位置/usr/lib64/libltdl.so.7</li>\n<li>ubuntu位置/usr/lib/x86_64-linux-gnu/libltdl.so.7</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"排坑\"><a href=\"#排坑\" class=\"headerlink\" title=\"排坑\"></a>排坑</h1><h2 id=\"已存在的Workspace文件清理\"><a href=\"#已存在的Workspace文件清理\" class=\"headerlink\" title=\"已存在的Workspace文件清理\"></a>已存在的Workspace文件清理</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 检索出大文件夹：工作目录文件夹 &gt; 500M</span><br><span class=\"line\">du -sm /opt/jenkins_workspace/workspace/* | awk &#x27;$1&gt;500&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除上述目录（谨慎操作）</span><br><span class=\"line\">du -sm /opt/jenkins_workspace/workspace/* | awk &#x27;$1&gt;500&#x27;  |awk &#x27;&#123;print $2&#125;&#x27;  |xargs rm -rf </span><br></pre></td></tr></table></figure>\n","categories":["开新地图","CI/CD"],"tags":["Jenkins","CI/CD"]},{"title":"JVM-参数配置","url":"https://chiaralee.gitee.io/2021/07/23/JVM-参数配置/","content":"<blockquote>\n<p><a class=\"link\"   href=\"https://docs.oracle.com/cd/E13150_01/jrockit_jvm/jrockit/jrdocs/refman/optionX.html\" >-X Command-line Options<i class=\"fas fa-external-link-alt\"></i></a></p>\n</blockquote>\n<h1 id=\"Xms\"><a href=\"#Xms\" class=\"headerlink\" title=\"-Xms\"></a>-Xms</h1><h2 id=\"释义\"><a href=\"#释义\" class=\"headerlink\" title=\"释义\"></a>释义</h2><ul>\n<li>设置初始化时最小堆内存（The <code>-Xms</code> option sets the <strong>initial</strong> and <strong>minimum</strong> Java heap size.）</li>\n<li>并不限制内存使用总量（<code>-Xms</code> <em>does not</em> limit the <strong>total</strong> amount of memory that the JVM can use.）</li>\n</ul>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><ul>\n<li><p>格式为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-Xms&lt;size&gt;[g|G|m|M|k|K]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>举个栗子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 未显示指定单位时，默认单位取bytes</span></span><br><span class=\"line\">java -Xms:64m myApp</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"默认值\"><a href=\"#默认值\" class=\"headerlink\" title=\"默认值\"></a>默认值</h2><ul>\n<li>-server 模式时：系统中可用物理内存的25%（最少8MB，最多64MB）</li>\n<li>-client 模式时：系统中可用物理内存的25%（最少8MB，最多16MB）</li>\n<li>若指定 <code>-Xns</code> ，则默认为 <code>-Xns</code> 的两倍</li>\n</ul>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><ul>\n<li>最小值为8MB（JRockit JVM）</li>\n<li>不可超过配置的 <code>-Xmx</code> 取值</li>\n<li>为获得最佳性能，推荐与 <code>-Xmx</code> 取值相同（避免由于堆内存扩缩导致的应用停顿，避免GC完成后JVM重新分配内存）</li>\n</ul>\n<h1 id=\"Xmx\"><a href=\"#Xmx\" class=\"headerlink\" title=\"-Xmx\"></a>-Xmx</h1><h2 id=\"释义-1\"><a href=\"#释义-1\" class=\"headerlink\" title=\"释义\"></a>释义</h2><ul>\n<li>设置最大堆内存（This option sets the maximum Java heap size.）</li>\n<li>并不限制内存使用总量（<code>-Xmx</code> <em>does not</em> limit the <strong>total</strong> amount of memory that the JVM can use.）</li>\n</ul>\n<h2 id=\"语法-1\"><a href=\"#语法-1\" class=\"headerlink\" title=\"语法\"></a>语法</h2><ul>\n<li><p>格式为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-Xmx&lt;size&gt;[g|G|m|M|k|K]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>举个栗子</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 未显示指定单位时，默认单位取bytes</span></span><br><span class=\"line\">java -Xmx:1g myApp</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"默认值-1\"><a href=\"#默认值-1\" class=\"headerlink\" title=\"默认值\"></a>默认值</h2><p>取决于平台。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>Release</th>\n<th>Platform</th>\n<th>Default Maximum Heap Size</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>R27.2 and older</td>\n<td>Windows</td>\n<td>75% of total physical memory up to 1 GB</td>\n</tr>\n<tr>\n<td>R27.2 and older</td>\n<td>Linux, Solaris</td>\n<td>50% of available physical memory up to 1 GB</td>\n</tr>\n<tr>\n<td>R27.3 and newer</td>\n<td>Windows on a 64 bit platform</td>\n<td>75% of total physical memory up to 2 GB</td>\n</tr>\n<tr>\n<td>R27.3 and newer</td>\n<td>Linux or Solaris on a 64 bit platform</td>\n<td>50% of available physical memory up to 2 GB</td>\n</tr>\n<tr>\n<td>R72.3 and newer</td>\n<td>Windows on a 32 bit platform</td>\n<td>75% of total physical memory up to 1 GB</td>\n</tr>\n<tr>\n<td>R27.3 and newer</td>\n<td>Linux on a 32 bit platform</td>\n<td>50% of available physical memory up to 1 GB</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"注意事项-1\"><a href=\"#注意事项-1\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><ul>\n<li>最小值为16 MB</li>\n<li>若同时指定 <code>-Xmx</code> <code>-Xms</code> ，则 <code>-Xmx</code> ≥ <code>-Xms</code></li>\n<li>若同时指定 <code>-Xmx</code> <code>-Xns</code> ，则 <code>-Xmx</code> ≥ <code>-Xns</code></li>\n</ul>\n","categories":["JVM"],"tags":["JVM"]},{"title":"Integer装箱&拆箱","url":"https://chiaralee.gitee.io/2021/06/24/Integer装箱-拆箱/","content":"<h1 id=\"自动装箱-amp-拆箱\"><a href=\"#自动装箱-amp-拆箱\" class=\"headerlink\" title=\"自动装箱&amp;拆箱\"></a>自动装箱&amp;拆箱</h1><p>将基本数据类型和包装类进行快速的类型转换。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;int -&gt; Integer：自动装箱 Integer.valueOf(1)</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;Integer -&gt; int：自动拆箱 integer.intValue()</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/6/24</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BoxTest</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 自动装箱：int -&gt; Integer，自动调用Integer.valueOf()</span></span><br><span class=\"line\">    Integer i1 = <span class=\"number\">1</span>; <span class=\"comment\">// Integer i1 = Integer.valueOf(1);</span></span><br><span class=\"line\">    System.out.println(i1);</span><br><span class=\"line\">    <span class=\"comment\">// 自动拆箱：Integer -&gt; int，自动调用Integer.intValue();</span></span><br><span class=\"line\">    Integer i2 = <span class=\"keyword\">new</span> Integer(<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i3 = i2; <span class=\"comment\">// int i3 = i2.intValue();</span></span><br><span class=\"line\">    System.err.println(i3);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Integer-valueOf-的坑\"><a href=\"#Integer-valueOf-的坑\" class=\"headerlink\" title=\"Integer.valueOf()的坑\"></a>Integer.valueOf()的坑</h2><h3 id=\"重写equals方法\"><a href=\"#重写equals方法\" class=\"headerlink\" title=\"重写equals方法\"></a>重写equals方法</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Integer重写了Object的equals方法，仅比较底层封装的value值</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/7/12</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IntegerEquals</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过new创建对象</span></span><br><span class=\"line\">    Integer i1 = <span class=\"keyword\">new</span> Integer(<span class=\"number\">12</span>);</span><br><span class=\"line\">    Integer i2 = <span class=\"keyword\">new</span> Integer(<span class=\"number\">12</span>);</span><br><span class=\"line\">    System.out.println(i1 == i2); <span class=\"comment\">// false</span></span><br><span class=\"line\">    <span class=\"comment\">// i1.value == ((Integer)i2).intValue()</span></span><br><span class=\"line\">    System.out.println(i1.equals(i2)); <span class=\"comment\">// true</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"附：equals源码\"><a href=\"#附：equals源码\" class=\"headerlink\" title=\"附：equals源码\"></a>附：equals源码</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Compares this object to the specified object.  The result is</span></span><br><span class=\"line\"><span class=\"comment\"> * &#123;<span class=\"doctag\">@code</span> true&#125; if and only if the argument is not</span></span><br><span class=\"line\"><span class=\"comment\"> * &#123;<span class=\"doctag\">@code</span> null&#125; and is an &#123;<span class=\"doctag\">@code</span> Integer&#125; object that</span></span><br><span class=\"line\"><span class=\"comment\"> * contains the same &#123;<span class=\"doctag\">@code</span> int&#125; value as this object.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>   obj   the object to compare with.</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span>  &#123;<span class=\"doctag\">@code</span> true&#125; if the objects are the same;</span></span><br><span class=\"line\"><span class=\"comment\"> *          &#123;<span class=\"doctag\">@code</span> false&#125; otherwise.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object obj)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> Integer) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value == ((Integer)obj).intValue(); <span class=\"comment\">// 比较底层封装的value值</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"🕳️-比较Integer对象时\"><a href=\"#🕳️-比较Integer对象时\" class=\"headerlink\" title=\"🕳️==比较Integer对象时\"></a>🕳️==比较Integer对象时</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Integer.valueOf()坑</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/7/12</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IntegerValueOf</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过自动装箱创建对象时</span></span><br><span class=\"line\">    Integer i1 = <span class=\"number\">12</span>;</span><br><span class=\"line\">    Integer i2 = <span class=\"number\">12</span>;</span><br><span class=\"line\">    System.out.println(i1 == i2); <span class=\"comment\">// true</span></span><br><span class=\"line\">    Integer i3 = <span class=\"number\">128</span>;</span><br><span class=\"line\">    Integer i4 = <span class=\"number\">128</span>;</span><br><span class=\"line\">    System.out.println(i3 == i4); <span class=\"comment\">// false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"附：equals源码-1\"><a href=\"#附：equals源码-1\" class=\"headerlink\" title=\"附：equals源码\"></a>附：equals源码</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Returns an &#123;<span class=\"doctag\">@code</span> Integer&#125; instance representing the specified</span></span><br><span class=\"line\"><span class=\"comment\"> * &#123;<span class=\"doctag\">@code</span> int&#125; value.  If a new &#123;<span class=\"doctag\">@code</span> Integer&#125; instance is not</span></span><br><span class=\"line\"><span class=\"comment\"> * required, this method should generally be used in preference to</span></span><br><span class=\"line\"><span class=\"comment\"> * the constructor &#123;<span class=\"doctag\">@link</span> #Integer(int)&#125;, as this method is likely</span></span><br><span class=\"line\"><span class=\"comment\"> * to yield significantly better space and time performance by</span></span><br><span class=\"line\"><span class=\"comment\"> * caching frequently requested values.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * This method will always cache values in the range -128 to 127,</span></span><br><span class=\"line\"><span class=\"comment\"> * inclusive, and may cache other values outside of this range.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  i an &#123;<span class=\"doctag\">@code</span> int&#125; value.</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> an &#123;<span class=\"doctag\">@code</span> Integer&#125; instance representing &#123;<span class=\"doctag\">@code</span> i&#125;.</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@since</span>  1.5</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Integer <span class=\"title\">valueOf</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i &gt;= Integer.IntegerCache.low &amp;&amp; i &lt;= Integer.IntegerCache.high)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Integer.IntegerCache.cache[i + (-Integer.IntegerCache.low)];</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Integer(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Cache to support the object identity semantics of autoboxing for values between</span></span><br><span class=\"line\"><span class=\"comment\"> * -128 and 127 (inclusive) as required by JLS.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * The cache is initialized on first usage.  The size of the cache</span></span><br><span class=\"line\"><span class=\"comment\"> * may be controlled by the &#123;<span class=\"doctag\">@code</span> -XX:AutoBoxCacheMax=&lt;size&gt;&#125; option.</span></span><br><span class=\"line\"><span class=\"comment\"> * During VM initialization, java.lang.Integer.IntegerCache.high property</span></span><br><span class=\"line\"><span class=\"comment\"> * may be set and saved in the private system properties in the</span></span><br><span class=\"line\"><span class=\"comment\"> * sun.misc.VM class.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IntegerCache</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> low = -<span class=\"number\">128</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> high;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Integer cache[];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// high value may be configured by property</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> h = <span class=\"number\">127</span>;</span><br><span class=\"line\">    <span class=\"comment\">// ... 此处省略若干行</span></span><br><span class=\"line\">    high = h;</span><br><span class=\"line\"></span><br><span class=\"line\">    cache = <span class=\"keyword\">new</span> Integer[(high - low) + <span class=\"number\">1</span>]; <span class=\"comment\">// 128 - (-127) + 1 = 256</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> j = low;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; cache.length; k++)</span><br><span class=\"line\">      cache[k] = <span class=\"keyword\">new</span> Integer(j++); <span class=\"comment\">// [-128,127]</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// range [-128, 127] must be interned (JLS7 5.1.7)</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> Integer.IntegerCache.high &gt;= <span class=\"number\">127</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">IntegerCache</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["JavaSE"],"tags":["JavaSE"]},{"title":"在IDEA上跳过的坑们","url":"https://chiaralee.gitee.io/2021/05/17/在IDEA上跳过的坑们/","content":"<h1 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h1><p>确保配置了系统环境变量后，IDEA的Terminal窗口使用 <code>mvn</code> 命令，控制台提示：<code>&#39;mvn&#39; 不是内部或外部命令，也不是可运行的程序</code></p>\n<h2 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h2><p>找到启动的exe，右键修改属性配置：“以管理员身份运行此程序”，重启IDEA后，生效</p>\n<p><img src=\"Snipaste_2021-05-17_10-31-16.png\" alt=\"以管理员身份运行此程序\"></p>\n<h3 id=\"使用Toolbox启动IDEA的位置查找\"><a href=\"#使用Toolbox启动IDEA的位置查找\" class=\"headerlink\" title=\"使用Toolbox启动IDEA的位置查找\"></a>使用Toolbox启动IDEA的位置查找</h3><ol>\n<li><p>打开IDEA设置</p>\n<p><img src=\"Snipaste_2021-05-17_10-28-07.png\" alt=\"Tools列表\"></p>\n</li>\n<li><p>在设置中找到安装路径</p>\n<p><img src=\"Snipaste_2021-05-17_10-29-13.png\" alt=\"安装路径\"></p>\n</li>\n<li><p>进入 <code>具体版本\\bin目录</code>，可见两个exe</p>\n<p><img src=\"Snipaste_2021-05-17_10-30-24.png\" alt=\"exe列表\"></p>\n</li>\n</ol>\n<h1 id=\"问题描述：-1\"><a href=\"#问题描述：-1\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h1><p>Terminal执行 <code>mvn test --setting D:\\.m2\\settings-aliyun.xml</code> ，提示：<code>[ERROR] No compiler is provided in this environment. Perhaps you are running on a JRE rather than a JDK?</code></p>\n<h2 id=\"解决方法：-1\"><a href=\"#解决方法：-1\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h2><p>执行 <code>mvn --version</code> 确认Java配置是否异常，maven需要jdk而非jre。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Apache Maven 3.8.1 (05******4c5d)</span><br><span class=\"line\">Maven home: D:\\software\\apache-maven-3.8.1\\bin\\..</span><br><span class=\"line\">Java version: 1.8.0_202, vendor: Oracle Corporation, runtime: C:\\Program Files\\Java\\jre1.8.0_202</span><br><span class=\"line\">Default locale: zh_CN, platform encoding: GBK</span><br><span class=\"line\">OS name: <span class=\"string\">&quot;windows 10&quot;</span>, version: <span class=\"string\">&quot;10.0&quot;</span>, arch: <span class=\"string\">&quot;amd64&quot;</span>, family: <span class=\"string\">&quot;windows&quot;</span></span><br></pre></td></tr></table></figure>\n<p>从输出内容可知，java配置有误，修改为jdk后，解决</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set JAVA_HOME=C:\\Program Files\\Java\\jdk1.8.0_202</span><br></pre></td></tr></table></figure>\n<h1 id=\"问题描述：-2\"><a href=\"#问题描述：-2\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h1><p>启动服务，提示：<code>Error running &#39;xxx&#39;: Command line is too long.</code></p>\n<h2 id=\"解决办法：\"><a href=\"#解决办法：\" class=\"headerlink\" title=\"解决办法：\"></a>解决办法：</h2><p>打开项目下的 <code>.idea/workspace.xml</code> 文件，在 <code>&lt;component name=&quot;PropertiesComponent&quot;&gt;</code> 内添加属性： <code>&lt;property name=&quot;dynamic.classpath&quot; value=&quot;true&quot; /&gt;</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;PropertiesComponent&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 此处省略若干property项... --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dynamic.classpath&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;true&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","categories":["工具"],"tags":["IDEA"]},{"title":"【Spring】AbstractApplicationContext","url":"https://chiaralee.gitee.io/2021/05/10/【Spring】AbstractApplicationContext/","content":"<h1 id=\"AbstractApplicationContext\"><a href=\"#AbstractApplicationContext\" class=\"headerlink\" title=\"AbstractApplicationContext\"></a>AbstractApplicationContext</h1><p>手撕Spring源码，逃不开的类 —— <code>AbstractApplicationContext.java</code></p>\n<p>手撕Spring源码，逃不开的方法 —— <code>AbstractApplicationContext.refresh();</code></p>\n<p><a class=\"link\"   href=\"https://ke.qq.com/webcourse/398381/102978903#taid=10081774302794797&amp;vid=5285890807952986778\" >https://ke.qq.com/webcourse/398381/102978903#taid=10081774302794797&amp;vid=5285890807952986778<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>59’00</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">refresh</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> BeansException, IllegalStateException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (<span class=\"keyword\">this</span>.startupShutdownMonitor) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Prepare this context for refreshing.</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * 前戏，做容器刷新前的准备工作</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * 1、设置容器的启动时间</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * 2、设置活跃状态为true</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * 3、设置关闭状态为false</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * 4、获取Environment对象，并加载当前系统的属性值到Environment对象中</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t * 5、准备监听器和事件的集合对象，默认为空的集合</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t */</span></span><br><span class=\"line\"></span><br><span class=\"line\">        prepareRefresh();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Tell the subclass to refresh the internal bean factory.</span></span><br><span class=\"line\">        <span class=\"comment\">// 创建容器对象：DefaultListableBeanFactory</span></span><br><span class=\"line\">        <span class=\"comment\">// 加载xml配置文件的属性值到当前工厂中，最重要的就是BeanDefinition</span></span><br><span class=\"line\">        ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Prepare the bean factory for use in this context.</span></span><br><span class=\"line\">        <span class=\"comment\">// beanFactory的准备工作，对各种属性进行填充</span></span><br><span class=\"line\">        prepareBeanFactory(beanFactory);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Allows post-processing of the bean factory in context subclasses.</span></span><br><span class=\"line\">            <span class=\"comment\">// 子类覆盖方法做额外的处理，此处我们自己一般不做任何扩展工作，但是可以查看web中的代码，是有具体实现的</span></span><br><span class=\"line\">            postProcessBeanFactory(beanFactory);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// Invoke factory processors registered as beans in the context.</span></span><br><span class=\"line\">            <span class=\"comment\">// 调用各种beanFactory处理器</span></span><br><span class=\"line\">            invokeBeanFactoryPostProcessors(beanFactory);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// Register bean processors that intercept bean creation.</span></span><br><span class=\"line\">            <span class=\"comment\">// 注册bean处理器，这里只是注册功能，真正调用的是getBean方法</span></span><br><span class=\"line\">            registerBeanPostProcessors(beanFactory);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// Initialize message source for this context.</span></span><br><span class=\"line\">            <span class=\"comment\">// 为上下文初始化message源，即不同语言的消息体，国际化处理,在springmvc的时候通过国际化的代码重点讲</span></span><br><span class=\"line\">            initMessageSource();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// Initialize event multicaster for this context.</span></span><br><span class=\"line\">            <span class=\"comment\">// 初始化事件监听多路广播器</span></span><br><span class=\"line\">            initApplicationEventMulticaster();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// Initialize other special beans in specific context subclasses.</span></span><br><span class=\"line\">            <span class=\"comment\">// 留给子类来初始化其他的bean</span></span><br><span class=\"line\">            onRefresh();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// Check for listener beans and register them.</span></span><br><span class=\"line\">            <span class=\"comment\">// 在所有注册的bean中查找listener bean,注册到消息广播器中</span></span><br><span class=\"line\">            registerListeners();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// Instantiate all remaining (non-lazy-init) singletons.</span></span><br><span class=\"line\">            <span class=\"comment\">// 初始化剩下的单实例（非懒加载的）</span></span><br><span class=\"line\">            finishBeanFactoryInitialization(beanFactory);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// Last step: publish corresponding event.</span></span><br><span class=\"line\">            <span class=\"comment\">// 完成刷新过程，通知生命周期处理器lifecycleProcessor刷新过程，同时发出ContextRefreshEvent通知别人</span></span><br><span class=\"line\">            finishRefresh();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (BeansException ex) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (logger.isWarnEnabled()) &#123;</span><br><span class=\"line\">                logger.warn(<span class=\"string\">&quot;Exception encountered during context initialization - &quot;</span> +</span><br><span class=\"line\">                            <span class=\"string\">&quot;cancelling refresh attempt: &quot;</span> + ex);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// Destroy already created singletons to avoid dangling resources.</span></span><br><span class=\"line\">            <span class=\"comment\">// 为防止bean资源占用，在异常处理中，销毁已经在前面过程中生成的单件bean</span></span><br><span class=\"line\">            destroyBeans();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// Reset &#x27;active&#x27; flag.</span></span><br><span class=\"line\">            <span class=\"comment\">// 重置active标志</span></span><br><span class=\"line\">            cancelRefresh(ex);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// Propagate exception to caller.</span></span><br><span class=\"line\">            <span class=\"keyword\">throw</span> ex;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Reset common introspection caches in Spring&#x27;s core, since we</span></span><br><span class=\"line\">            <span class=\"comment\">// might not ever need metadata for singleton beans anymore...</span></span><br><span class=\"line\">            resetCommonCaches();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["Spring"],"tags":["咕咕咕","Spring"]},{"title":"【ALL-IN】Linux常用命令","url":"https://chiaralee.gitee.io/2021/05/09/【ALL-IN】Linux常用命令/","content":"<h1 id=\"基础组件安装\"><a href=\"#基础组件安装\" class=\"headerlink\" title=\"基础组件安装\"></a>基础组件安装</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># rz sz</span></span><br><span class=\"line\">yum install lrzsz -y</span><br></pre></td></tr></table></figure>\n<h1 id=\"磁盘空间不足\"><a href=\"#磁盘空间不足\" class=\"headerlink\" title=\"磁盘空间不足\"></a>磁盘空间不足</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># docker</span></span><br><span class=\"line\">docker system df -v</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看磁盘使用情况</span></span><br><span class=\"line\">df -h</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当前目录文件大小</span></span><br><span class=\"line\">du -h --max-depth=1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#释放buff/cache</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 1 &gt; /proc/sys/vm/drop_caches</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 2 &gt; /proc/sys/vm/drop_caches</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 3 &gt; /proc/sys/vm/drop_caches</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 清空文件内容</span></span><br><span class=\"line\">cat /dev/null &gt; file_name</span><br></pre></td></tr></table></figure>\n<p>虚拟机重命名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hostname NewName</span><br></pre></td></tr></table></figure>\n<p>git clone 报错时：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatal: unable to access <span class=\"string\">&#x27;http://gitlab.miibo.com/Demo.git/&#x27;</span>: server certificate verification failed. CAfile: none CRLfile: none</span><br></pre></td></tr></table></figure>\n<p>解决方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方法一</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> GIT_SSL_NO_VERIFY=1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法二</span></span><br><span class=\"line\">git config --global http.sslverify <span class=\"literal\">false</span></span><br><span class=\"line\">git config --global https.sslverify <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"Linux查看版本当前操作系统发行版信息\"><a href=\"#Linux查看版本当前操作系统发行版信息\" class=\"headerlink\" title=\"Linux查看版本当前操作系统发行版信息\"></a>Linux查看版本当前操作系统发行版信息</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat /etc/issue </span></span><br><span class=\"line\">Welcome to Alpine Linux 3.9</span><br><span class=\"line\">Kernel \\r on an \\m (\\l)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cat /etc/redhat-release</span></span><br><span class=\"line\">CentOS Linux release 7.6.1810 (Core) </span><br></pre></td></tr></table></figure>\n<p>[Git]重设和永久保存用户名密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 清除掉缓存在git中的用户名和密码</span></span><br><span class=\"line\">git credential-manager uninstall</span><br><span class=\"line\"><span class=\"comment\"># 运行一下命令缓存输入的用户名和密码</span></span><br><span class=\"line\">git config --global credential.helper wincred</span><br><span class=\"line\">git config --global credential.helper store</span><br></pre></td></tr></table></figure>\n<p>清空文件内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 举个栗子：清空mail/root文件内容</span></span><br><span class=\"line\">cat /dev/null &gt; /var/spool/mail/root</span><br></pre></td></tr></table></figure>\n<p>Crontab服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># CentOS 6</span></span><br><span class=\"line\"><span class=\"comment\"># 重启crond服务</span></span><br><span class=\"line\">/etc/init.d/crond restart</span><br><span class=\"line\"><span class=\"comment\"># crond服务运行状态查询</span></span><br><span class=\"line\">/etc/init.d/crond status</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># CentOS 7</span></span><br><span class=\"line\"><span class=\"comment\"># 重启crond服务</span></span><br><span class=\"line\">systemctl restart crond</span><br><span class=\"line\"><span class=\"comment\"># crond服务运行状态查询</span></span><br><span class=\"line\">systemctl status crond</span><br></pre></td></tr></table></figure>\n<h1 id=\"时间（timedatectl命令-tzselect命令）\"><a href=\"#时间（timedatectl命令-tzselect命令）\" class=\"headerlink\" title=\"时间（timedatectl命令/tzselect命令）\"></a>时间（timedatectl命令/tzselect命令）</h1><h2 id=\"tzselect命令\"><a href=\"#tzselect命令\" class=\"headerlink\" title=\"tzselect命令\"></a>tzselect命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 国家、地区查找timezone（查找巴塞罗那timezone）</span></span><br><span class=\"line\">tzselect</span><br><span class=\"line\"><span class=\"comment\"># Please identify a location so that time zone rules can be set correctly.</span></span><br><span class=\"line\"><span class=\"comment\"># Please select a continent or ocean.</span></span><br><span class=\"line\"><span class=\"comment\">#  1) Africa</span></span><br><span class=\"line\"><span class=\"comment\">#  2) Americas</span></span><br><span class=\"line\"><span class=\"comment\">#  3) Antarctica</span></span><br><span class=\"line\"><span class=\"comment\">#  4) Arctic Ocean</span></span><br><span class=\"line\"><span class=\"comment\">#  5) Asia</span></span><br><span class=\"line\"><span class=\"comment\">#  6) Atlantic Ocean</span></span><br><span class=\"line\"><span class=\"comment\">#  7) Australia</span></span><br><span class=\"line\"><span class=\"comment\">#  8) Europe</span></span><br><span class=\"line\"><span class=\"comment\">#  9) Indian Ocean</span></span><br><span class=\"line\"><span class=\"comment\"># 10) Pacific Ocean</span></span><br><span class=\"line\"><span class=\"comment\"># 11) none - I want to specify the time zone using the Posix TZ format.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选择大洲：Europe，输入8</span></span><br><span class=\"line\">8</span><br><span class=\"line\"><span class=\"comment\"># Please select a country.</span></span><br><span class=\"line\"><span class=\"comment\">#  1) Albania\t\t  18) Guernsey\t\t    35) Poland</span></span><br><span class=\"line\"><span class=\"comment\">#  2) Andorra\t\t  19) Hungary\t\t    36) Portugal</span></span><br><span class=\"line\"><span class=\"comment\">#  3) Austria\t\t  20) Ireland\t\t    37) Romania</span></span><br><span class=\"line\"><span class=\"comment\">#  4) Belarus\t\t  21) Isle of Man\t    38) Russia</span></span><br><span class=\"line\"><span class=\"comment\">#  5) Belgium\t\t  22) Italy\t\t    39) San Marino</span></span><br><span class=\"line\"><span class=\"comment\">#  6) Bosnia &amp; Herzegovina  23) Jersey\t\t    40) Serbia</span></span><br><span class=\"line\"><span class=\"comment\">#  7) Britain (UK)\t  24) Latvia\t\t    41) Slovakia</span></span><br><span class=\"line\"><span class=\"comment\">#  8) Bulgaria\t\t  25) Liechtenstein\t    42) Slovenia</span></span><br><span class=\"line\"><span class=\"comment\">#  9) Croatia\t\t  26) Lithuania\t\t    43) Spain</span></span><br><span class=\"line\"><span class=\"comment\"># 10) Czech Republic\t  27) Luxembourg\t    44) Sweden</span></span><br><span class=\"line\"><span class=\"comment\"># 11) Denmark\t\t  28) Malta\t\t    45) Switzerland</span></span><br><span class=\"line\"><span class=\"comment\"># 12) Estonia\t\t  29) Moldova\t\t    46) Turkey</span></span><br><span class=\"line\"><span class=\"comment\"># 13) Finland\t\t  30) Monaco\t\t    47) Ukraine</span></span><br><span class=\"line\"><span class=\"comment\"># 14) France\t\t  31) Montenegro\t    48) Vatican City</span></span><br><span class=\"line\"><span class=\"comment\"># 15) Germany\t\t  32) Netherlands\t    49) Åland Islands</span></span><br><span class=\"line\"><span class=\"comment\"># 16) Gibraltar\t\t  33) North Macedonia</span></span><br><span class=\"line\"><span class=\"comment\"># 17) Greece\t\t  34) Norway</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选择国家：Spain，输入43</span></span><br><span class=\"line\">43</span><br><span class=\"line\"><span class=\"comment\"># Please select one of the following time zone regions.</span></span><br><span class=\"line\"><span class=\"comment\"># 1) Spain (mainland)</span></span><br><span class=\"line\"><span class=\"comment\"># 2) Ceuta, Melilla</span></span><br><span class=\"line\"><span class=\"comment\"># 3) Canary Islands</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选择Spain (mainland)，输入1，获取timezone</span></span><br><span class=\"line\">1</span><br><span class=\"line\"><span class=\"comment\"># The following information has been given:</span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\"># \tSpain</span></span><br><span class=\"line\"><span class=\"comment\"># \tSpain (mainland)</span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\"># Therefore TZ=&#x27;Europe/Madrid&#x27; will be used.</span></span><br><span class=\"line\"><span class=\"comment\"># Local time is now:\tFri Aug 13 04:11:08 CEST 2021.</span></span><br><span class=\"line\"><span class=\"comment\"># Universal Time is now:\tFri Aug 13 02:11:08 UTC 2021.</span></span><br><span class=\"line\"><span class=\"comment\"># Is the above information OK?</span></span><br><span class=\"line\"><span class=\"comment\"># 1) Yes</span></span><br><span class=\"line\"><span class=\"comment\"># 2) No</span></span><br><span class=\"line\">1</span><br><span class=\"line\"><span class=\"comment\"># You can make this change permanent for yourself by appending the line</span></span><br><span class=\"line\"><span class=\"comment\"># \tTZ=&#x27;Europe/Madrid&#x27;; export TZ</span></span><br><span class=\"line\"><span class=\"comment\"># to the file &#x27;.profile&#x27; in your home directory; then log out and log in again.</span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\"># Here is that TZ value again, this time on standard output so that you</span></span><br><span class=\"line\"><span class=\"comment\"># can use the /usr/bin/tzselect command in shell scripts:</span></span><br><span class=\"line\"><span class=\"comment\"># Europe/Madrid</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"timedatectl命令\"><a href=\"#timedatectl命令\" class=\"headerlink\" title=\"timedatectl命令\"></a>timedatectl命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 关键字查找timezone</span></span><br><span class=\"line\">timedatectl list-timezones  | grep <span class=\"string\">&quot;Asia/S&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># Asia/Sakhalin</span></span><br><span class=\"line\"><span class=\"comment\"># Asia/Samarkand</span></span><br><span class=\"line\"><span class=\"comment\"># Asia/Seoul</span></span><br><span class=\"line\"><span class=\"comment\"># Asia/Shanghai</span></span><br><span class=\"line\"><span class=\"comment\"># Asia/Singapore</span></span><br><span class=\"line\"><span class=\"comment\"># Asia/Srednekolymsk</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当前的时区</span></span><br><span class=\"line\">timedatectl status</span><br><span class=\"line\"><span class=\"comment\">#       Local time: Fri 2021-08-13 10:04:30 CST</span></span><br><span class=\"line\"><span class=\"comment\">#   Universal time: Fri 2021-08-13 02:04:30 UTC</span></span><br><span class=\"line\"><span class=\"comment\">#         RTC time: Fri 2021-08-13 02:04:30</span></span><br><span class=\"line\"><span class=\"comment\">#        Time zone: Asia/Shanghai (CST, +0800)</span></span><br><span class=\"line\"><span class=\"comment\">#      NTP enabled: no</span></span><br><span class=\"line\"><span class=\"comment\"># NTP synchronized: yes</span></span><br><span class=\"line\"><span class=\"comment\">#  RTC in local TZ: no</span></span><br><span class=\"line\"><span class=\"comment\">#       DST active: n/a</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置东八区</span></span><br><span class=\"line\">timedatectl set-timezone <span class=\"string\">&quot;Asia/Shanghai&quot;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"路由跟踪\"><a href=\"#路由跟踪\" class=\"headerlink\" title=\"路由跟踪\"></a>路由跟踪</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># tracepath/traceroute &#123;ip&#125;/&#123;host&#125;</span></span><br><span class=\"line\">tracepath www.baidu.com</span><br><span class=\"line\">tracepath 180.101.49.12</span><br></pre></td></tr></table></figure>\n<h1 id=\"删除带问号的文件\"><a href=\"#删除带问号的文件\" class=\"headerlink\" title=\"删除带问号的文件\"></a>删除带问号的文件</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 找到文件的inode号</span></span><br><span class=\"line\">ls -li</span><br><span class=\"line\"><span class=\"comment\">#  123 -rw-r--r--   1 root root        0 Aug 19 11:32 ??</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过inode号删除文件（123为文件inode号）</span></span><br><span class=\"line\">find ./ -inum 123 -<span class=\"built_in\">exec</span> rm -rf &#123;&#125; \\;</span><br></pre></td></tr></table></figure>\n<h1 id=\"mvn\"><a href=\"#mvn\" class=\"headerlink\" title=\"mvn\"></a>mvn</h1><h2 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h2><p>文件位置：</p>\n<p>全局配置:  <code>$&#123;M2_HOME&#125;/conf/settings.xml</code></p>\n<p>用户配置:  <code>$&#123;user.home&#125;/.m2/settings.xml</code></p>\n<p><code>用户配置</code> 优先于 <code>全局配置</code></p>\n<h2 id=\"Maven-FAQ\"><a href=\"#Maven-FAQ\" class=\"headerlink\" title=\"Maven FAQ\"></a>Maven FAQ</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># maven本地库已经有的包了，不下载（linux环境） REF:https://blog.csdn.net/whq12789/article/details/105429703</span></span><br><span class=\"line\">find . -name <span class=\"string\">&#x27;_remote.repositories&#x27;</span> -delete</span><br></pre></td></tr></table></figure>\n<h1 id=\"压缩-amp-解压\"><a href=\"#压缩-amp-解压\" class=\"headerlink\" title=\"压缩&amp;解压\"></a>压缩&amp;解压</h1><h2 id=\"tar\"><a href=\"#tar\" class=\"headerlink\" title=\"tar\"></a>tar</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 压缩</span></span><br><span class=\"line\">tar -czvf node_modules.tar.gz node_modules </span><br><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\">tar -xzvf node_modules.tar.gz </span><br></pre></td></tr></table></figure>\n<h2 id=\"zip\"><a href=\"#zip\" class=\"headerlink\" title=\"zip\"></a>zip</h2><h3 id=\"zip-参数-打包后的文件名-打包的目录路径\"><a href=\"#zip-参数-打包后的文件名-打包的目录路径\" class=\"headerlink\" title=\"zip [参数] [打包后的文件名] [打包的目录路径]\"></a>zip [参数] [打包后的文件名] [打包的目录路径]</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zip -qr demo.zip demo/</span><br><span class=\"line\"></span><br><span class=\"line\">-a 将文件转成ASCII模式</span><br><span class=\"line\">-F 尝试修复损坏的压缩文件</span><br><span class=\"line\">-h 显示帮助界面</span><br><span class=\"line\">-m 将文件压缩之后，删除源文件</span><br><span class=\"line\">-n 特定字符串 不压缩具有特定字尾字符串的文件</span><br><span class=\"line\">-o 将压缩文件内的所有文件的最新变动时间设为压缩时候的时间</span><br><span class=\"line\">-q 安静模式，在压缩的时候不显示指令的执行过程</span><br><span class=\"line\">-r 将指定的目录下的所有子目录以及文件一起处理</span><br><span class=\"line\">-S 包含系统文件和隐含文件（S是大写）</span><br><span class=\"line\">-t 日期 把压缩文件的最后修改日期设为指定的日期，日期格式为mmddyyyy</span><br></pre></td></tr></table></figure>\n<h3 id=\"unzip-cflptuvz-agCjLMnoqsVX-P-lt-密码-gt-zip文件-文件-d-lt-目-录-gt-x-lt-文件-gt-或-unzip-Z\"><a href=\"#unzip-cflptuvz-agCjLMnoqsVX-P-lt-密码-gt-zip文件-文件-d-lt-目-录-gt-x-lt-文件-gt-或-unzip-Z\" class=\"headerlink\" title=\"unzip [-cflptuvz] [-agCjLMnoqsVX] [-P&lt;密码&gt;] [.zip文件] [文件] [-d&lt;目 录&gt;] [-x&lt;文件&gt;] 或 unzip [-Z]\"></a>unzip [-cflptuvz] [-agCjLMnoqsVX] [-P&lt;密码&gt;] [.zip文件] [文件] [-d&lt;目 录&gt;] [-x&lt;文件&gt;] 或 unzip [-Z]</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip -q demo.zip</span><br><span class=\"line\"></span><br><span class=\"line\">-c 将解压缩的结果显示到屏幕上，并对字符做适当的转换。</span><br><span class=\"line\">-f 更新现有的文件。</span><br><span class=\"line\">-l 显示压缩文件内所包含的文件。</span><br><span class=\"line\">-p 与-c参数类似，会将解压缩的结果显示到屏幕上，但不会执行任何的转换。</span><br><span class=\"line\">-t 检查压缩文件是否正确。</span><br><span class=\"line\">-u 与-f参数类似，但是除了更新现有的文件外，也会将压缩文件中的其他文件解压缩到目录中。</span><br><span class=\"line\">-v 执行是时显示详细的信息。</span><br><span class=\"line\">-z 仅显示压缩文件的备注文字。</span><br><span class=\"line\">-a 对文本文件进行必要的字符转换。</span><br><span class=\"line\">-b 不要对文本文件进行字符转换。</span><br><span class=\"line\">-C 压缩文件中的文件名称区分大小写。</span><br><span class=\"line\">-j 不处理压缩文件中原有的目录路径。</span><br><span class=\"line\">-L 将压缩文件中的全部文件名改为小写。</span><br><span class=\"line\">-M 将输出结果送到more程序处理。</span><br><span class=\"line\">-n 解压缩时不要覆盖原有的文件。</span><br><span class=\"line\">-o 不必先询问用户，unzip执行后覆盖原有文件。</span><br><span class=\"line\">-P&lt;密码&gt; 使用zip的密码选项。</span><br><span class=\"line\">-q 执行时不显示任何信息。</span><br><span class=\"line\">-s 将文件名中的空白字符转换为底线字符。</span><br><span class=\"line\">-V 保留VMS的文件版本信息。</span><br><span class=\"line\">-X 解压缩时同时回存文件原来的UID/GID。</span><br><span class=\"line\">[.zip文件] 指定.zip压缩文件。</span><br><span class=\"line\">[文件] 指定要处理.zip压缩文件中的哪些文件。</span><br><span class=\"line\">-d&lt;目录&gt; 指定文件解压缩后所要存储的目录。</span><br><span class=\"line\">-x&lt;文件&gt; 指定不要处理.zip压缩文件中的哪些文件。</span><br><span class=\"line\">-Z unzip -Z等于执行zipinfo指令</span><br></pre></td></tr></table></figure>\n<h1 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h1><h2 id=\"git提交shell脚本格式转换的问题\"><a href=\"#git提交shell脚本格式转换的问题\" class=\"headerlink\" title=\"git提交shell脚本格式转换的问题\"></a>git提交shell脚本格式转换的问题</h2><p>提示如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">warinig: LF will be replaced by CRLF <span class=\"keyword\">in</span> xxx.sh</span><br></pre></td></tr></table></figure>\n<p>解：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global core.autocrlf <span class=\"literal\">false</span></span><br><span class=\"line\">git config --global core.safecrlf <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 含义：</span></span><br><span class=\"line\"><span class=\"comment\">## AutoCRLF</span></span><br><span class=\"line\"><span class=\"comment\">### 提交时转换为LF，检出时转换为CRLF</span></span><br><span class=\"line\">git config --global core.autocrlf <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\">### 提交时转换为LF，检出时不转换</span></span><br><span class=\"line\">git config --global core.autocrlf input</span><br><span class=\"line\"><span class=\"comment\">### 提交检出均不转换</span></span><br><span class=\"line\">git config --global core.autocrlf <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## SafeCRLF</span></span><br><span class=\"line\"><span class=\"comment\">### 拒绝提交包含混合换行符的文件</span></span><br><span class=\"line\">git config --global core.safecrlf <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\">### 允许提交包含混合换行符的文件</span></span><br><span class=\"line\">git config --global core.safecrlf <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\">### 提交包含混合换行符的文件时给出警告</span></span><br><span class=\"line\">git config --global core.safecrlf warn</span><br></pre></td></tr></table></figure>\n","categories":["Linux"],"tags":["Linux","all-in"]},{"title":"Alpine Linux","url":"https://chiaralee.gitee.io/2021/05/08/Alpine-Linux/","content":"<h1 id=\"安装-scp\"><a href=\"#安装-scp\" class=\"headerlink\" title=\"安装 scp\"></a>安装 <code>scp</code></h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apk add openssh-client</span><br></pre></td></tr></table></figure>\n<h1 id=\"Debian-国内加速\"><a href=\"#Debian-国内加速\" class=\"headerlink\" title=\"Debian 国内加速\"></a>Debian 国内加速</h1><p>Debian 的软件源配置文件是 <code>/etc/apt/sources.list</code></p>\n<blockquote>\n<p>一般情况下，修改/etc/apt/sources.list文件，将Debian的默认源地址改成新的地址即可，比如将<a class=\"link\"   href=\"http://deb.debian.org改成https://mirrors.xxx.com，可使用以下命令：\" >http://deb.debian.org改成https://mirrors.xxx.com，可使用以下命令：<i class=\"fas fa-external-link-alt\"></i></a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i &quot;s@http://deb.debian.org@https://mirrors.xxx.com@g&quot; /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n<p>若要使用https源，则需要执行apt-get install apt-transport-https，再执行apt-get update更新索引。</p>\n</blockquote>\n<h2 id=\"常用稳定源\"><a href=\"#常用稳定源\" class=\"headerlink\" title=\"常用稳定源\"></a>常用稳定源</h2><ul>\n<li>阿里源：<a class=\"link\"   href=\"https://developer.aliyun.com/mirror/\" >https://developer.aliyun.com/mirror/<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>TUNA 清华源：<a class=\"link\"   href=\"https://mirrors.tuna.tsinghua.edu.cn/\" >https://mirrors.tuna.tsinghua.edu.cn/<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>华为源：<a class=\"link\"   href=\"https://mirrors.huaweicloud.com/\" >https://mirrors.huaweicloud.com/<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>USTC 中科大源：<a class=\"link\"   href=\"http://mirrors.ustc.edu.cn/\" >http://mirrors.ustc.edu.cn/<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>163 网易源：<a class=\"link\"   href=\"http://mirrors.163.com/\" >http://mirrors.163.com/<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li>官方全球镜像站列表地址：<a class=\"link\"   href=\"https://www.debian.org/mirror/list\" >https://www.debian.org/mirror/list<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<h3 id=\"Debian-11-镜像源修改\"><a href=\"#Debian-11-镜像源修改\" class=\"headerlink\" title=\"Debian 11 镜像源修改\"></a>Debian 11 镜像源修改</h3><h4 id=\"TUNA-清华源\"><a href=\"#TUNA-清华源\" class=\"headerlink\" title=\"TUNA 清华源\"></a>TUNA 清华源</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free</span><br><span class=\"line\"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free</span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free</span><br><span class=\"line\"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free</span><br><span class=\"line\"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free</span><br><span class=\"line\"></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free</span><br><span class=\"line\"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free</span><br></pre></td></tr></table></figure>\n<h4 id=\"USTC-中科大源\"><a href=\"#USTC-中科大源\" class=\"headerlink\" title=\"USTC 中科大源\"></a>USTC 中科大源</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http://mirrors.ustc.edu.cn/debian stable main contrib non-free</span><br><span class=\"line\"># deb-src http://mirrors.ustc.edu.cn/debian stable main contrib non-free</span><br><span class=\"line\">deb http://mirrors.ustc.edu.cn/debian stable-updates main contrib non-free</span><br><span class=\"line\"># deb-src http://mirrors.ustc.edu.cn/debian stable-updates main contrib non-free</span><br><span class=\"line\"></span><br><span class=\"line\"># deb http://mirrors.ustc.edu.cn/debian stable-proposed-updates main contrib non-free</span><br><span class=\"line\"># deb-src http://mirrors.ustc.edu.cn/debian stable-proposed-updates main contrib non-free</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","categories":["Linux"],"tags":["Linux","Alpine","Debian","Ubuntu"]},{"title":"CentOS7安装Docker","url":"https://chiaralee.gitee.io/2021/04/30/CentOS7安装Docker/","content":"<h1 id=\"CentOS-7-安装-Docker\"><a href=\"#CentOS-7-安装-Docker\" class=\"headerlink\" title=\"CentOS 7 安装 Docker\"></a>CentOS 7 安装 Docker</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装需要的软件包</span></span><br><span class=\"line\">yum install -y yum-utils</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置yum源，以下二选一即可</span></span><br><span class=\"line\"><span class=\"comment\"># 阿里仓库</span></span><br><span class=\"line\">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class=\"line\"><span class=\"comment\"># 中央仓库</span></span><br><span class=\"line\">yum-config-manager --add-repo http://download.docker.com/linux/centos/docker-ce.repo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装docker-ce</span></span><br><span class=\"line\">yum -y install docker-ce</span><br><span class=\"line\"><span class=\"comment\"># 查看可用版本：yum list docker-ce --showduplicates | sort -r</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动docker，并设置开机自启动</span></span><br><span class=\"line\">systemctl start docker &amp;&amp; systemctl <span class=\"built_in\">enable</span> docker</span><br></pre></td></tr></table></figure>\n<h1 id=\"Docker-日志配置\"><a href=\"#Docker-日志配置\" class=\"headerlink\" title=\"Docker 日志配置\"></a>Docker 日志配置</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">log-opts max-size</td>\n<td style=\"text-align:center\">单个日志文件上限大小</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">log-opts max-file</td>\n<td style=\"text-align:center\">日志文件上限个数</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"当前容器有效\"><a href=\"#当前容器有效\" class=\"headerlink\" title=\"当前容器有效\"></a>当前容器有效</h2><p>在 <code>docker run</code> 或 <code>docker create</code> 时添加配置，举个栗子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建容器时</span></span><br><span class=\"line\">docker run --log-opt max-size=10m --log-opt max-file=3 ...</span><br></pre></td></tr></table></figure>\n<h2 id=\"全局配置\"><a href=\"#全局配置\" class=\"headerlink\" title=\"全局配置\"></a>全局配置</h2><blockquote>\n<p>配置仅对新创建的容器有效</p>\n</blockquote>\n<ol>\n<li><p>修改 <code>daemon.json</code> 文件（默认路径：<code>/etc/docker/daemon.json</code>）</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt;<span class=\"string\">EOF &gt; /etc/docker/daemon.json</span></span><br><span class=\"line\"><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"string\">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class=\"line\"><span class=\"string\">    &quot;log-opts&quot;: &#123;</span></span><br><span class=\"line\"><span class=\"string\">        &quot;max-size&quot;: &quot;50m&quot;,</span></span><br><span class=\"line\"><span class=\"string\">        &quot;max-file&quot;: &quot;1&quot;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置成功后，重新加载配置文件，并重启docker</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl restart docker</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Docker日志清理脚本\"><a href=\"#Docker日志清理脚本\" class=\"headerlink\" title=\"Docker日志清理脚本\"></a>Docker日志清理脚本</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;clean docker logs begin...&quot;</span></span><br><span class=\"line\">logs=$(find /var/lib/docker/containers/ -name *-json.log)</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">log</span> <span class=\"keyword\">in</span> <span class=\"variable\">$logs</span></span><br><span class=\"line\">\t<span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">echo</span> <span class=\"string\">&quot;clean logs : <span class=\"variable\">$log</span>&quot;</span></span><br><span class=\"line\">\t\tcat /dev/null &gt; <span class=\"variable\">$log</span></span><br><span class=\"line\">\t<span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;SUCCESS!&quot;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"附：安装脚本\"><a href=\"#附：安装脚本\" class=\"headerlink\" title=\"附：安装脚本\"></a>附：安装脚本</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y yum-utils \\</span><br><span class=\"line\">&amp;&amp; yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo \\</span><br><span class=\"line\">&amp;&amp; yum -y install docker-ce \\</span><br><span class=\"line\">&amp;&amp; systemctl start docker &amp;&amp; systemctl <span class=\"built_in\">enable</span> docker \\</span><br><span class=\"line\">&amp;&amp; cp daemon.json /etc/docker/daemon.json \\</span><br><span class=\"line\">&amp;&amp; systemctl daemon-reload &amp;&amp; systemctl restart docker</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? -ne 0 ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&#x27;install docker failed.&#x27;</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  docker login --username=*** registry.***.com -p ***</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n","categories":["开新地图"],"tags":["Linux","Docker"]},{"title":"Confluence&Jira","url":"https://chiaralee.gitee.io/2021/04/30/Confluence-Jira/","content":"<blockquote>\n<ul>\n<li><a class=\"link\"   href=\"https://zhile.io/2018/12/20/atlassian-license-crack.html\" >Atlassian系列产品及插件激活方法[JIRA8.0+]<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://segmentfault.com/a/1190000039264694\" >Jira &amp; Confluence部署<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.jianshu.com/p/b95ceabd3e9d\" >通过Docker安装JIRA和Confluence（破解版）<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://hub.docker.com/r/cptactionhank/atlassian-jira-software\" >dockerhub/Jira<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://hub.docker.com/r/cptactionhank/atlassian-confluence\" >dockerhub/Confluence<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://hub.docker.com/_/mysql\" >dockerhub/MySQL<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n</blockquote>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>服务</th>\n<th>版本号</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Confluence</td>\n<td>7.9.3</td>\n<td>docker pull cptactionhank/atlassian-confluence:latest</td>\n</tr>\n<tr>\n<td>Jira</td>\n<td>8.16.1</td>\n<td>docker pull cptactionhank/atlassian-jira-software:latest</td>\n</tr>\n<tr>\n<td>MySQL</td>\n<td>5.7.34</td>\n<td>docker pull mysql:5.7.34</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"MySQL\"><a href=\"#MySQL\" class=\"headerlink\" title=\"MySQL\"></a>MySQL</h1><h2 id=\"容器部署\"><a href=\"#容器部署\" class=\"headerlink\" title=\"容器部署\"></a>容器部署</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建目录</span></span><br><span class=\"line\">mkdir -p /opt/atlassian</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动容器</span></span><br><span class=\"line\">docker run -d -p 13306:3306 --name atlassian_mysql --restart=always \\</span><br><span class=\"line\">--<span class=\"built_in\">ulimit</span> nofile=65536:65536 \\</span><br><span class=\"line\">-v /opt/atlassian/mysql/data:/var/lib/mysql \\</span><br><span class=\"line\">-e MYSQL_ROOT_PASSWORD=123456 \\</span><br><span class=\"line\">-e TZ=Asia/Shanghai \\</span><br><span class=\"line\">mysql:5.7.34</span><br></pre></td></tr></table></figure>\n<ul>\n<li>需要注意的是，事务隔离策略设为 <code>READ-COMMITTED</code>。<ul>\n<li>通过 <code>show variables like &#39;tx%&#39;;</code> 可查询事务隔离策略是否正确设置。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"修改-my-cnf-配置\"><a href=\"#修改-my-cnf-配置\" class=\"headerlink\" title=\"修改 my.cnf 配置\"></a>修改 my.cnf 配置</h2><ol>\n<li><p>进入容器，查看原 <code>my.cnf</code> 文件内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入容器内部</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it atlassian_mysql /bin/bash</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看原文件内容</span></span><br><span class=\"line\">tail /etc/mysql/my.cnf</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 退出容器</span></span><br><span class=\"line\">ctrl + p + q</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>宿主机中创建 <code>my.cnf</code> 文件，将步骤1中原文件内容复制粘贴至 <code>my.cnf</code>，并追加内容</p>\n<blockquote>\n<p>REF: </p>\n<ul>\n<li><a class=\"link\"   href=\"https://confluence.atlassian.com/adminjiraserver/connecting-jira-applications-to-mysql-5-7-966063305.html\" >Jira：Connecting Jira applications to MySQL 5.7<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://confluence.atlassian.com/doc/database-setup-for-mysql-128747.html\" >Confluence：Database Setup For MySQL<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># but WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class=\"line\"># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><br><span class=\"line\"># GNU General Public License, version 2.0, for more details.</span><br><span class=\"line\">#</span><br><span class=\"line\"># You should have received a copy of the GNU General Public License</span><br><span class=\"line\"># along with this program; if not, write to the Free Software</span><br><span class=\"line\"># Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA</span><br><span class=\"line\"></span><br><span class=\"line\">!includedir /etc/mysql/conf.d/</span><br><span class=\"line\">!includedir /etc/mysql/mysql.conf.d/</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">default-storage-engine=INNODB</span><br><span class=\"line\">character_set_server=utf8mb4</span><br><span class=\"line\">collation-server=utf8mb4_bin</span><br><span class=\"line\">max_allowed_packet=256M</span><br><span class=\"line\">innodb_default_row_format=DYNAMIC</span><br><span class=\"line\">innodb_large_prefix=ON</span><br><span class=\"line\">innodb_file_format=Barracuda</span><br><span class=\"line\">innodb_log_file_size=2G</span><br><span class=\"line\">transaction-isolation=READ-COMMITTED</span><br><span class=\"line\">binlog_format=row</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li><p>文件传输至容器内</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp my.cnf atlassian_mysql:/etc/mysql/</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li><p>重启mysql</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker restart atlassian_mysql &amp;&amp; docker logs -f atlassian_mysql</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"创建表及用户\"><a href=\"#创建表及用户\" class=\"headerlink\" title=\"创建表及用户\"></a>创建表及用户</h2><blockquote>\n<p>REF: <a class=\"link\"   href=\"https://confluence.atlassian.com/adminjiraserver/connecting-jira-applications-to-a-database-938846850.html#ConnectingJiraapplicationstoadatabase-UpgradingJiraormigratingJiratoanotherserver?\" >Connecting Jira applications to a database<i class=\"fas fa-external-link-alt\"></i></a></p>\n</blockquote>\n<p>通过 <code>Navicat</code> 或 <code>进入mysql</code>，执行以下语句</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 创建jira数据库及用户</span></span><br><span class=\"line\"><span class=\"comment\">-- drop database jira;</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> DATABASE jira <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_bin;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">USER</span> jira IDENTIFIED <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;jira&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">ALL</span> PRIVILEGES <span class=\"keyword\">ON</span> `jira`.<span class=\"operator\">*</span> <span class=\"keyword\">TO</span> <span class=\"string\">&#x27;jira&#x27;</span> @<span class=\"string\">&#x27;%&#x27;</span> IDENTIFIED <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;jira&#x27;</span> <span class=\"keyword\">WITH</span> <span class=\"keyword\">GRANT</span> OPTION;</span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">ALL</span> PRIVILEGES <span class=\"keyword\">ON</span> `jira`.<span class=\"operator\">*</span> <span class=\"keyword\">TO</span> <span class=\"string\">&#x27;jira&#x27;</span> @<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;jira&#x27;</span> <span class=\"keyword\">WITH</span> <span class=\"keyword\">GRANT</span> OPTION;</span><br><span class=\"line\">FLUSH PRIVILEGES;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 创建confluence数据库及用户</span></span><br><span class=\"line\"><span class=\"comment\">-- drop database confluence;</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> DATABASE confluence <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_bin;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">USER</span> confluence IDENTIFIED <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;confluence&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">ALL</span> PRIVILEGES <span class=\"keyword\">ON</span> `confluence`.<span class=\"operator\">*</span> <span class=\"keyword\">TO</span> <span class=\"string\">&#x27;confluence&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> IDENTIFIED <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;confluence&#x27;</span> <span class=\"keyword\">WITH</span> <span class=\"keyword\">GRANT</span> OPTION;</span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">ALL</span> PRIVILEGES <span class=\"keyword\">ON</span> `confluence`.<span class=\"operator\">*</span> <span class=\"keyword\">TO</span> <span class=\"string\">&#x27;confluence&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;confluence&#x27;</span> <span class=\"keyword\">WITH</span> <span class=\"keyword\">GRANT</span> OPTION;</span><br><span class=\"line\">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\n<h1 id=\"Jira\"><a href=\"#Jira\" class=\"headerlink\" title=\"Jira\"></a>Jira</h1><h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><p>Docker镜像</p>\n<ul>\n<li><a class=\"link\"   href=\"https://github.com/cptactionhank/docker-atlassian-jira-software\" >Github：cptactionhank/docker-atlassian-jira-software<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://hub.docker.com/r/cptactionhank/atlassian-jira-software\" >dockerhub：cptactionhank/atlassian-jira-software<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<p>破解工具</p>\n<ul>\n<li><a class=\"link\"   href=\"https://gitee.com/pengzhile/atlassian-agent\" >Gitee：pengzhile/atlassian-agent<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://gitee.com/pengzhile/atlassian-agent/releases\" >Release包：atlassian-agent.jar<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<h2 id=\"容器部署-1\"><a href=\"#容器部署-1\" class=\"headerlink\" title=\"容器部署\"></a>容器部署</h2><h3 id=\"Dockerfile\"><a href=\"#Dockerfile\" class=\"headerlink\" title=\"Dockerfile\"></a>Dockerfile</h3><blockquote>\n<p>摘自：<a class=\"link\"   href=\"https://github.com/cptactionhank/docker-atlassian-jira-software/blob/master/Dockerfile\" >https://github.com/cptactionhank/docker-atlassian-jira-software/blob/master/Dockerfile<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>Jira版本查看：<a class=\"link\"   href=\"https://www.atlassian.com/software/jira/download-archives\" >https://www.atlassian.com/software/jira/download-archives<i class=\"fas fa-external-link-alt\"></i></a></p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> cptactionhank/atlassian-jira-software:latest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">USER</span> root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置时区（东八区）</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apk add -U tzdata &amp;&amp; cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将代理破解包加入容器</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> <span class=\"string\">&quot;atlassian-agent.jar&quot;</span> /opt/atlassian/jira/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置启动加载代理包</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> <span class=\"built_in\">echo</span> <span class=\"string\">&#x27;\\nexport CATALINA_OPTS=&quot;-javaagent:/opt/atlassian/jira/atlassian-agent.jar $&#123;CATALINA_OPTS&#125;&quot;&#x27;</span> &gt;&gt; /opt/atlassian/jira/bin/setenv.sh</span></span><br></pre></td></tr></table></figure>\n<p>将该 <code>Dockerfile</code> 与 <code>atlassian-agent.jar</code> 放于同一目录下，构建镜像</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t atlassian/jira:8.16.1 .</span><br></pre></td></tr></table></figure>\n<p>Jira版本号可在dockerhub中查到</p>\n<p><img src=\"jira版本号查看.png\" alt=\"jira版本号查看\"></p>\n<h3 id=\"运行容器\"><a href=\"#运行容器\" class=\"headerlink\" title=\"运行容器\"></a>运行容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 18080:8080 --name atlassian_jira --restart=always \\</span><br><span class=\"line\">-v /opt/atlassian/jira/data:/var/atlassian/jira \\</span><br><span class=\"line\">atlassian/jira:8.16.1</span><br></pre></td></tr></table></figure>\n<h2 id=\"页面配置\"><a href=\"#页面配置\" class=\"headerlink\" title=\"页面配置\"></a>页面配置</h2><ol>\n<li><p>访问<a href=\"http://{ip}:18080，打开Jira页面，选择好语言后，点击第二个选项，进入下一步\">http://{ip}:18080，打开Jira页面，选择好语言后，点击第二个选项，进入下一步</a></p>\n<p><img src=\"Jira安装配置01.png\" alt=\"Jira安装配置01\"></p>\n</li>\n<li><p>填写数据库设置（MySQL相关账号密码、数据库等配置信息详见 <code>MySQL / 创建表及用户</code> 所述），并通过点击 <code>测试连接</code> 验证配置无误后，进入下一步</p>\n<p><img src=\"Jira安装配置02.png\" alt=\"Jira安装配置02\"></p>\n</li>\n<li><p>配置Jira标题、访问URL后，进入下一步</p>\n<p><img src=\"Jira安装配置03.png\" alt=\"Jira安装配置03\"></p>\n</li>\n<li><p>输入许可证信息（许可证关键字生成方式详见 <code>Jira / 破解激活</code> 所述）</p>\n<p><img src=\"Jira安装配置04.png\" alt=\"Jira安装配置04\"></p>\n</li>\n</ol>\n<h2 id=\"破解激活\"><a href=\"#破解激活\" class=\"headerlink\" title=\"破解激活\"></a>破解激活</h2><ol>\n<li><p>在 <code>atlassian-agent.jar</code> 文件目录下执行命令，生成许可证</p>\n<p>举个栗子：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar atlassian-agent.jar -p jira -m aaa@bbb.com -n my_name -o https://zhile.io -s ABCD-1234-EFGH-5678</span><br></pre></td></tr></table></figure>\n<ul>\n<li>-p： 第三方插件将其应用密钥/插件关键字作为-p参数。如：-p ‘com.gliffy.integration.confluence’，通过 <code>java -jar atlassian-agent.jar</code> 可看到参数帮助</li>\n<li>-m： 邮箱地址</li>\n<li>-n： 名称</li>\n<li>-o： Jira的访问地址</li>\n<li>-s： 服务器ID，形如：<code>AAAA-BBBB-CCCC-DDDD</code></li>\n</ul>\n<p><img src=\"Jira许可证关键字.png\" alt=\"Jira许可证关键字\"></p>\n</li>\n<li><p>将生成的许可证复制到Jira页面中，完成破解</p>\n<p><img src=\"Jira许可证.png\" alt=\"Jira许可证\"></p>\n</li>\n<li><p>破解完成确认</p>\n<p><img src=\"Jira许可证确认.png\" alt=\"Jira许可证确认\"></p>\n</li>\n</ol>\n<h1 id=\"Confluence\"><a href=\"#Confluence\" class=\"headerlink\" title=\"Confluence\"></a>Confluence</h1><h2 id=\"准备-1\"><a href=\"#准备-1\" class=\"headerlink\" title=\"准备\"></a>准备</h2><p>Docker镜像</p>\n<ul>\n<li><a class=\"link\"   href=\"https://github.com/cptactionhank/docker-atlassian-confluence\" >Github：cptactionhank/docker-atlassian-confluence<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://hub.docker.com/r/cptactionhank/atlassian-confluence\" >dockerhub：cptactionhank/atlassian-confluence<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<p>破解工具</p>\n<ul>\n<li><a class=\"link\"   href=\"https://gitee.com/pengzhile/atlassian-agent\" >Gitee：pengzhile/atlassian-agent<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://gitee.com/pengzhile/atlassian-agent/releases\" >Release包：atlassian-agent.jar<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<h2 id=\"容器部署-2\"><a href=\"#容器部署-2\" class=\"headerlink\" title=\"容器部署\"></a>容器部署</h2><h3 id=\"Dockerfile-1\"><a href=\"#Dockerfile-1\" class=\"headerlink\" title=\"Dockerfile\"></a>Dockerfile</h3><blockquote>\n<p>摘自：<a class=\"link\"   href=\"https://github.com/cptactionhank/docker-atlassian-confluence/blob/master/Dockerfile\" >https://github.com/cptactionhank/docker-atlassian-confluence/blob/master/Dockerfile<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p>Confluence版本查看：<a class=\"link\"   href=\"https://www.atlassian.com/software/confluence/download-archives\" >https://www.atlassian.com/software/confluence/download-archives<i class=\"fas fa-external-link-alt\"></i></a></p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> openjdk:<span class=\"number\">8</span>-alpine</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Setup useful environment variables</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> CONF_HOME     /var/atlassian/confluence</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> CONF_INSTALL  /opt/atlassian/confluence</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> CONF_VERSION  <span class=\"number\">7.9</span>.<span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> JAVA_CACERTS  $JAVA_HOME/jre/lib/security/cacerts</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> CERTIFICATE   $CONF_HOME/certificate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Install Atlassian Confluence and helper tools and setup initial home</span></span><br><span class=\"line\"><span class=\"comment\"># directory structure.</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> <span class=\"built_in\">set</span> -x \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; apk --no-cache add curl xmlstarlet bash ttf-dejavu libc6-compat gcompat \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; mkdir -p                <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_HOME&#125;</span>&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; chmod -R 700            <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_HOME&#125;</span>&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; chown daemon:daemon     <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_HOME&#125;</span>&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; mkdir -p                <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/conf&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; curl -Ls                <span class=\"string\">&quot;https://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-<span class=\"variable\">$&#123;CONF_VERSION&#125;</span>.tar.gz&quot;</span> | tar -xz --directory <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>&quot;</span> --strip-components=1 --no-same-owner \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; curl -Ls                <span class=\"string\">&quot;https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.44.tar.gz&quot;</span> | tar -xz --directory <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/confluence/WEB-INF/lib&quot;</span> --strip-components=1 --no-same-owner <span class=\"string\">&quot;mysql-connector-java-5.1.44/mysql-connector-java-5.1.44-bin.jar&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; chmod -R 700            <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/conf&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; chmod -R 700            <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/temp&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; chmod -R 700            <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/logs&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; chmod -R 700            <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/work&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; chown -R daemon:daemon  <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/conf&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; chown -R daemon:daemon  <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/temp&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; chown -R daemon:daemon  <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/logs&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; chown -R daemon:daemon  <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/work&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; <span class=\"built_in\">echo</span> -e                 <span class=\"string\">&quot;\\nconfluence.home=<span class=\"variable\">$CONF_HOME</span>&quot;</span> &gt;&gt; <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/confluence/WEB-INF/classes/confluence-init.properties&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; xmlstarlet              ed --inplace \\</span></span><br><span class=\"line\"><span class=\"bash\">        --delete               <span class=\"string\">&quot;Server/@debug&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">        --delete               <span class=\"string\">&quot;Server/Service/Connector/@debug&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">        --delete               <span class=\"string\">&quot;Server/Service/Connector/@useURIValidationHack&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">        --delete               <span class=\"string\">&quot;Server/Service/Connector/@minProcessors&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">        --delete               <span class=\"string\">&quot;Server/Service/Connector/@maxProcessors&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">        --delete               <span class=\"string\">&quot;Server/Service/Engine/@debug&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">        --delete               <span class=\"string\">&quot;Server/Service/Engine/Host/@debug&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">        --delete               <span class=\"string\">&quot;Server/Service/Engine/Host/Context/@debug&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">                               <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/conf/server.xml&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; touch -d <span class=\"string\">&quot;@0&quot;</span>           <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/conf/server.xml&quot;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; chown daemon:daemon     <span class=\"string\">&quot;<span class=\"variable\">$&#123;JAVA_CACERTS&#125;</span>&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Use the default unprivileged account. This could be considered bad practice</span></span><br><span class=\"line\"><span class=\"comment\"># on systems where multiple processes end up being executed by &#x27;daemon&#x27; but</span></span><br><span class=\"line\"><span class=\"comment\"># here we only ever run one process anyway.</span></span><br><span class=\"line\"><span class=\"keyword\">USER</span> daemon:daemon</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Expose default HTTP connector port.</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">8090</span> <span class=\"number\">8091</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set volume mount points for installation and home directory. Changes to the</span></span><br><span class=\"line\"><span class=\"comment\"># home directory needs to be persisted as well as parts of the installation</span></span><br><span class=\"line\"><span class=\"comment\"># directory due to eg. logs.</span></span><br><span class=\"line\"><span class=\"keyword\">VOLUME</span><span class=\"bash\"> [<span class=\"string\">&quot;/var/atlassian/confluence&quot;</span>, <span class=\"string\">&quot;/opt/atlassian/confluence/logs&quot;</span>]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set the default working directory as the Confluence home directory.</span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> /var/atlassian/confluence</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> docker-entrypoint.sh /</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;/docker-entrypoint.sh&quot;</span>]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Run Atlassian Confluence as a foreground process by default.</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">&quot;/opt/atlassian/confluence/bin/start-confluence.sh&quot;</span>, <span class=\"string\">&quot;-fg&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"docker-entrypoint-sh\"><a href=\"#docker-entrypoint-sh\" class=\"headerlink\" title=\"docker-entrypoint.sh\"></a>docker-entrypoint.sh</h4><blockquote>\n<p>摘自：<a class=\"link\"   href=\"https://github.com/cptactionhank/docker-atlassian-confluence/blob/master/docker-entrypoint.sh\" >https://github.com/cptactionhank/docker-atlassian-confluence/blob/master/docker-entrypoint.sh<i class=\"fas fa-external-link-alt\"></i></a></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># check if the `server.xml` file has been changed since the creation of this</span></span><br><span class=\"line\"><span class=\"comment\"># Docker image. If the file has been changed the entrypoint script will not</span></span><br><span class=\"line\"><span class=\"comment\"># perform modifications to the configuration file.</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"subst\">$(stat -c <span class=\"string\">&quot;%Y&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/conf/server.xml&quot;</span>)</span>&quot;</span> -eq <span class=\"string\">&quot;0&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ -n <span class=\"string\">&quot;<span class=\"variable\">$&#123;X_PROXY_NAME&#125;</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    xmlstarlet ed --inplace --pf --ps --insert <span class=\"string\">&#x27;//Connector[@port=&quot;8090&quot;]&#x27;</span> --<span class=\"built_in\">type</span> <span class=\"string\">&quot;attr&quot;</span> --name <span class=\"string\">&quot;proxyName&quot;</span> --value <span class=\"string\">&quot;<span class=\"variable\">$&#123;X_PROXY_NAME&#125;</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/conf/server.xml&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ -n <span class=\"string\">&quot;<span class=\"variable\">$&#123;X_PROXY_PORT&#125;</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    xmlstarlet ed --inplace --pf --ps --insert <span class=\"string\">&#x27;//Connector[@port=&quot;8090&quot;]&#x27;</span> --<span class=\"built_in\">type</span> <span class=\"string\">&quot;attr&quot;</span> --name <span class=\"string\">&quot;proxyPort&quot;</span> --value <span class=\"string\">&quot;<span class=\"variable\">$&#123;X_PROXY_PORT&#125;</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/conf/server.xml&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ -n <span class=\"string\">&quot;<span class=\"variable\">$&#123;X_PROXY_SCHEME&#125;</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    xmlstarlet ed --inplace --pf --ps --insert <span class=\"string\">&#x27;//Connector[@port=&quot;8090&quot;]&#x27;</span> --<span class=\"built_in\">type</span> <span class=\"string\">&quot;attr&quot;</span> --name <span class=\"string\">&quot;scheme&quot;</span> --value <span class=\"string\">&quot;<span class=\"variable\">$&#123;X_PROXY_SCHEME&#125;</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/conf/server.xml&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ -n <span class=\"string\">&quot;<span class=\"variable\">$&#123;X_PROXY_SECURE&#125;</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    xmlstarlet ed --inplace --pf --ps --insert <span class=\"string\">&#x27;//Connector[@port=&quot;8090&quot;]&#x27;</span> --<span class=\"built_in\">type</span> <span class=\"string\">&quot;attr&quot;</span> --name <span class=\"string\">&quot;secure&quot;</span> --value <span class=\"string\">&quot;<span class=\"variable\">$&#123;X_PROXY_SECURE&#125;</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/conf/server.xml&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ -n <span class=\"string\">&quot;<span class=\"variable\">$&#123;X_PATH&#125;</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    xmlstarlet ed --inplace --pf --ps --update <span class=\"string\">&#x27;//Context[@docBase=&quot;../confluence&quot;]/@path&#x27;</span> --value <span class=\"string\">&quot;<span class=\"variable\">$&#123;X_PATH&#125;</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;CONF_INSTALL&#125;</span>/conf/server.xml&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -f <span class=\"string\">&quot;<span class=\"variable\">$&#123;CERTIFICATE&#125;</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  keytool -noprompt -storepass changeit -keystore <span class=\"variable\">$&#123;JAVA_CACERTS&#125;</span> -import -file <span class=\"variable\">$&#123;CERTIFICATE&#125;</span> -<span class=\"built_in\">alias</span> CompanyCA</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exec</span> <span class=\"string\">&quot;<span class=\"variable\">$@</span>&quot;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Dockerfile-with-agent\"><a href=\"#Dockerfile-with-agent\" class=\"headerlink\" title=\"Dockerfile.with-agent\"></a>Dockerfile.with-agent</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> cptactionhank/atlassian-confluence:latest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">USER</span> root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置时区（东八区）</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> apk add -U tzdata \\</span></span><br><span class=\"line\"><span class=\"bash\">\t&amp;&amp; cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\</span></span><br><span class=\"line\"><span class=\"bash\">\t&amp;&amp; chmod +x /docker-entrypoint.sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将代理破解包加入容器</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> <span class=\"string\">&quot;atlassian-agent.jar&quot;</span> /opt/atlassian/confluence/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置启动加载代理包</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> <span class=\"built_in\">echo</span> <span class=\"string\">&#x27;\\nexport CATALINA_OPTS=&quot;-javaagent:/opt/atlassian/confluence/atlassian-agent.jar $&#123;CATALINA_OPTS&#125;&quot;&#x27;</span> &gt;&gt; /opt/atlassian/confluence/bin/setenv.sh</span></span><br></pre></td></tr></table></figure>\n<p>将该 <code>Dockerfile.with-agent</code> 与 <code>atlassian-agent.jar</code> 放于同一目录下，构建镜像</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -f Dockerfile.with-agent -t atlassian/confluence:7.9.3 .</span><br></pre></td></tr></table></figure>\n<p>Confluence版本号可在dockerhub中查到</p>\n<p><img src=\"confluence版本号查看.png\" alt=\"confluence版本号查看\"></p>\n<h3 id=\"运行容器-1\"><a href=\"#运行容器-1\" class=\"headerlink\" title=\"运行容器\"></a>运行容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 18090:8090 --name atlassian_confluence --restart=always \\</span><br><span class=\"line\">-v /opt/atlassian/conf/data:/var/atlassian/confluence \\</span><br><span class=\"line\">atlassian/confluence:7.9.3</span><br></pre></td></tr></table></figure>\n<h2 id=\"页面配置-1\"><a href=\"#页面配置-1\" class=\"headerlink\" title=\"页面配置\"></a>页面配置</h2><p>参考 <code>Jira-页面配置</code> </p>\n<h2 id=\"破解激活-1\"><a href=\"#破解激活-1\" class=\"headerlink\" title=\"破解激活\"></a>破解激活</h2><p>参考 <code>Jira-破解激活</code> </p>\n<h2 id=\"插件Tips\"><a href=\"#插件Tips\" class=\"headerlink\" title=\"插件Tips\"></a>插件Tips</h2><h3 id=\"PlantUML-for-Confluence\"><a href=\"#PlantUML-for-Confluence\" class=\"headerlink\" title=\"PlantUML for Confluence\"></a>PlantUML for Confluence</h3><p><img src=\"Snipaste_2021-06-16_10-20-08.png\" alt=\"install GraphViz\"></p>\n<p>使用该插件，需在容器内执行如下命令，以安装 <code>GraphViz</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash-4.4<span class=\"comment\"># apk update</span></span><br><span class=\"line\">fetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz</span><br><span class=\"line\">fetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz</span><br><span class=\"line\">v3.9.6-143-ga5f34edab6 [http://dl-cdn.alpinelinux.org/alpine/v3.9/main]</span><br><span class=\"line\">v3.9.6-138-ge069a77b3b [http://dl-cdn.alpinelinux.org/alpine/v3.9/community]</span><br><span class=\"line\">OK: 9791 distinct packages available</span><br><span class=\"line\">bash-4.4<span class=\"comment\"># apk add graphviz</span></span><br><span class=\"line\">(1/14) Installing pixman (0.34.0-r6)</span><br><span class=\"line\">(2/14) Installing cairo (1.16.0-r1)</span><br><span class=\"line\">(3/14) Installing libintl (0.19.8.1-r4)</span><br><span class=\"line\">(4/14) Installing libblkid (2.33-r0)</span><br><span class=\"line\">(5/14) Installing libmount (2.33-r0)</span><br><span class=\"line\">(6/14) Installing pcre (8.42-r2)</span><br><span class=\"line\">(7/14) Installing glib (2.58.1-r3)</span><br><span class=\"line\">(8/14) Installing libltdl (2.4.6-r5)</span><br><span class=\"line\">(9/14) Installing libxft (2.3.2-r3)</span><br><span class=\"line\">(10/14) Installing fribidi (1.0.5-r1)</span><br><span class=\"line\">(11/14) Installing graphite2 (1.3.12-r1)</span><br><span class=\"line\">(12/14) Installing harfbuzz (2.2.0-r0)</span><br><span class=\"line\">(13/14) Installing pango (1.42.4-r1)</span><br><span class=\"line\">(14/14) Installing graphviz (2.40.1-r1)</span><br><span class=\"line\">Executing busybox-1.29.3-r10.trigger</span><br><span class=\"line\">Executing glib-2.58.1-r3.trigger</span><br><span class=\"line\">Executing graphviz-2.40.1-r1.trigger</span><br><span class=\"line\">OK: 155 MiB <span class=\"keyword\">in</span> 93 packages</span><br></pre></td></tr></table></figure>\n<h1 id=\"CentOS7-安装\"><a href=\"#CentOS7-安装\" class=\"headerlink\" title=\"CentOS7 安装\"></a>CentOS7 安装</h1><h2 id=\"CentOS7安装XMLStarlet工具\"><a href=\"#CentOS7安装XMLStarlet工具\" class=\"headerlink\" title=\"CentOS7安装XMLStarlet工具\"></a>CentOS7安装XMLStarlet工具</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/x/xmlstarlet-1.6.1-1.el7.x86_64.rpm</span><br><span class=\"line\">yum install libxslt</span><br><span class=\"line\">rpm -ivh xmlstarlet-1.6.1-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装包下载\"><a href=\"#安装包下载\" class=\"headerlink\" title=\"安装包下载\"></a>安装包下载</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget <span class=\"string\">&#x27;https://product-downloads.atlassian.com/software/confluence/downloads/atlassian-confluence-7.13.2-x64.bin&#x27;</span></span><br></pre></td></tr></table></figure>\n","categories":["开新地图"],"tags":["Confluence","Jira","Atlassian"]},{"title":"【Spring】概述","url":"https://chiaralee.gitee.io/2021/04/29/【Spring】概述/","content":"<p>反射获取对象实例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取类的三种方式</span></span><br><span class=\"line\">Class clazz = Class.forName(完全限定名);</span><br><span class=\"line\"><span class=\"comment\">// Class clazz = 对象.getClass();</span></span><br><span class=\"line\"><span class=\"comment\">// Class clazz = 类名.class();</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取构造函数</span></span><br><span class=\"line\">Constructor ctor = clazz.getConstructor();</span><br><span class=\"line\"><span class=\"comment\">// 获取对象</span></span><br><span class=\"line\">Object obj = ctor.newInstance();</span><br></pre></td></tr></table></figure>\n<p>DefaultListableBeanFactory.java 类图关键类</p>\n<ul>\n<li>BeanFactory</li>\n<li>AbstractAutowireCapableBeanFactory</li>\n<li>DefaultListableBeanFactory</li>\n</ul>\n<p>创建对象：</p>\n<ol>\n<li><p>实例化：</p>\n<p>在堆中开辟一块空间，对象的属性值都是默认值</p>\n</li>\n<li><p>初始化：</p>\n<p>给属性设置值（1、填充属性；2、执行初始化方法，init-method）</p>\n</li>\n</ol>\n<p>Aware接口作用是什么？</p>\n<p>当Spring容器创建的Bean对象在进行具体操作的时候，如果需要容器的其他对象，此时可以将对象实现Aware接口，来满足需求。</p>\n<p>Spring Bean</p>\n<ul>\n<li>普通对象：自定义，需要的对象</li>\n<li>容器对象：内置的，Spring需要的对象</li>\n</ul>\n<p>在不同的阶段要处理不同的工作，应该怎么办？</p>\n<p>【观察者模式】：监听器、监听事件，多播器（广播器）</p>\n<p>重要接口：</p>\n<ul>\n<li>BeanFactory</li>\n<li>Aware</li>\n<li>BeanDefinition</li>\n<li>BeanDefinitionReader</li>\n<li>BeanDefinitionRegistry</li>\n<li>BeanFactoryPostProcessor</li>\n<li>BeanPostProcessor</li>\n<li>Environment：<ul>\n<li>StandardEnvironment<ul>\n<li>System.getEnv();</li>\n<li>System.getProperties();</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>FactoryBean</li>\n</ul>\n<p>BeanFactory、FactoryBean的区别？</p>\n<ul>\n<li>都是用来创建对象的，当使用BeanFactory的时候必须要遵循完整的创建过程，该过程由Spring管理控制；当使用FactoryBean时，只需要调用getObject就可以返回具体对象，整个对象的创建过程是由用户自己来控制的，更加灵活</li>\n<li>FactoryBean中含有三个方法：getObject、getObjectType、isSingleton</li>\n</ul>\n","categories":["Spring"],"tags":["咕咕咕","Spring"]},{"title":"【ALL-IN】设计模式","url":"https://chiaralee.gitee.io/2021/04/29/【ALL-IN】设计模式/","content":"<h1 id=\"设计模式小结\"><a href=\"#设计模式小结\" class=\"headerlink\" title=\"设计模式小结\"></a>设计模式小结</h1><blockquote>\n<p>很多设计模式，其实只在语义上有区分，本质用到的都是各种各样的<strong>多态</strong>。</p>\n</blockquote>\n<h2 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h2><!-- // TODO 典型案例 + 类图-->\n<h3 id=\"创建型模式\"><a href=\"#创建型模式\" class=\"headerlink\" title=\"创建型模式\"></a>创建型模式</h3><blockquote>\n<p>对象如何创建</p>\n</blockquote>\n<ul>\n<li><strong>Abstract Factory</strong></li>\n<li>Builder</li>\n<li><strong>Factory Method</strong></li>\n<li>Prototype</li>\n<li><strong>Singleton</strong></li>\n</ul>\n<h3 id=\"结构型模式\"><a href=\"#结构型模式\" class=\"headerlink\" title=\"结构型模式\"></a>结构型模式</h3><blockquote>\n<p>观察类和类之间的结构</p>\n</blockquote>\n<ul>\n<li>Adapter</li>\n<li>Bridge</li>\n<li>Composite</li>\n<li>Decorator</li>\n<li>Facade</li>\n<li>Flyweight</li>\n<li>Proxy</li>\n</ul>\n<h3 id=\"行为型模式\"><a href=\"#行为型模式\" class=\"headerlink\" title=\"行为型模式\"></a>行为型模式</h3><blockquote>\n<p>类的动作</p>\n</blockquote>\n<ul>\n<li>Chain of Responsibility</li>\n<li>Command</li>\n<li>Interpreter</li>\n<li>Iterator</li>\n<li>Mediator</li>\n<li>Memento</li>\n<li>Observer</li>\n<li>State</li>\n<li>Strategy</li>\n<li>Template Method</li>\n<li>Visitor</li>\n</ul>\n<h2 id=\"面向对象设计六大原则\"><a href=\"#面向对象设计六大原则\" class=\"headerlink\" title=\"面向对象设计六大原则\"></a>面向对象设计六大原则</h2><h3 id=\"指导思想\"><a href=\"#指导思想\" class=\"headerlink\" title=\"指导思想\"></a>指导思想</h3><ul>\n<li>可维护性 Maintainability<ul>\n<li>修改功能，需要改动的地方越少，可维护性就越好</li>\n</ul>\n</li>\n<li>可复用性 Reusability<ul>\n<li>代码可以被以后重复使用</li>\n<li>写出自己总结的类库</li>\n</ul>\n</li>\n<li>可扩展性 Extensibility/Scalability<ul>\n<li>添加功能无需修改原来的代码</li>\n</ul>\n</li>\n<li>灵活性 Flexibility/Mobility/Adaptability<ul>\n<li>代码接口可以灵活调用</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"六大原则\"><a href=\"#六大原则\" class=\"headerlink\" title=\"六大原则\"></a>六大原则</h3><h4 id=\"开闭原则（OCP-Open-Closed-Principle）\"><a href=\"#开闭原则（OCP-Open-Closed-Principle）\" class=\"headerlink\" title=\"开闭原则（OCP: Open-Closed Principle）\"></a>开闭原则（<code>OCP</code>: Open-Closed Principle）</h4><blockquote>\n<p>总纲，对扩展开放，对修改关闭</p>\n</blockquote>\n<ul>\n<li>对扩展开放，对修改关闭<ul>\n<li>尽量不修改原来代码的情况下进行扩展</li>\n</ul>\n</li>\n<li>抽象化，多态是开闭原则的关键</li>\n</ul>\n<h4 id=\"单一职责（SRP-Single-Responsibility-Principle）\"><a href=\"#单一职责（SRP-Single-Responsibility-Principle）\" class=\"headerlink\" title=\"单一职责（SRP: Single Responsibility Principle）\"></a>单一职责（<code>SRP</code>: Single Responsibility Principle）</h4><blockquote>\n<p>类的职责要单一</p>\n</blockquote>\n<ul>\n<li>一个类别太大，别太累，负责单一的职责</li>\n<li>高内聚，低耦合</li>\n</ul>\n<h4 id=\"里式替换原则（LSP-Liskov-Substitution-Principle）\"><a href=\"#里式替换原则（LSP-Liskov-Substitution-Principle）\" class=\"headerlink\" title=\"里式替换原则（LSP: Liskov Substitution Principle）\"></a>里式替换原则（<code>LSP</code>: Liskov Substitution Principle）</h4><blockquote>\n<p>子类可以透明替换父类</p>\n</blockquote>\n<ul>\n<li>所有使用父类的地方，必须能够透明的使用子类对象<ul>\n<li>子类能够完全替代父类</li>\n<li>所有使用父类的地方，能够替换成子类，且其他代码不用变</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"依赖倒置原则（DIP-Dependency-Inversion-Principle）\"><a href=\"#依赖倒置原则（DIP-Dependency-Inversion-Principle）\" class=\"headerlink\" title=\"依赖倒置原则（DIP: Dependency Inversion Principle）\"></a>依赖倒置原则（<code>DIP</code>: Dependency Inversion Principle）</h4><blockquote>\n<p>面向接口编程</p>\n</blockquote>\n<ul>\n<li>依赖抽象，而不是依赖具体</li>\n<li>面向接口（抽象）编程</li>\n</ul>\n<h4 id=\"接口隔离原则（ISP-Interface-Segregation-Principle）\"><a href=\"#接口隔离原则（ISP-Interface-Segregation-Principle）\" class=\"headerlink\" title=\"接口隔离原则（ISP: Interface Segregation Principle）\"></a>接口隔离原则（<code>ISP</code>: Interface Segregation Principle）</h4><blockquote>\n<p>接口的职责要单一</p>\n</blockquote>\n<ul>\n<li>每一个接口应该承担独立的角色，不干不该自己干的事<ul>\n<li>避免子类实现不需要实现的方法</li>\n<li>需要对客户提供接口的时候，只需要暴露最小的接口</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"迪米特法则（LoD-Law-of-Demeter-Principle）\"><a href=\"#迪米特法则（LoD-Law-of-Demeter-Principle）\" class=\"headerlink\" title=\"迪米特法则（LoD: Law of Demeter Principle）\"></a>迪米特法则（<code>LoD</code>: Law of Demeter Principle）</h4><blockquote>\n<p>降低耦合</p>\n</blockquote>\n<ul>\n<li><p>尽量不要和陌生人说话</p>\n<p>对于一个对象，非陌生人包括：</p>\n<ul>\n<li>当前对象本身 <code>this</code></li>\n<li>以参数形式传入到当前对象方法中的对象</li>\n<li>当前对象的成员对象</li>\n<li>如果当前对象的成员对象是一个集合，那么集合中的元素也都是朋友</li>\n<li>当前对象所创建的对象</li>\n</ul>\n</li>\n<li><p>和其他类的耦合度变低</p>\n</li>\n</ul>\n","categories":["设计模式"],"tags":["咕咕咕","all-in","设计模式"]},{"title":"【设计模式】Interpreter-解释器","url":"https://chiaralee.gitee.io/2021/04/29/【设计模式】Interpreter-解释器/","content":"<h1 id=\"解释器模式（Interpreter-Pattern）\"><a href=\"#解释器模式（Interpreter-Pattern）\" class=\"headerlink\" title=\"解释器模式（Interpreter Pattern）\"></a>解释器模式（Interpreter Pattern）</h1><blockquote>\n<p>动态脚本解析</p>\n</blockquote>\n<p>// TODO</p>\n","categories":["设计模式"],"tags":["咕咕咕","设计模式","解释器"]},{"title":"【设计模式】State-状态","url":"https://chiaralee.gitee.io/2021/04/28/【设计模式】State-状态/","content":"<h1 id=\"状态模式（State-Pattern）\"><a href=\"#状态模式（State-Pattern）\" class=\"headerlink\" title=\"状态模式（State Pattern）\"></a>状态模式（State Pattern）</h1><blockquote>\n<p>根据状态决定行动</p>\n</blockquote>\n<ul>\n<li>handle不会扩展的情况下使用，若handle扩展，继承自State的所有状态都需要扩展</li>\n<li>若State不会扩展，<code>switch...case</code> 更佳</li>\n</ul>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><h3 id=\"No-1-switch-case\"><a href=\"#No-1-switch-case\" class=\"headerlink\" title=\"No 1.  switch...case\"></a>No 1.  <code>switch...case</code></h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 阶段一：用switch...case，添加状态时，不方便</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/28</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  String name;</span><br><span class=\"line\"></span><br><span class=\"line\">  PersonState state;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 不同状态下的笑</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/29 19:12</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">smile</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (state) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> HAPPY:</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;开心地笑&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> SAD:</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;苦笑&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 不同状态下的哭</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/29 19:12</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">cry</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO switch...case</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 不同状态下的说</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/29 19:12</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">say</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO switch...case</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">PersonState</span> </span>&#123;</span><br><span class=\"line\">    HAPPY,</span><br><span class=\"line\">    SAD</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-2-状态模式\"><a href=\"#No-2-状态模式\" class=\"headerlink\" title=\"No 2. 状态模式\"></a>No 2. 状态模式</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 二阶段：把PersonState抽象成一个抽象类，不同状态的类通过继承PersonState，实现各自的方法</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/29</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  String name;</span><br><span class=\"line\">  PersonState state;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 不同状态下的笑</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/29 19:12</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">smile</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    state.smile();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 不同状态下的哭</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/29 19:12</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">cry</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    state.cry();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 不同状态下的说</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/29 19:12</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">say</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    state.say();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 状态抽象类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/29</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PersonState</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 不同状态下的笑</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/29 19:14</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">smile</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 不同状态下的哭</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/29 19:14</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">cry</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 不同状态下的说</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/29 19:14</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">say</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 快乐状态</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/29</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HappyState</span> <span class=\"keyword\">extends</span> <span class=\"title\">PersonState</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">smile</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;开心地笑&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">cry</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;激动地流泪&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">say</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;高兴地说&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["设计模式"],"tags":["设计模式","状态"]},{"title":"【Shell脚本】定时清理文件","url":"https://chiaralee.gitee.io/2021/04/28/【Shell脚本】定时清理文件/","content":"<h3 id=\"清理文件\"><a href=\"#清理文件\" class=\"headerlink\" title=\"清理文件\"></a>清理文件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">################################################################</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 因BACKUP_DIR取当前路径，故该脚本需与备份文件置于同一目录下</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">################################################################</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 保存备份个数，备份31天数据</span></span><br><span class=\"line\">NUMBER=7</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 备份保存路径，当前路径</span></span><br><span class=\"line\">BACKUP_DIR=$(dirname $(readlink -f &quot;$0&quot;))</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 需要删除的文件</span></span><br><span class=\"line\">FILES_NAME=&quot;test*.txt&quot;</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 删除最早生成的备份，只保留NUMBER数量的备份</span></span><br><span class=\"line\">delete() &#123;</span><br><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> 判断现在的备份数量是否大于<span class=\"variable\">$NUMBER</span></span></span><br><span class=\"line\">  count=$(find &quot;$BACKUP_DIR&quot; -maxdepth 1 -name &quot;$FILES_NAME&quot; | wc -l)</span><br><span class=\"line\"></span><br><span class=\"line\">  while [ &quot;$count&quot; -gt $NUMBER ]</span><br><span class=\"line\">  do</span><br><span class=\"line\">    # 找出需要删除的备份</span><br><span class=\"line\">    delete_files=$(find &quot;$BACKUP_DIR&quot; -maxdepth 1 -name &quot;$FILES_NAME&quot; -print0 | xargs -0 ls -lrt | head -1 | awk &#x27;&#123; print substr($0, index($0,$9)) &#125;&#x27;)</span><br><span class=\"line\">    # 删除最早生成的备份，只保留NUMBER数量的备份</span><br><span class=\"line\">    rm &quot;$delete_files&quot;</span><br><span class=\"line\">    # 写删除文件日志</span><br><span class=\"line\">    echo &quot;delete $delete_files&quot; &gt;&gt; &quot;$BACKUP_DIR&quot;/log.txt</span><br><span class=\"line\">    # 判断现在的备份数量是否大于$NUMBER</span><br><span class=\"line\">    count=$(find &quot;$BACKUP_DIR&quot; -maxdepth 1 -name &quot;$FILES_NAME&quot; | wc -l)</span><br><span class=\"line\">  done</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">delete</span><br></pre></td></tr></table></figure>\n<h3 id=\"测试脚本：创建99个文件\"><a href=\"#测试脚本：创建99个文件\" class=\"headerlink\" title=\"测试脚本：创建99个文件\"></a>测试脚本：创建99个文件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">i=1</span><br><span class=\"line\">while [ $i -le 99 ]</span><br><span class=\"line\">do</span><br><span class=\"line\">\tname=`printf &quot;test%02d.txt&quot;  $i`</span><br><span class=\"line\">\ttouch &quot;$name&quot;</span><br><span class=\"line\">\ti=$(($i+1))</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n","categories":["Linux"],"tags":["Shell"]},{"title":"【设计模式】TemplateMethod-模板方法","url":"https://chiaralee.gitee.io/2021/04/27/【设计模式】TemplateMethod-模板方法/","content":"<h1 id=\"模板方法模式（Template-Method-Pattern）\"><a href=\"#模板方法模式（Template-Method-Pattern）\" class=\"headerlink\" title=\"模板方法模式（Template Method Pattern）\"></a>模板方法模式（Template Method Pattern）</h1><blockquote>\n<p>钩子函数</p>\n</blockquote>\n<p>重写一个方法时，系统可以自动帮我们进行调用。</p>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 模板方法&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * 重写一个方法，系统可以自动的帮我们进行调用</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/28</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Parent p = <span class=\"keyword\">new</span> Child();</span><br><span class=\"line\">    p.m();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 抽象父类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/28</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Parent</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 方法m中调用op1、op2</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/28 17:52</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">m</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    op1();</span><br><span class=\"line\">    op2();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">op1</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">op2</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现抽象方法的子类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/28</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Child</span> <span class=\"keyword\">extends</span> <span class=\"title\">Parent</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">op1</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Child Op1.&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">op2</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Child Op2.&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["设计模式"],"tags":["设计模式","模板方法"]},{"title":"【设计模式】Memento-备忘录","url":"https://chiaralee.gitee.io/2021/04/27/【设计模式】Memento-备忘录/","content":"<h1 id=\"备忘录模式（Memento-Pattern）\"><a href=\"#备忘录模式（Memento-Pattern）\" class=\"headerlink\" title=\"备忘录模式（Memento Pattern）\"></a>备忘录模式（Memento Pattern）</h1><blockquote>\n<p>记录状态、便于回滚</p>\n</blockquote>\n<p>常用于：记录快照（瞬时状态）、存盘</p>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 备忘录模式</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    Person per = <span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;张三&quot;</span>, <span class=\"number\">18</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 序列化后生成文件</span></span><br><span class=\"line\">    save(per);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 从文件中加载到内存</span></span><br><span class=\"line\">    Person newPer = load();</span><br><span class=\"line\">    System.out.println(newPer);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 存档</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/27 20:15</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">(Person p)</span> </span>&#123;</span><br><span class=\"line\">    File f = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;d:/person.ser&quot;</span>);</span><br><span class=\"line\">    ObjectOutputStream oos = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      oos = <span class=\"keyword\">new</span> ObjectOutputStream(<span class=\"keyword\">new</span> FileOutputStream(f));</span><br><span class=\"line\">      oos.writeObject(p);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != oos) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">          oos.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">          e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 加载记录</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/27 20:15</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Person <span class=\"title\">load</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    File f = <span class=\"keyword\">new</span> File(<span class=\"string\">&quot;d:/person.ser&quot;</span>);</span><br><span class=\"line\">    ObjectInputStream ois = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      ois = <span class=\"keyword\">new</span> ObjectInputStream(<span class=\"keyword\">new</span> FileInputStream(f));</span><br><span class=\"line\">      <span class=\"keyword\">return</span> (Person) ois.readObject();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException | ClassNotFoundException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != ois) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">          ois.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">          e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现序列化的标志性接口：Serializable接口</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 本类可以序列化</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> age)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;姓名：&quot;</span> + <span class=\"keyword\">this</span>.name + <span class=\"string\">&quot;，年龄&quot;</span> + <span class=\"keyword\">this</span>.age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["设计模式"],"tags":["设计模式","备忘录"]},{"title":"【设计模式】Prototype-原型","url":"https://chiaralee.gitee.io/2021/04/27/【设计模式】Prototype-原型/","content":"<h1 id=\"原型模式（Prototype-Pattern）\"><a href=\"#原型模式（Prototype-Pattern）\" class=\"headerlink\" title=\"原型模式（Prototype Pattern）\"></a>原型模式（Prototype Pattern）</h1><blockquote>\n<p>又称：克隆模式 <code>Object.clone()</code></p>\n</blockquote>\n<ul>\n<li>java中自带原型模式</li>\n<li>实现原型模式需要实现标记性接口 <code>Cloneable</code><ul>\n<li>⚠️如果只是重写 <code>clone()</code> 方法，而没有实现接口，编译时不会报错，运行时会报错</li>\n</ul>\n</li>\n<li>一般会重写 <code>clone()</code> 方法</li>\n<li>一般用于一个对象的属性已经确定，需要产生很多相同对象的时候</li>\n<li>需要区分深拷贝、浅拷贝</li>\n</ul>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><h3 id=\"浅拷贝\"><a href=\"#浅拷贝\" class=\"headerlink\" title=\"浅拷贝\"></a>浅拷贝</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 一阶段：浅拷贝</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    Person p1 = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">    Person p2 = (Person) p1.clone();</span><br><span class=\"line\">    System.out.println(p2.age + <span class=\"string\">&quot; &quot;</span> + p2.score);</span><br><span class=\"line\">    System.out.println(p2.loc);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(p1.loc == p2.loc); <span class=\"comment\">// true，拷贝p1时，loc拷贝的是引用地址</span></span><br><span class=\"line\">    p1.loc.street = <span class=\"string\">&quot;sh&quot;</span>;</span><br><span class=\"line\">    System.out.println(p2.loc); <span class=\"comment\">// 修改p1的loc值，p2也被影响</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现Cloneable，重写clone方法</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> <span class=\"keyword\">implements</span> <span class=\"title\">Cloneable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> age = <span class=\"number\">8</span>;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> score = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  Location loc = <span class=\"keyword\">new</span> Location(<span class=\"string\">&quot;bj&quot;</span>, <span class=\"number\">22</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">clone</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> CloneNotSupportedException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.clone();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 地理位置</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Location</span> </span>&#123;</span><br><span class=\"line\">  String street;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> roomNo;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Location&#123;&quot;</span> + <span class=\"string\">&quot;street=&#x27;&quot;</span> + street + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> + <span class=\"string\">&quot;, roomNo=&quot;</span> + roomNo + <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Location</span><span class=\"params\">(String street, <span class=\"keyword\">int</span> roomNo)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.street = street;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.roomNo = roomNo;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"深拷贝\"><a href=\"#深拷贝\" class=\"headerlink\" title=\"深拷贝\"></a>深拷贝</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 二阶段：深拷贝</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;被拷贝的对象引用的属性也需要实现Cloneable接口、重写clone，并在clone时，调用该属性的clone函数</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    Person p1 = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">    Person p2 = (Person) p1.clone();</span><br><span class=\"line\">    System.out.println(p2.age + <span class=\"string\">&quot; &quot;</span> + p2.score);</span><br><span class=\"line\">    System.out.println(p2.loc);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(p1.loc == p2.loc); <span class=\"comment\">// false，拷贝p1时，调用loc的clone，赋值给p2</span></span><br><span class=\"line\">    p1.loc.street = <span class=\"string\">&quot;sh&quot;</span>;</span><br><span class=\"line\">    System.out.println(p2.loc); <span class=\"comment\">// 修改p1的loc值，p2无影响</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现Cloneable，重写clone方法</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> <span class=\"keyword\">implements</span> <span class=\"title\">Cloneable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> age = <span class=\"number\">8</span>;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> score = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  Location loc = <span class=\"keyword\">new</span> Location(<span class=\"string\">&quot;bj&quot;</span>, <span class=\"number\">22</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">clone</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> CloneNotSupportedException </span>&#123;</span><br><span class=\"line\">    Person p = (Person) <span class=\"keyword\">super</span>.clone();</span><br><span class=\"line\">    p.loc = (Location) loc.clone();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现Cloneable，重写clone方法</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Location</span> <span class=\"keyword\">implements</span> <span class=\"title\">Cloneable</span> </span>&#123;</span><br><span class=\"line\">  String street;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> roomNo;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Location&#123;&quot;</span> + <span class=\"string\">&quot;street=&#x27;&quot;</span> + street + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> + <span class=\"string\">&quot;, roomNo=&quot;</span> + roomNo + <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Location</span><span class=\"params\">(String street, <span class=\"keyword\">int</span> roomNo)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.street = street;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.roomNo = roomNo;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">clone</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> CloneNotSupportedException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.clone();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"⚠️深拷贝时，String需要进一步深拷贝嘛？\"><a href=\"#⚠️深拷贝时，String需要进一步深拷贝嘛？\" class=\"headerlink\" title=\"⚠️深拷贝时，String需要进一步深拷贝嘛？\"></a>⚠️深拷贝时，String需要进一步深拷贝嘛？</h4><p>不需要，因为String指向的是公共的常量池，参考 <code>Flyweight-享元模式</code>。</p>\n<blockquote>\n<p>当 <code>p1.loc.street</code> 从 <code>bj</code> 变为 <code>sh</code> 时，并非修改了原 <code>bj</code> 所指向地址的值，而是在公共的常量池中新增了 <code>sh</code> 这个值，并将 <code>p1.loc.street</code> 指向这个新的值。</p>\n</blockquote>\n","categories":["设计模式"],"tags":["设计模式","原型"]},{"title":"【设计模式】Command-命令","url":"https://chiaralee.gitee.io/2021/04/27/【设计模式】Command-命令/","content":"<h1 id=\"命令模式（Command-Action-Transaction-Pattern）\"><a href=\"#命令模式（Command-Action-Transaction-Pattern）\" class=\"headerlink\" title=\"命令模式（Command/Action/Transaction Pattern）\"></a>命令模式（Command/Action/Transaction Pattern）</h1><blockquote>\n<p>封装命令</p>\n</blockquote>\n<ul>\n<li>Command + Memento =&gt; Trasaction回滚</li>\n<li>Command + Chain Of Responsibility =&gt; 多次Undo</li>\n<li>Command + Composite =&gt; 宏命令</li>\n</ul>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><blockquote>\n<p>对一段内容执行不同的命令：插入、拷贝，并回滚。</p>\n</blockquote>\n<h3 id=\"No-1-原生命令模式，逐一执行、回滚\"><a href=\"#No-1-原生命令模式，逐一执行、回滚\" class=\"headerlink\" title=\"No 1. 原生命令模式，逐一执行、回滚\"></a>No 1. 原生命令模式，逐一执行、回滚</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 一阶段：原生命令模式</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Content c = <span class=\"keyword\">new</span> Content();</span><br><span class=\"line\"></span><br><span class=\"line\">    Command insert = <span class=\"keyword\">new</span> InsertCommand(c);</span><br><span class=\"line\">    insert.exec();</span><br><span class=\"line\">    insert.undo();</span><br><span class=\"line\"></span><br><span class=\"line\">    Command copy = <span class=\"keyword\">new</span> CopyCommand(c);</span><br><span class=\"line\">    copy.exec();</span><br><span class=\"line\">    copy.undo();</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(c.msg);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 用于封装命令</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Command</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">exec</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">undo</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 操作文本编辑器的命令：插入命令</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InsertCommand</span> <span class=\"keyword\">extends</span> <span class=\"title\">Command</span> </span>&#123;</span><br><span class=\"line\">  Content c;</span><br><span class=\"line\">  String strToInsert = <span class=\"string\">&quot;https://chiaralee.gitee.io/&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">InsertCommand</span><span class=\"params\">(Content c)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.c = c;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">exec</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    c.msg += strToInsert;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">undo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    c.msg = c.msg.substring(<span class=\"number\">0</span>, c.msg.length() - strToInsert.length());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 操作文本编辑器的命令：拷贝命令</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CopyCommand</span> <span class=\"keyword\">extends</span> <span class=\"title\">Command</span> </span>&#123;</span><br><span class=\"line\">  Content c;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CopyCommand</span><span class=\"params\">(Content c)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.c = c;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">exec</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    c.msg += c.msg;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">undo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    c.msg = c.msg.substring(<span class=\"number\">0</span>, c.msg.length() / <span class=\"number\">2</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 模拟文本编辑器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Content</span> </span>&#123;</span><br><span class=\"line\">  String msg = <span class=\"string\">&quot;hello Miibo &quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-2-与责任链结合，实现多命令回滚\"><a href=\"#No-2-与责任链结合，实现多命令回滚\" class=\"headerlink\" title=\"No 2. 与责任链结合，实现多命令回滚\"></a>No 2. 与责任链结合，实现多命令回滚</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.google.common.collect.Lists;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 二阶段：结合责任链实现多命令Undo</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Content c = <span class=\"keyword\">new</span> Content();</span><br><span class=\"line\"></span><br><span class=\"line\">    CommandChain cc = <span class=\"keyword\">new</span> CommandChain();</span><br><span class=\"line\">    cc.add(<span class=\"keyword\">new</span> InsertCommand(c)).add(<span class=\"keyword\">new</span> CopyCommand(c));</span><br><span class=\"line\"></span><br><span class=\"line\">    cc.exec();</span><br><span class=\"line\">    cc.undo(cc);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(c.msg);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 模拟文本编辑器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Content</span> </span>&#123;</span><br><span class=\"line\">  String msg = <span class=\"string\">&quot;hello Miibo &quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 用于封装命令</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Command</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 执行命令</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/27 18:50</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">exec</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 撤回命令</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/27 18:50</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> chain 命令链，用于实现多命令undo</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">undo</span><span class=\"params\">(CommandChain chain)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 操作文本编辑器的命令：插入命令</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InsertCommand</span> <span class=\"keyword\">implements</span> <span class=\"title\">Command</span> </span>&#123;</span><br><span class=\"line\">  Content c;</span><br><span class=\"line\">  String strToInsert = <span class=\"string\">&quot;https://chiaralee.gitee.io/&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">InsertCommand</span><span class=\"params\">(Content c)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.c = c;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">exec</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    c.msg += strToInsert;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">undo</span><span class=\"params\">(CommandChain chain)</span> </span>&#123;</span><br><span class=\"line\">    chain.undo(chain);</span><br><span class=\"line\">    c.msg = c.msg.substring(<span class=\"number\">0</span>, c.msg.length() - strToInsert.length());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 操作文本编辑器的命令：拷贝命令</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CopyCommand</span> <span class=\"keyword\">implements</span> <span class=\"title\">Command</span> </span>&#123;</span><br><span class=\"line\">  Content c;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CopyCommand</span><span class=\"params\">(Content c)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.c = c;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">exec</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    c.msg += c.msg;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">undo</span><span class=\"params\">(CommandChain chain)</span> </span>&#123;</span><br><span class=\"line\">    chain.undo(chain);</span><br><span class=\"line\">    c.msg = c.msg.substring(<span class=\"number\">0</span>, c.msg.length() / <span class=\"number\">2</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 命令链</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/27</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CommandChain</span> <span class=\"keyword\">implements</span> <span class=\"title\">Command</span> </span>&#123;</span><br><span class=\"line\">  List&lt;Command&gt; commandList = Lists.newArrayList();</span><br><span class=\"line\">  <span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 添加命令</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/27 18:57</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 命令链</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> CommandChain <span class=\"title\">add</span><span class=\"params\">(Command command)</span> </span>&#123;</span><br><span class=\"line\">    commandList.add(command);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">exec</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Command command : commandList) &#123;</span><br><span class=\"line\">      command.exec();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">undo</span><span class=\"params\">(CommandChain chain)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index != commandList.size()) &#123;</span><br><span class=\"line\">      commandList.get(index++).undo(chain);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["设计模式"],"tags":["设计模式","命令"]},{"title":"【设计模式】Bridge-桥接","url":"https://chiaralee.gitee.io/2021/04/26/【设计模式】Bridge-桥接/","content":"<h1 id=\"桥接模式（Bridge-Pattern）\"><a href=\"#桥接模式（Bridge-Pattern）\" class=\"headerlink\" title=\"桥接模式（Bridge Pattern）\"></a>桥接模式（Bridge Pattern）</h1><blockquote>\n<p>双维度扩展</p>\n</blockquote>\n<ul>\n<li>分离抽象与具体<ul>\n<li>抽象树与实现树分开发展</li>\n</ul>\n</li>\n<li>用聚合方式（桥）连接抽象与具体<ul>\n<li>抽象类里聚合一个具体的实现</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><p>送礼物场景下</p>\n<p><img src=\"桥接.png\" alt=\"桥接\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 桥接&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;抽象树、实现树，各自发展</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;抽象类中聚合一个实现类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/26</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 抽象、实现树可任意组合，避免定义过多类，诸如：WarmFlowerGift、ColdFlowerGift...</span></span><br><span class=\"line\">    Gift gift = <span class=\"keyword\">new</span> WarmGift(<span class=\"keyword\">new</span> Flower());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 抽象类：礼物</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/26</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Gift</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 聚合一个具体的实现类</span></span><br><span class=\"line\">  GiftImpl impl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 抽象树成员：温暖的礼物</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/26</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WarmGift</span> <span class=\"keyword\">extends</span> <span class=\"title\">Gift</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">WarmGift</span><span class=\"params\">(GiftImpl impl)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.impl = impl;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现类类：礼物</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/26</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GiftImpl</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现树成员：花</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/26</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flower</span> <span class=\"keyword\">extends</span> <span class=\"title\">GiftImpl</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n","categories":["设计模式"],"tags":["设计模式","桥接"]},{"title":"【设计模式】Adapter(Wrapper)-包装器","url":"https://chiaralee.gitee.io/2021/04/25/【设计模式】Adapter-Wrapper-包装器/","content":"<h1 id=\"包装器模式（Adapter-Wrapper-Pattern）\"><a href=\"#包装器模式（Adapter-Wrapper-Pattern）\" class=\"headerlink\" title=\"包装器模式（Adapter/Wrapper Pattern）\"></a>包装器模式（Adapter/Wrapper Pattern）</h1><blockquote>\n<p>接口转换器、适配器</p>\n</blockquote>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><h3 id=\"No-1-电压转换头\"><a href=\"#No-1-电压转换头\" class=\"headerlink\" title=\"No 1. 电压转换头\"></a>No 1. 电压转换头</h3><h3 id=\"No-2-java-io\"><a href=\"#No-2-java-io\" class=\"headerlink\" title=\"No 2. java.io\"></a>No 2. java.io</h3><p><img src=\"适配器.png\" alt=\"适配器\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 将一个个字节读取转为按行读取</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/25</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 一个一个字节读取</span></span><br><span class=\"line\">    FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;c:/test.text&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// FileInputStream与BufferedReader的转化器</span></span><br><span class=\"line\">    InputStreamReader isr = <span class=\"keyword\">new</span> InputStreamReader(fis);</span><br><span class=\"line\">    BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(isr);</span><br><span class=\"line\">    <span class=\"comment\">// 按行读取</span></span><br><span class=\"line\">    String line = br.readLine();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (line != <span class=\"keyword\">null</span> &amp;&amp; !line.equals(<span class=\"string\">&quot;&quot;</span>)) &#123;</span><br><span class=\"line\">      System.out.println(line);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    br.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"⚠️常见的Adapter类不是Adapter模式\"><a href=\"#⚠️常见的Adapter类不是Adapter模式\" class=\"headerlink\" title=\"⚠️常见的Adapter类不是Adapter模式\"></a>⚠️常见的Adapter类不是Adapter模式</h2><p>一种编程方式</p>\n<h3 id=\"🌰举个栗子🌰-1\"><a href=\"#🌰举个栗子🌰-1\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h3><ol>\n<li><p>WindowListener接口，内含有很多方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Frame f = <span class=\"keyword\">new</span> Frame();</span><br><span class=\"line\">    f.addWindowListener(</span><br><span class=\"line\">        <span class=\"keyword\">new</span> WindowListener() &#123;</span><br><span class=\"line\">          <span class=\"meta\">@Override</span></span><br><span class=\"line\">          <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowOpened</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"meta\">@Override</span></span><br><span class=\"line\">          <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowClosing</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"meta\">@Override</span></span><br><span class=\"line\">          <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowClosed</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"meta\">@Override</span></span><br><span class=\"line\">          <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowIconified</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"meta\">@Override</span></span><br><span class=\"line\">          <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowDeiconified</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"meta\">@Override</span></span><br><span class=\"line\">          <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowActivated</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"meta\">@Override</span></span><br><span class=\"line\">          <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowDeactivated</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;&#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li><p>WindowAdapter抽象类，实现了WindowListener</p>\n</li>\n<li><p>当需要用WindowListener其中的一个方法时，只需要重写真正关心的方法即可</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowAdapter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Frame f = <span class=\"keyword\">new</span> Frame();</span><br><span class=\"line\">    f.addWindowListener(<span class=\"keyword\">new</span> WindowAdapter() &#123;&#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","categories":["设计模式"],"tags":["设计模式","包装器"]},{"title":"【设计模式】Builder-构建者","url":"https://chiaralee.gitee.io/2021/04/25/【设计模式】Builder-构建者/","content":"<h1 id=\"构建者模式（Builder-Pattern）\"><a href=\"#构建者模式（Builder-Pattern）\" class=\"headerlink\" title=\"构建者模式（Builder Pattern）\"></a>构建者模式（Builder Pattern）</h1><blockquote>\n<p>构建复杂对象</p>\n</blockquote>\n<ul>\n<li>分离复杂对象的构建和表示</li>\n<li>同样的构建过程可以创建不同的表示</li>\n<li>构建者强调构造对象，模板方法强调方法执行</li>\n<li>该设计模式无需记忆，自然使用</li>\n</ul>\n<p><img src=\"构建者.png\" alt=\"构建者\"></p>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 构建器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/25</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Person p =</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Person.PersonBuilder() <span class=\"comment\">// 静态内部类，由它来构建Person</span></span><br><span class=\"line\">            .basicInfo(<span class=\"number\">1</span>, <span class=\"string\">&quot;张三&quot;</span>, <span class=\"number\">18</span>)</span><br><span class=\"line\">            .weight(<span class=\"number\">200</span>)</span><br><span class=\"line\">            .loc(<span class=\"string\">&quot;法外狂徒街&quot;</span>, <span class=\"string\">&quot;1&quot;</span>)</span><br><span class=\"line\">            .build();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 复杂类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/25</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> id;</span><br><span class=\"line\">  String name;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> age;</span><br><span class=\"line\">  <span class=\"keyword\">double</span> weight;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> score;</span><br><span class=\"line\">  Location loc;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Person</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 构建Person的静态类</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/25</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PersonBuilder</span> </span>&#123;</span><br><span class=\"line\">    Person p = <span class=\"keyword\">new</span> Person();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Person的基本信息</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@date</span> 2021/4/25 20:59</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> PersonBuilder <span class=\"title\">basicInfo</span><span class=\"params\">(<span class=\"keyword\">int</span> id, String name, <span class=\"keyword\">int</span> age)</span> </span>&#123;</span><br><span class=\"line\">      p.id = id;</span><br><span class=\"line\">      p.name = name;</span><br><span class=\"line\">      p.age = age;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> PersonBuilder <span class=\"title\">weight</span><span class=\"params\">(<span class=\"keyword\">double</span> weight)</span> </span>&#123;</span><br><span class=\"line\">      p.weight = weight;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> PersonBuilder <span class=\"title\">score</span><span class=\"params\">(<span class=\"keyword\">int</span> score)</span> </span>&#123;</span><br><span class=\"line\">      p.score = score;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> PersonBuilder <span class=\"title\">loc</span><span class=\"params\">(String street, String roomNo)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      p.loc = <span class=\"keyword\">new</span> Location(street, roomNo);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Person <span class=\"title\">build</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 地理位置</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/25</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Location</span> </span>&#123;</span><br><span class=\"line\">  String street;</span><br><span class=\"line\">  String roomNo;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Location</span><span class=\"params\">(String street, String roomNo)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.street = street;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.roomNo = roomNo;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["设计模式"],"tags":["设计模式","构建者"]},{"title":"【设计模式】Visitor-访问者","url":"https://chiaralee.gitee.io/2021/04/24/【设计模式】Visitor-访问者/","content":"<h1 id=\"访问者模式（Visitor-Pattern）\"><a href=\"#访问者模式（Visitor-Pattern）\" class=\"headerlink\" title=\"访问者模式（Visitor Pattern）\"></a>访问者模式（Visitor Pattern）</h1><blockquote>\n<p>在 <strong>内部结构不变的情况下</strong>，动态改变对于内部元素的动作</p>\n</blockquote>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><p>假设装机场景下，电脑有两个个部件：CPU、内存，不同的人来购买电脑，折扣不同</p>\n<p><img src=\"访问者.png\" alt=\"访问者\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 访问者模式</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/24</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    PersonalVisitor visitor = <span class=\"keyword\">new</span> PersonalVisitor();</span><br><span class=\"line\"></span><br><span class=\"line\">    ComputerPart cpu = <span class=\"keyword\">new</span> CPU();</span><br><span class=\"line\">    ComputerPart memory = <span class=\"keyword\">new</span> Memory();</span><br><span class=\"line\">    cpu.accept(visitor);</span><br><span class=\"line\">    memory.accept(visitor);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(visitor.totalPrice);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * CPU</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/24</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CPU</span> <span class=\"keyword\">extends</span> <span class=\"title\">ComputerPart</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">accept</span><span class=\"params\">(Visitor visitor)</span> </span>&#123;</span><br><span class=\"line\">    visitor.visitCpu(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getPrice</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1000</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 内存</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/24</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Memory</span> <span class=\"keyword\">extends</span> <span class=\"title\">ComputerPart</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">accept</span><span class=\"params\">(Visitor visitor)</span> </span>&#123;</span><br><span class=\"line\">    visitor.visitMemory(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getPrice</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">100</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 电脑组件</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/24</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ComputerPart</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 接待访问者</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/24 13:39</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> visitor 访问者</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">accept</span><span class=\"params\">(Visitor visitor)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 价格查询</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/24 13:39</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 价格</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">double</span> <span class=\"title\">getPrice</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 访问者</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/24</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Visitor</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 获取CPU</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/24 13:39</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">visitCpu</span><span class=\"params\">(CPU cpu)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 获取内存</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/24 13:40</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">visitMemory</span><span class=\"params\">(Memory memory)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 个人用户</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/24</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PersonalVisitor</span> <span class=\"keyword\">implements</span> <span class=\"title\">Visitor</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">double</span> totalPrice = <span class=\"number\">0.0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visitCpu</span><span class=\"params\">(CPU cpu)</span> </span>&#123;</span><br><span class=\"line\">    totalPrice += cpu.getPrice() * <span class=\"number\">0.9</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visitMemory</span><span class=\"params\">(Memory memory)</span> </span>&#123;</span><br><span class=\"line\">    totalPrice += memory.getPrice() * <span class=\"number\">0.9</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"✏️附：ASM中访问者模式的使用Demo\"><a href=\"#✏️附：ASM中访问者模式的使用Demo\" class=\"headerlink\" title=\"✏️附：ASM中访问者模式的使用Demo\"></a>✏️附：ASM中访问者模式的使用Demo</h2><h3 id=\"No-1-读取Class文件\"><a href=\"#No-1-读取Class文件\" class=\"headerlink\" title=\"No 1. 读取Class文件\"></a>No 1. 读取Class文件</h3><h4 id=\"ClassPrinter类\"><a href=\"#ClassPrinter类\" class=\"headerlink\" title=\"ClassPrinter类\"></a>ClassPrinter类</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.objectweb.asm.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> org.objectweb.asm.Opcodes.ASM4;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * ASM中的访问者模式Demo1：读取Class文件&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * REF：https://asm.ow2.io/asm4-guide.pdf 《2.2.2. Parsing classes》</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/24</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ClassPrinter</span> <span class=\"keyword\">extends</span> <span class=\"title\">ClassVisitor</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ClassPrinter</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(ASM4);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">      <span class=\"keyword\">int</span> version,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">      <span class=\"keyword\">int</span> access,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">      String name,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">      String signature,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">      String superName,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">      String[] interfaces)</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(name + <span class=\"string\">&quot; extends &quot;</span> + superName + <span class=\"string\">&quot; &#123;&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visitSource</span><span class=\"params\">(String source, String debug)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visitOuterClass</span><span class=\"params\">(String owner, String name, String desc)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> AnnotationVisitor <span class=\"title\">visitAnnotation</span><span class=\"params\">(String desc, <span class=\"keyword\">boolean</span> visible)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visitAttribute</span><span class=\"params\">(Attribute attr)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visitInnerClass</span><span class=\"params\">(String name, String outerName, String innerName, <span class=\"keyword\">int</span> access)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> FieldVisitor <span class=\"title\">visitField</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">      <span class=\"keyword\">int</span> access, String name, String desc, String signature, Object value)</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot; &quot;</span> + desc + <span class=\"string\">&quot; &quot;</span> + name);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> MethodVisitor <span class=\"title\">visitMethod</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">      <span class=\"keyword\">int</span> access, String name, String desc, String signature, String[] exceptions)</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot; &quot;</span> + name + desc);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visitEnd</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;&#125;&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    ClassPrinter cp = <span class=\"keyword\">new</span> ClassPrinter();</span><br><span class=\"line\">    <span class=\"comment\">//    ClassReader cr = new ClassReader(&quot;java.lang.Runnable&quot;);</span></span><br><span class=\"line\">    ClassReader cr =</span><br><span class=\"line\">        <span class=\"keyword\">new</span> ClassReader(</span><br><span class=\"line\">            ClassPrinter.class</span><br><span class=\"line\">                .getClassLoader()</span><br><span class=\"line\">                .getResourceAsStream(<span class=\"string\">&quot;com/ldd/visitor/asm/v1/T1.CLASS&quot;</span>));</span><br><span class=\"line\">    cr.accept(cp, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"T1类\"><a href=\"#T1类\" class=\"headerlink\" title=\"T1类\"></a>T1类</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * View - SHow Bytecode&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * javap命令</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/24</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">T1</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">m</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> j = <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-2-动态生成Class文件\"><a href=\"#No-2-动态生成Class文件\" class=\"headerlink\" title=\"No 2. 动态生成Class文件\"></a>No 2. 动态生成Class文件</h3><h4 id=\"ClassWriteTest\"><a href=\"#ClassWriteTest\" class=\"headerlink\" title=\"ClassWriteTest\"></a>ClassWriteTest</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.objectweb.asm.ClassWriter;</span><br><span class=\"line\"></span><br><span class=\"line\">import static org.objectweb.asm.Opcodes.*;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * ASM中的访问者模式Demo2：动态生成字节码&lt;br&gt;</span><br><span class=\"line\"> * REF：https://asm.ow2.io/asm4-guide.pdf 《2.2.3. Generating classes》</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @author Miibo</span><br><span class=\"line\"> * @version 1.0</span><br><span class=\"line\"> * @date 2021/4/24</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class ClassWriteTest &#123;</span><br><span class=\"line\">  public static void main(String[] args) &#123;</span><br><span class=\"line\">    ClassWriter cw = new ClassWriter(0);</span><br><span class=\"line\">    // public interface Comparable</span><br><span class=\"line\">    cw.visit(</span><br><span class=\"line\">        V1_5,</span><br><span class=\"line\">        ACC_PUBLIC + ACC_ABSTRACT + ACC_INTERFACE,</span><br><span class=\"line\">        &quot;pkg/Comparable&quot;,</span><br><span class=\"line\">        null,</span><br><span class=\"line\">        &quot;java/lang/Object&quot;,</span><br><span class=\"line\">        null);</span><br><span class=\"line\">    // int LESS = -1;</span><br><span class=\"line\">    cw.visitField(ACC_PUBLIC + ACC_FINAL + ACC_STATIC, &quot;LESS&quot;, &quot;I&quot;, null, -1).visitEnd();</span><br><span class=\"line\">    // int EQUAL = 0;</span><br><span class=\"line\">    cw.visitField(ACC_PUBLIC + ACC_FINAL + ACC_STATIC, &quot;EQUAL&quot;, &quot;I&quot;, null, 0).visitEnd();</span><br><span class=\"line\">    // int GREATER = 1;</span><br><span class=\"line\">    cw.visitField(ACC_PUBLIC + ACC_FINAL + ACC_STATIC, &quot;GREATER&quot;, &quot;I&quot;, null, 1).visitEnd();</span><br><span class=\"line\">    // int compareTo(Object o);</span><br><span class=\"line\">    cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, &quot;compareTo&quot;, &quot;(Ljava/lang/Object;)I&quot;, null, null)</span><br><span class=\"line\">        .visitEnd();</span><br><span class=\"line\">    cw.visitEnd();</span><br><span class=\"line\">    byte[] b = cw.toByteArray();</span><br><span class=\"line\"></span><br><span class=\"line\">    // 验证类：从字节码加载类，并打印类的第一个方法名</span><br><span class=\"line\">    MyClassLoader myClassLoader = new MyClassLoader();</span><br><span class=\"line\">    Class c = myClassLoader.defineClass(&quot;pkg.Comparable&quot;, b);</span><br><span class=\"line\">    System.out.println(c.getMethods()[0].getName());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"MyClassLoader\"><a href=\"#MyClassLoader\" class=\"headerlink\" title=\"MyClassLoader\"></a>MyClassLoader</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 自定义类加载器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/24</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClassLoader</span> <span class=\"keyword\">extends</span> <span class=\"title\">ClassLoader</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 从字节数组中加载类</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/24 21:48</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> name 类名</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> b 字节数组（class文件内容）</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 类</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> Class <span class=\"title\">defineClass</span><span class=\"params\">(String name, <span class=\"keyword\">byte</span>[] b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> defineClass(name, b, <span class=\"number\">0</span>, b.length);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-3-动态代理（访问者-责任链）\"><a href=\"#No-3-动态代理（访问者-责任链）\" class=\"headerlink\" title=\"No 3. 动态代理（访问者+责任链）\"></a>No 3. 动态代理（访问者+责任链）</h3><h4 id=\"ClassTransformerTest\"><a href=\"#ClassTransformerTest\" class=\"headerlink\" title=\"ClassTransformerTest\"></a>ClassTransformerTest</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import com.ldd.visitor.asm.v1.ClassPrinter;</span><br><span class=\"line\">import org.objectweb.asm.ClassReader;</span><br><span class=\"line\">import org.objectweb.asm.ClassVisitor;</span><br><span class=\"line\">import org.objectweb.asm.ClassWriter;</span><br><span class=\"line\">import org.objectweb.asm.MethodVisitor;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.io.File;</span><br><span class=\"line\">import java.io.FileOutputStream;</span><br><span class=\"line\"></span><br><span class=\"line\">import static org.objectweb.asm.Opcodes.ASM4;</span><br><span class=\"line\">import static org.objectweb.asm.Opcodes.INVOKESTATIC;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * ASM中的访问者模式Demo3：用asm生成动态代理（三厨狂喜：动态代理 + 访问者 + 责任链）&lt;br&gt;</span><br><span class=\"line\"> * REF：https://asm.ow2.io/asm4-guide.pdf 《2.2.4. Transforming classes》</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @author Miibo</span><br><span class=\"line\"> * @version 1.0</span><br><span class=\"line\"> * @date 2021/4/24</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class ClassTransformerTest &#123;</span><br><span class=\"line\">  public static void main(String[] args) throws Exception &#123;</span><br><span class=\"line\">    ClassReader cr =</span><br><span class=\"line\">        new ClassReader(</span><br><span class=\"line\">            ClassPrinter.class</span><br><span class=\"line\">                .getClassLoader()</span><br><span class=\"line\">                .getResourceAsStream(&quot;com/ldd/visitor/asm/v3/Tank.class&quot;));</span><br><span class=\"line\"></span><br><span class=\"line\">    ClassWriter cw = new ClassWriter(0);</span><br><span class=\"line\">    ClassVisitor cv =</span><br><span class=\"line\">        new ClassVisitor(ASM4, cw) &#123;</span><br><span class=\"line\">          @Override</span><br><span class=\"line\">          public MethodVisitor visitMethod(</span><br><span class=\"line\">              int access, String name, String descriptor, String signature, String[] exceptions) &#123;</span><br><span class=\"line\">            MethodVisitor mv = super.visitMethod(access, name, descriptor, signature, exceptions);</span><br><span class=\"line\">            // return mv</span><br><span class=\"line\">            return new MethodVisitor(ASM4, mv) &#123;</span><br><span class=\"line\">              @Override</span><br><span class=\"line\">              public void visitCode() &#123;</span><br><span class=\"line\">                visitMethodInsn(INVOKESTATIC, &quot;TimeProxy&quot;, &quot;before&quot;, &quot;()V&quot;, false);</span><br><span class=\"line\">                super.visitCode();</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    //    cr.accept(cw, 0); // 将源Tank类的class字节码读出</span><br><span class=\"line\">    cr.accept(cv, 0); // 此处双厨狂喜，add责任链模式：cr -&gt; cv -&gt; cw</span><br><span class=\"line\">    byte[] b2 = cw.toByteArray();</span><br><span class=\"line\"></span><br><span class=\"line\">    String path = (String) System.getProperties().get(&quot;user.dir&quot;);</span><br><span class=\"line\">    File f = new File(path + &quot;/com/ldd/visitor/asm/v3/&quot;);</span><br><span class=\"line\">    f.mkdirs();</span><br><span class=\"line\"></span><br><span class=\"line\">    FileOutputStream fos =</span><br><span class=\"line\">        new FileOutputStream(new File(path + &quot;/com/ldd/visitor/asm/v3/Tank_0.class&quot;));</span><br><span class=\"line\">    fos.write(b2);</span><br><span class=\"line\">    fos.flush();</span><br><span class=\"line\">    fos.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Tank\"><a href=\"#Tank\" class=\"headerlink\" title=\"Tank\"></a>Tank</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 被代理类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/24</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Tank</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Tank moving kalakala...&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"TimeProxy\"><a href=\"#TimeProxy\" class=\"headerlink\" title=\"TimeProxy\"></a>TimeProxy</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 代理类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/24</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TimeProxy</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">before</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;before ...&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["设计模式"],"tags":["设计模式","asm","访问者"]},{"title":"【设计模式】Iterator-迭代器","url":"https://chiaralee.gitee.io/2021/04/23/【设计模式】Iterator-迭代器/","content":"<h1 id=\"迭代器模式（Iterator-Pattern）\"><a href=\"#迭代器模式（Iterator-Pattern）\" class=\"headerlink\" title=\"迭代器模式（Iterator Pattern）\"></a>迭代器模式（Iterator Pattern）</h1><blockquote>\n<p>用于容器与容器遍历</p>\n</blockquote>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><h3 id=\"No-1-构建一个容器，可以添加对象（数组实现）\"><a href=\"#No-1-构建一个容器，可以添加对象（数组实现）\" class=\"headerlink\" title=\"No 1. 构建一个容器，可以添加对象（数组实现）\"></a>No 1. 构建一个容器，可以添加对象（数组实现）</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 一阶段：构建一个容器，可以添加对象（数组实现）</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/23</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    MyArrayList list = <span class=\"keyword\">new</span> MyArrayList();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">15</span>; i++) &#123;</span><br><span class=\"line\">      list.add(<span class=\"keyword\">new</span> String(<span class=\"string\">&quot;s&quot;</span> + i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(list.size());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 可动态扩展的数组（空间不足时，翻倍）</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/23</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyArrayList</span> </span>&#123;</span><br><span class=\"line\">  Object[] objects = <span class=\"keyword\">new</span> Object[<span class=\"number\">10</span>];</span><br><span class=\"line\">  <span class=\"comment\">// 目前容器中有多少个元素（objects中下一个空的位置在哪里）</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 添加元素</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/23 20:46</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(Object o)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index == objects.length) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 数组满了，翻倍</span></span><br><span class=\"line\">      Object[] newObjects = <span class=\"keyword\">new</span> Object[objects.length * <span class=\"number\">2</span>];</span><br><span class=\"line\">      System.arraycopy(objects, <span class=\"number\">0</span>, newObjects, <span class=\"number\">0</span>, objects.length);</span><br><span class=\"line\">      objects = newObjects;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    objects[index++] = o;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 容器内元素个数</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/23 20:46</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 元素个数</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> index;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-2-构建一个容器，可以添加对象（链表实现）\"><a href=\"#No-2-构建一个容器，可以添加对象（链表实现）\" class=\"headerlink\" title=\"No 2. 构建一个容器，可以添加对象（链表实现）\"></a>No 2. 构建一个容器，可以添加对象（链表实现）</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 二阶段：构建一个容器，可以添加对象（链表实现）</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/23</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    MyLinkedList list = <span class=\"keyword\">new</span> MyLinkedList();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">15</span>; i++) &#123;</span><br><span class=\"line\">      list.add(<span class=\"keyword\">new</span> String(<span class=\"string\">&quot;s&quot;</span> + i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(list.size());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 链表</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/23</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyLinkedList</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 头节点</span></span><br><span class=\"line\">  Node head = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 尾节点</span></span><br><span class=\"line\">  Node tail = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 目前容器中有多少个元素</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> size = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 添加元素</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/23 20:51</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(Object o)</span> </span>&#123;</span><br><span class=\"line\">    Node n = <span class=\"keyword\">new</span> Node(o);</span><br><span class=\"line\">    n.next = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (head == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">      head = n;</span><br><span class=\"line\">      tail = n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    tail.next = n;</span><br><span class=\"line\">    tail = n;</span><br><span class=\"line\">    size++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 容器内元素个数</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/23 20:51</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 元素个数</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> size;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Node</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Object o;</span><br><span class=\"line\">    Node next;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Node</span><span class=\"params\">(Object o)</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.o = o;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-3-两种容器互相替换（添加共同接口）\"><a href=\"#No-3-两种容器互相替换（添加共同接口）\" class=\"headerlink\" title=\"No 3. 两种容器互相替换（添加共同接口）\"></a>No 3. 两种容器互相替换（添加共同接口）</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 三阶段：添加容器的共同接口，实现两种容器的替换</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/23</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    MyCollection list = <span class=\"keyword\">new</span> MyLinkedList();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">15</span>; i++) &#123;</span><br><span class=\"line\">      list.add(<span class=\"keyword\">new</span> String(<span class=\"string\">&quot;s&quot;</span> + i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(list.size());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 数组</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/23</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyArrayList</span> <span class=\"keyword\">implements</span> <span class=\"title\">MyCollection</span> </span>&#123;</span><br><span class=\"line\">  Object[] objects = <span class=\"keyword\">new</span> Object[<span class=\"number\">10</span>];</span><br><span class=\"line\">  <span class=\"comment\">// 目前容器中有多少个元素（objects中下一个空的位置在哪里）</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(Object o)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index == objects.length) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 数组满了，翻倍</span></span><br><span class=\"line\">      Object[] newObjects = <span class=\"keyword\">new</span> Object[objects.length * <span class=\"number\">2</span>];</span><br><span class=\"line\">      System.arraycopy(objects, <span class=\"number\">0</span>, newObjects, <span class=\"number\">0</span>, objects.length);</span><br><span class=\"line\">      objects = newObjects;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    objects[index++] = o;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> index;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 链表</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/23</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyLinkedList</span> <span class=\"keyword\">implements</span> <span class=\"title\">MyCollection</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 头节点</span></span><br><span class=\"line\">  Node head = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 尾节点</span></span><br><span class=\"line\">  Node tail = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 目前容器中有多少个元素</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> size = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(Object o)</span> </span>&#123;</span><br><span class=\"line\">    Node n = <span class=\"keyword\">new</span> Node(o);</span><br><span class=\"line\">    n.next = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (head == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">      head = n;</span><br><span class=\"line\">      tail = n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    tail.next = n;</span><br><span class=\"line\">    tail = n;</span><br><span class=\"line\">    size++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> size;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Node</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Object o;</span><br><span class=\"line\">    Node next;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Node</span><span class=\"params\">(Object o)</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.o = o;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 容器接口</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/23</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MyCollection</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 添加元素</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/23 21:08</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(Object o)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 容器内元素个数</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/23 21:08</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 元素个数</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-4-实现容器遍历\"><a href=\"#No-4-实现容器遍历\" class=\"headerlink\" title=\"No 4. 实现容器遍历\"></a>No 4. 实现容器遍历</h3><blockquote>\n<p>因容器自己才知道遍历逻辑，所以定义Iterator接口即可</p>\n</blockquote>\n<p><img src=\"迭代器.png\" alt=\"迭代器\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 四阶段：遍历容器</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;通过定义MyIterator，由容器自己实现遍历逻辑</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/23</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    MyCollection list = <span class=\"keyword\">new</span> MyLinkedList();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">15</span>; i++) &#123;</span><br><span class=\"line\">      list.add(<span class=\"keyword\">new</span> String(<span class=\"string\">&quot;s&quot;</span> + i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(list.size());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 遍历</span></span><br><span class=\"line\">    MyIterator it = list.iterator();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (it.hasNext()) &#123;</span><br><span class=\"line\">      System.out.println(it.next());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 链表</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/23</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyLinkedList</span> <span class=\"keyword\">implements</span> <span class=\"title\">MyCollection</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 头节点</span></span><br><span class=\"line\">  Node head = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 尾节点</span></span><br><span class=\"line\">  Node tail = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 目前容器中有多少个元素</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> size = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(Object o)</span> </span>&#123;</span><br><span class=\"line\">    Node n = <span class=\"keyword\">new</span> Node(o);</span><br><span class=\"line\">    n.next = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (head == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">      head = n;</span><br><span class=\"line\">      tail = n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    tail.next = n;</span><br><span class=\"line\">    tail = n;</span><br><span class=\"line\">    size++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> size;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Node</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Object o;</span><br><span class=\"line\">    Node next;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Node</span><span class=\"params\">(Object o)</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.o = o;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> MyIterator <span class=\"title\">iterator</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyIterator() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">private</span> Node next;</span><br><span class=\"line\">      <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> nextIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> nextIndex &lt; size;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">next</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == nextIndex) &#123;</span><br><span class=\"line\">          next = head;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          next = next.next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        nextIndex++;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> next.o;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 数组</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/23</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyArrayList</span> <span class=\"keyword\">implements</span> <span class=\"title\">MyCollection</span> </span>&#123;</span><br><span class=\"line\">  Object[] objects = <span class=\"keyword\">new</span> Object[<span class=\"number\">10</span>];</span><br><span class=\"line\">  <span class=\"comment\">// 目前容器中有多少个元素（objects中下一个空的位置在哪里）</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(Object o)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index == objects.length) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 数组满了，翻倍</span></span><br><span class=\"line\">      Object[] newObjects = <span class=\"keyword\">new</span> Object[objects.length * <span class=\"number\">2</span>];</span><br><span class=\"line\">      System.arraycopy(objects, <span class=\"number\">0</span>, newObjects, <span class=\"number\">0</span>, objects.length);</span><br><span class=\"line\">      objects = newObjects;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    objects[index++] = o;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> index;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> MyIterator <span class=\"title\">iterator</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyIterator() &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 当前循环到第几个元素</span></span><br><span class=\"line\">      <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> currentIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> currentIndex &lt; index;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">next</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Object o = objects[currentIndex];</span><br><span class=\"line\">        currentIndex++;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> o;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 容器接口</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/23</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MyCollection</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 添加元素</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/23 21:08</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(Object o)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 容器内元素个数</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/23 21:08</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 元素个数</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 容器的迭代器</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/23 21:31</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 迭代器</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\">MyIterator <span class=\"title\">iterator</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 迭代器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/23</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MyIterator</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 是否存在下一个元素</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/23 21:27</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> true：存在下一个元素</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 下一个元素</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/23 21:27</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\">Object <span class=\"title\">next</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据结构的物理结构\"><a href=\"#数据结构的物理结构\" class=\"headerlink\" title=\"数据结构的物理结构\"></a>数据结构的物理结构</h2><p>有且仅有两种：数组（ArrayList）、链表（LinkedList）</p>\n<p><img src=\"数据结构唯二的两种物理结构.png\" alt=\"数据结构唯二的两种物理结构\"></p>\n","categories":["设计模式"],"tags":["设计模式","迭代器"]},{"title":"AnyQ初探","url":"https://chiaralee.gitee.io/2021/04/23/AnyQ初探/","content":"<h1 id=\"AnyQ初探\"><a href=\"#AnyQ初探\" class=\"headerlink\" title=\"AnyQ初探\"></a>AnyQ初探</h1><blockquote>\n<p>ref：<a class=\"link\"   href=\"https://github.com/baidu/AnyQ\" >https://github.com/baidu/AnyQ<i class=\"fas fa-external-link-alt\"></i></a></p>\n</blockquote>\n<h2 id=\"搭建AnyQ\"><a href=\"#搭建AnyQ\" class=\"headerlink\" title=\"搭建AnyQ\"></a>搭建AnyQ</h2><ol>\n<li><p>宿主机上新建挂载目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /opt/AnyQ</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以下步骤需在创建的目录下进行</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /opt/AnyQ</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>从Git拷贝项目至目录中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/baidu/AnyQ.git</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>拉取镜像，并启动容器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># paddle官方镜像</span></span><br><span class=\"line\">docker pull paddlepaddle/paddle:latest-dev</span><br><span class=\"line\"><span class=\"comment\"># paddle国内镜像</span></span><br><span class=\"line\"><span class=\"comment\"># docker pull hub.baidubce.com/paddlepaddle/paddle:latest-dev</span></span><br><span class=\"line\"> </span><br><span class=\"line\">docker run --name AnyQ -dit -p 8999:8999 -v <span class=\"variable\">$PWD</span>:/paddle paddlepaddle/paddle:latest-dev /bin/bash</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>进入容器内部，编译服务</p>\n<ol>\n<li><p>进入容器内部</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it AnyQ /bin/bash</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编译服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /paddle/AnyQ</span><br><span class=\"line\">mkdir build &amp;&amp; <span class=\"built_in\">cd</span> build</span><br><span class=\"line\">cmake ..</span><br><span class=\"line\">make -j 4 </span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h2><p>报错信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Makefile:105: recipe for target &#x27;all&#x27; failed</span><br><span class=\"line\">make[3]: *** [all] Error 2</span><br><span class=\"line\">CMakeFiles/extern_paddle.dir/build.make:112: recipe for target &#x27;third_party/paddle/src/extern_paddle-stamp/extern_paddle-build&#x27; failed</span><br><span class=\"line\">make[2]: *** [third_party/paddle/src/extern_paddle-stamp/extern_paddle-build] Error 2</span><br><span class=\"line\">CMakeFiles/Makefile2:441: recipe for target &#x27;CMakeFiles/extern_paddle.dir/all&#x27; failed</span><br><span class=\"line\">make[1]: *** [CMakeFiles/extern_paddle.dir/all] Error 2</span><br><span class=\"line\">Makefile:83: recipe for target &#x27;all&#x27; failed</span><br><span class=\"line\">make: *** [all] Error 2</span><br></pre></td></tr></table></figure>\n<p>解决方案：</p>\n<blockquote>\n<p><a class=\"link\"   href=\"https://stackoverflow.com/questions/15809060/sh-syntax-error-bad-fd-number\" >https://stackoverflow.com/questions/15809060/sh-syntax-error-bad-fd-number<i class=\"fas fa-external-link-alt\"></i></a></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv /bin/sh /bin/sh.orig</span><br><span class=\"line\">ln -s /bin/bash /bin/sh</span><br></pre></td></tr></table></figure>\n<h2 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h2><p><a class=\"link\"   href=\"https://blog.csdn.net/weixin_37792714/article/details/103984292\" >https://blog.csdn.net/weixin_37792714/article/details/103984292<i class=\"fas fa-external-link-alt\"></i></a></p>\n","categories":["开新地图"],"tags":["AnyQ","咕咕咕"]},{"title":"【设计模式】Proxy-代理","url":"https://chiaralee.gitee.io/2021/04/15/【设计模式】Proxy-代理/","content":"<h1 id=\"代理模式（Proxy-Pattern）\"><a href=\"#代理模式（Proxy-Pattern）\" class=\"headerlink\" title=\"代理模式（Proxy Pattern）\"></a>代理模式（Proxy Pattern）</h1><h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><p>以Tank类运行时间函数为例，需求：记录Tank的运行时间</p>\n<h3 id=\"No-1-新增Tank2类，继承原Tank类，记录运行时间\"><a href=\"#No-1-新增Tank2类，继承原Tank类，记录运行时间\" class=\"headerlink\" title=\"No 1. 新增Tank2类，继承原Tank类，记录运行时间\"></a>No 1. 新增Tank2类，继承原Tank类，记录运行时间</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 一阶段：新增Tank2类，继承原Tank类，记录运行时间&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;耦合度较高</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;不便于扩展</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">new</span> Tank2().move();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Tank原型</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Tank</span> <span class=\"keyword\">implements</span> <span class=\"title\">Movable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Tank moving kalakala...&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 随机运行一段时间</span></span><br><span class=\"line\">      TimeUnit.MILLISECONDS.sleep(<span class=\"keyword\">new</span> Random().nextInt(<span class=\"number\">10000</span>));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 继承原Tank类，move方法中实现计时</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Tank2</span> <span class=\"keyword\">extends</span> <span class=\"title\">Tank</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> start = System.currentTimeMillis();</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.move();</span><br><span class=\"line\">    System.out.println(System.currentTimeMillis() - start);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 可移动设备接口</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Movable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 坦克运行</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/15 19:28</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-2-用实现接口代替继承\"><a href=\"#No-2-用实现接口代替继承\" class=\"headerlink\" title=\"No 2. 用实现接口代替继承\"></a>No 2. 用实现接口代替继承</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 二阶段：实现多种代理</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">new</span> TankLogProxy(<span class=\"keyword\">new</span> Tank()).move();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Tank运行时间的代理</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TankTimeProxy</span> <span class=\"keyword\">implements</span> <span class=\"title\">Movable</span> </span>&#123;</span><br><span class=\"line\">  Tank tank;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TankTimeProxy</span><span class=\"params\">(Tank tank)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.tank = tank;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> start = System.currentTimeMillis();</span><br><span class=\"line\">    tank.move();</span><br><span class=\"line\">    System.out.println(System.currentTimeMillis() - start);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Tank运行日志的代理</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TankLogProxy</span> <span class=\"keyword\">implements</span> <span class=\"title\">Movable</span> </span>&#123;</span><br><span class=\"line\">  Tank tank;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TankLogProxy</span><span class=\"params\">(Tank tank)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.tank = tank;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Start Moving...&quot;</span>);</span><br><span class=\"line\">    tank.move();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Stopped！&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Tank原型</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Tank</span> <span class=\"keyword\">implements</span> <span class=\"title\">Movable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Tank moving kalakala...&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 随机运行一段时间</span></span><br><span class=\"line\">      TimeUnit.MILLISECONDS.sleep(<span class=\"keyword\">new</span> Random().nextInt(<span class=\"number\">10000</span>));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 可移动设备接口</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Movable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 坦克运行</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/15 19:28</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-3-多种代理的任意组合（静态代理）\"><a href=\"#No-3-多种代理的任意组合（静态代理）\" class=\"headerlink\" title=\"No 3. 多种代理的任意组合（静态代理）\"></a>No 3. 多种代理的任意组合（静态代理）</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 三阶段：实现多种代理的任意组合，互相嵌套（静态代理）</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;共同实现了Movable接口</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;能代理的类型也是Movable</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">new</span> TankLogProxy(<span class=\"keyword\">new</span> TankTimeProxy(<span class=\"keyword\">new</span> Tank())).move();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Tank运行时间的代理</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TankTimeProxy</span> <span class=\"keyword\">implements</span> <span class=\"title\">Movable</span> </span>&#123;</span><br><span class=\"line\">  Movable m;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TankTimeProxy</span><span class=\"params\">(Movable m)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.m = m;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> start = System.currentTimeMillis();</span><br><span class=\"line\">    m.move();</span><br><span class=\"line\">    System.out.println(System.currentTimeMillis() - start);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Tank运行日志的代理</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TankLogProxy</span> <span class=\"keyword\">implements</span> <span class=\"title\">Movable</span> </span>&#123;</span><br><span class=\"line\">  Movable m;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TankLogProxy</span><span class=\"params\">(Movable m)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.m = m;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Start Moving...&quot;</span>);</span><br><span class=\"line\">    m.move();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Stopped！&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Tank原型</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Tank</span> <span class=\"keyword\">implements</span> <span class=\"title\">Movable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Tank moving kalakala...&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 随机运行一段时间</span></span><br><span class=\"line\">      TimeUnit.MILLISECONDS.sleep(<span class=\"keyword\">new</span> Random().nextInt(<span class=\"number\">10000</span>));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 可移动设备接口</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Movable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 坦克运行</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/15 19:28</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-4-让代理可被不同类重用（jdk动态代理）\"><a href=\"#No-4-让代理可被不同类重用（jdk动态代理）\" class=\"headerlink\" title=\"No 4. 让代理可被不同类重用（jdk动态代理）\"></a>No 4. 让代理可被不同类重用（jdk动态代理）</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.InvocationHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Proxy;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 四阶段：想让LogProxy可以重用，不仅可以代理Tank，还可以代理任意类型Object&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;分离代理行为与被代理对象</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;使用jdk的动态代理</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Tank tank = <span class=\"keyword\">new</span> Tank();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 反射：通过二进制字节码分析类的属性和方法</span></span><br><span class=\"line\">    Movable m =</span><br><span class=\"line\">        (Movable)</span><br><span class=\"line\">            Proxy.newProxyInstance(</span><br><span class=\"line\">                <span class=\"comment\">// 需要用哪个ClassLoader将代理Load到内存，一般是被代理类的类加载器</span></span><br><span class=\"line\">                Tank.class.getClassLoader(),</span><br><span class=\"line\">                <span class=\"comment\">// 代理对象应该实现的接口，还可使用Tank.class.getInterfaces()</span></span><br><span class=\"line\">                <span class=\"keyword\">new</span> Class[] &#123;Movable.class&#125;,</span><br><span class=\"line\">                <span class=\"comment\">// 被代理对象方法被调用时，代理处理的逻辑</span></span><br><span class=\"line\">                <span class=\"keyword\">new</span> InvocationHandler() &#123;</span><br><span class=\"line\">                  <span class=\"meta\">@Override</span></span><br><span class=\"line\">                  <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">invoke</span><span class=\"params\">(Object proxy, Method method, Object[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">                      <span class=\"keyword\">throws</span> Throwable </span>&#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;method &quot;</span> + method.getName() + <span class=\"string\">&quot; start...&quot;</span>);</span><br><span class=\"line\">                    Object o = method.invoke(tank, args);</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;method &quot;</span> + method.getName() + <span class=\"string\">&quot; end.&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> o;</span><br><span class=\"line\">                  &#125;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    m.move();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Tank原型</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Tank</span> <span class=\"keyword\">implements</span> <span class=\"title\">Movable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Tank moving kalakala...&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 随机运行一段时间</span></span><br><span class=\"line\">      TimeUnit.MILLISECONDS.sleep(<span class=\"keyword\">new</span> Random().nextInt(<span class=\"number\">10000</span>));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 可移动设备接口</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Movable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 坦克运行</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/15 19:28</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-5-保留jdk动态代理产生的文件\"><a href=\"#No-5-保留jdk动态代理产生的文件\" class=\"headerlink\" title=\"No 5. 保留jdk动态代理产生的文件\"></a>No 5. 保留jdk动态代理产生的文件</h3><ul>\n<li>底层通过asm实现</li>\n<li>生成动态代理必须面向接口（由Proxy的内部实现决定）</li>\n</ul>\n<p><img src=\"JDK动态代理执行过程.png\" alt=\"JDK动态代理执行过程\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.InvocationHandler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Proxy;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 开启saveGeneratedFiles，将动态代理产生的File存储下来</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;底层用的是asm</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;jdk反射生成动态代理必须面向接口，这是由Proxy的内部实现决定的</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Tank tank = <span class=\"keyword\">new</span> Tank();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 代理产生的File存储下来</span></span><br><span class=\"line\">    System.getProperties()</span><br><span class=\"line\">        .put(<span class=\"string\">&quot;jdk.proxy.ProxyGenerator.saveGeneratedFiles&quot;</span>, <span class=\"string\">&quot;true&quot;</span>); <span class=\"comment\">// jdk11.0.11 可用</span></span><br><span class=\"line\">    <span class=\"comment\">//    System.getProperties()</span></span><br><span class=\"line\">    <span class=\"comment\">//        .put(</span></span><br><span class=\"line\">    <span class=\"comment\">//            &quot;sun.misc.ProxyGenerator.saveGeneratedFiles&quot;,</span></span><br><span class=\"line\">    <span class=\"comment\">//            &quot;true&quot;); // jdk1.8.0_281 检索ProxyGenerator类可得准确的位置</span></span><br><span class=\"line\"></span><br><span class=\"line\">    Movable m =</span><br><span class=\"line\">        (Movable)</span><br><span class=\"line\">            Proxy.newProxyInstance(</span><br><span class=\"line\">                Tank.class.getClassLoader(), Tank.class.getInterfaces(), <span class=\"keyword\">new</span> TimeProxy(tank));</span><br><span class=\"line\"></span><br><span class=\"line\">    m.move();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 代理</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TimeProxy</span> <span class=\"keyword\">implements</span> <span class=\"title\">InvocationHandler</span> </span>&#123;</span><br><span class=\"line\">  Movable m;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TimeProxy</span><span class=\"params\">(Movable m)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.m = m;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">invoke</span><span class=\"params\">(Object proxy, Method method, Object[] args)</span> <span class=\"keyword\">throws</span> Throwable </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;method &quot;</span> + method.getName() + <span class=\"string\">&quot; start...&quot;</span>);</span><br><span class=\"line\">    Object o = method.invoke(m, args);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;method &quot;</span> + method.getName() + <span class=\"string\">&quot; end.&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> o;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Tank原型</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Tank</span> <span class=\"keyword\">implements</span> <span class=\"title\">Movable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Tank moving kalakala...&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 随机运行一段时间</span></span><br><span class=\"line\">      TimeUnit.MILLISECONDS.sleep(<span class=\"keyword\">new</span> Random().nextInt(<span class=\"number\">10000</span>));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 可移动设备接口</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Movable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 坦克运行</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/15 19:28</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-6-Tank类无需实现接口（cglib）\"><a href=\"#No-6-Tank类无需实现接口（cglib）\" class=\"headerlink\" title=\"No 6. Tank类无需实现接口（cglib）\"></a>No 6. Tank类无需实现接口（cglib）</h3><ul>\n<li>底层通过asm实现</li>\n<li>无法代理final类（由于需要生成被代理类的子类）</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> net.sf.cglib.proxy.Enhancer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> net.sf.cglib.proxy.MethodInterceptor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> net.sf.cglib.proxy.MethodProxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * CGLIB实现动态代理不需要接口</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;底层用的是asm</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;无法代理final类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/21</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Enhancer enhancer = <span class=\"keyword\">new</span> Enhancer();</span><br><span class=\"line\">    enhancer.setSuperclass(Tank.class); <span class=\"comment\">// 生成Tank类的子类</span></span><br><span class=\"line\">    enhancer.setCallback(<span class=\"keyword\">new</span> TimeMethodInterceptor()); <span class=\"comment\">// 相当于jdk动态代理的InvocationHandler</span></span><br><span class=\"line\">    Tank tank = (Tank) enhancer.create(); <span class=\"comment\">// 生成动态代理对象</span></span><br><span class=\"line\">    tank.move();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 代理</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/21</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TimeMethodInterceptor</span> <span class=\"keyword\">implements</span> <span class=\"title\">MethodInterceptor</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">intercept</span><span class=\"params\">(Object o, Method method, Object[] objects, MethodProxy methodProxy)</span></span></span><br><span class=\"line\"><span class=\"function\">      <span class=\"keyword\">throws</span> Throwable </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//    System.out.println(o.getClass().getSuperclass().getName()); // com.ldd.proxy.cglib.Tank</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;method &quot;</span> + method.getName() + <span class=\"string\">&quot; start...&quot;</span>);</span><br><span class=\"line\">    Object result = methodProxy.invokeSuper(o, objects);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;method &quot;</span> + method.getName() + <span class=\"string\">&quot; end.&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Tank原型</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Tank</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Tank moving kalakala...&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 随机运行一段时间</span></span><br><span class=\"line\">      TimeUnit.MILLISECONDS.sleep(<span class=\"keyword\">new</span> Random().nextInt(<span class=\"number\">10000</span>));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>引入cglib依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/cglib/cglib --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>cglib<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>cglib<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.3.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","categories":["设计模式"],"tags":["设计模式","代理","cglib","asm"]},{"title":"【设计模式】Flyweight-享元","url":"https://chiaralee.gitee.io/2021/04/15/【设计模式】Flyweight-享元/","content":"<h1 id=\"享元模式（Flyweight-Pattern）\"><a href=\"#享元模式（Flyweight-Pattern）\" class=\"headerlink\" title=\"享元模式（Flyweight Pattern）\"></a>享元模式（Flyweight Pattern）</h1><blockquote>\n<p>共享元数据，重复利用对象。即，池化思想</p>\n</blockquote>\n<h2 id=\"✏️附：String利用了享元模式\"><a href=\"#✏️附：String利用了享元模式\" class=\"headerlink\" title=\"✏️附：String利用了享元模式\"></a>✏️附：String利用了享元模式</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * String用的就是享元模式</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestString</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    String s1 = <span class=\"string\">&quot;abc&quot;</span>;</span><br><span class=\"line\">    String s2 = <span class=\"string\">&quot;abc&quot;</span>;</span><br><span class=\"line\">    String s3 = <span class=\"keyword\">new</span> String(<span class=\"string\">&quot;abc&quot;</span>);</span><br><span class=\"line\">    String s4 = <span class=\"keyword\">new</span> String(<span class=\"string\">&quot;abc&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(s1 == s2); <span class=\"comment\">// true</span></span><br><span class=\"line\">    System.out.println(s1 == s3); <span class=\"comment\">// false</span></span><br><span class=\"line\">    System.out.println(s3 == s4); <span class=\"comment\">// false</span></span><br><span class=\"line\">    System.out.println(s3.intern() == s1); <span class=\"comment\">// true</span></span><br><span class=\"line\">    System.out.println(s3.intern() == s4.intern()); <span class=\"comment\">// true</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["设计模式"],"tags":["设计模式","享元"]},{"title":"【设计模式】Composite-组合","url":"https://chiaralee.gitee.io/2021/04/15/【设计模式】Composite-组合/","content":"<h1 id=\"组合模式（Composite-Pattern）\"><a href=\"#组合模式（Composite-Pattern）\" class=\"headerlink\" title=\"组合模式（Composite Pattern）\"></a>组合模式（Composite Pattern）</h1><blockquote>\n<p>树状结构专用模式</p>\n</blockquote>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><p>以目录结构为例，打印目录</p>\n<p><img src=\"组合.png\" alt=\"组合\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.google.common.collect.Lists;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 组合模式</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    BranchNode root = <span class=\"keyword\">new</span> BranchNode(<span class=\"string\">&quot;root&quot;</span>);</span><br><span class=\"line\">    BranchNode chapter1 = <span class=\"keyword\">new</span> BranchNode(<span class=\"string\">&quot;chapter1&quot;</span>);</span><br><span class=\"line\">    BranchNode chapter2 = <span class=\"keyword\">new</span> BranchNode(<span class=\"string\">&quot;chapter2&quot;</span>);</span><br><span class=\"line\">    root.add(chapter1).add(chapter2);</span><br><span class=\"line\">    LeafNode c11 = <span class=\"keyword\">new</span> LeafNode(<span class=\"string\">&quot;c11&quot;</span>);</span><br><span class=\"line\">    LeafNode c12 = <span class=\"keyword\">new</span> LeafNode(<span class=\"string\">&quot;c12&quot;</span>);</span><br><span class=\"line\">    chapter1.add(c11).add(c12);</span><br><span class=\"line\">    BranchNode section21 = <span class=\"keyword\">new</span> BranchNode(<span class=\"string\">&quot;section21&quot;</span>);</span><br><span class=\"line\">    chapter2.add(section21);</span><br><span class=\"line\">    LeafNode c211 = <span class=\"keyword\">new</span> LeafNode(<span class=\"string\">&quot;c211&quot;</span>);</span><br><span class=\"line\">    LeafNode c212 = <span class=\"keyword\">new</span> LeafNode(<span class=\"string\">&quot;c212&quot;</span>);</span><br><span class=\"line\">    section21.add(c211).add(c212);</span><br><span class=\"line\"></span><br><span class=\"line\">    printTree(root, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 树状结构打印</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/15 14:33</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> node 当前节点</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> depth 当前层级</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">printTree</span><span class=\"params\">(Node node, <span class=\"keyword\">int</span> depth)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; depth; i++) &#123;</span><br><span class=\"line\">      System.out.print(<span class=\"string\">&quot;--&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    node.print();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (node <span class=\"keyword\">instanceof</span> BranchNode) &#123;</span><br><span class=\"line\">      ((BranchNode) node).list.forEach(n -&gt; printTree(n, depth + <span class=\"number\">1</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 节点抽象类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Node</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 打印节点名</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/15 14:23</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 叶子节点</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LeafNode</span> <span class=\"keyword\">extends</span> <span class=\"title\">Node</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/** 叶子名 */</span></span><br><span class=\"line\">  String content;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LeafNode</span><span class=\"params\">(String content)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.content = content;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(content);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 非叶子节点</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BranchNode</span> <span class=\"keyword\">extends</span> <span class=\"title\">Node</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/** 分支名 */</span></span><br><span class=\"line\">  String name;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/** 子节点 */</span></span><br><span class=\"line\">  List&lt;Node&gt; list = Lists.newArrayList();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BranchNode</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 添加节点</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/15 14:28</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> node 节点</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> BranchNode <span class=\"title\">add</span><span class=\"params\">(Node node)</span> </span>&#123;</span><br><span class=\"line\">    list.add(node);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["设计模式"],"tags":["设计模式","组合"]},{"title":"【设计模式】Observer-观察者","url":"https://chiaralee.gitee.io/2021/04/14/【设计模式】Observer-观察者/","content":"<h1 id=\"观察者模式（Observer-Pattern）\"><a href=\"#观察者模式（Observer-Pattern）\" class=\"headerlink\" title=\"观察者模式（Observer Pattern）\"></a>观察者模式（Observer Pattern）</h1><blockquote>\n<p>Observer、Listener、Hook、Callback本质上都是观察者模式</p>\n</blockquote>\n<p>在Observer观察者模式中：</p>\n<ul>\n<li>Event是必须要有的，是事件本身</li>\n<li>Source是事件源对象、被观察者</li>\n<li>Listener是事件观察者</li>\n</ul>\n<p>事件源对象拥有很多的观察者，会发出具体的Event，Observer观察到Event的时候，作出具体的反应actionOnEvent。</p>\n<p><img src=\"观察者.png\" alt=\"观察者\"></p>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><p>以婴幼儿哭闹为例。</p>\n<h3 id=\"No-1-面向对象的傻等\"><a href=\"#No-1-面向对象的傻等\" class=\"headerlink\" title=\"No 1. 面向对象的傻等\"></a>No 1. 面向对象的傻等</h3><p>while循环，一直等待婴儿哭的事件发生，效率低下。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 一阶段：面向对象的傻等</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Child child = <span class=\"keyword\">new</span> Child();</span><br><span class=\"line\">    <span class=\"comment\">// 无脑等待孩子醒来</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!child.isCry()) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;Observing&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 婴儿</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Child</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/** 是否哭泣 */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> cry = <span class=\"keyword\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isCry</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cry;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * BB醒了，开始哭</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 16:01</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">wakeUp</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;BB Waked Up! Crying&quot;</span>);</span><br><span class=\"line\">    cry = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-2-新增观察者Dad\"><a href=\"#No-2-新增观察者Dad\" class=\"headerlink\" title=\"No 2. 新增观察者Dad\"></a>No 2. 新增观察者Dad</h3><p>加入了观察者，并且将观察者的方法加入到被观察者中，当被观察者的事件发生时，就会直接调动观察者的动作，省去了一直等待的时间浪费。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 二阶段：新增观察者Dad，并为被观察者Child添加Dad属性&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * 婴儿哭泣时，自动调用宝爸进行喂奶，省去for循环等待</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Child child = <span class=\"keyword\">new</span> Child();</span><br><span class=\"line\">    child.wakeUp();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 婴儿</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Child</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/** 是否哭泣 */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> cry = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** 引入观察者：宝爸 */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> Dad daddy = <span class=\"keyword\">new</span> Dad();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * BB醒了，开始哭</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 16:01</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">wakeUp</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;BB Waked Up! Crying&quot;</span>);</span><br><span class=\"line\">    cry = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 婴儿哭泣，调用观察者方法，喂奶</span></span><br><span class=\"line\">    daddy.feed();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 观察者：宝爸</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dad</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 宝爸奶孩子</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 16:23</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">feed</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Daddy feeding&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-3-添加多个观察者\"><a href=\"#No-3-添加多个观察者\" class=\"headerlink\" title=\"No 3. 添加多个观察者\"></a>No 3. 添加多个观察者</h3><p>多个观察者通过继承 <code>Observer</code> 类，将观察者与婴儿解耦。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.google.common.collect.Lists;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 三阶段：实际业务中往往不止一个观察者&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * 故，在被观察者中引入多个观察者</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Child child = <span class=\"keyword\">new</span> Child();</span><br><span class=\"line\">    child.wakeUp();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 婴儿</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Child</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/** 是否哭泣 */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> cry = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** 引入观察者们 */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> List&lt;Observer&gt; observers = Lists.newArrayList(<span class=\"keyword\">new</span> Dad(), <span class=\"keyword\">new</span> Mum());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * BB醒了，开始哭</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 16:01</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">wakeUp</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;BB Waked Up! Crying&quot;</span>);</span><br><span class=\"line\">    cry = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Observer observer : observers) &#123;</span><br><span class=\"line\">      observer.actionOnWakeUp();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 观察者抽象类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Observer</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 婴儿醒了之后的动作</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 16:30</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">actionOnWakeUp</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 观察者：宝爸</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dad</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observer</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">actionOnWakeUp</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    feed();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 宝爸奶孩子</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 16:23</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">feed</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Daddy feeding&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 观察者：宝妈</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mum</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observer</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">actionOnWakeUp</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    hug();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 宝妈抱宝宝</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 16:37</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">hug</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Mummy hugging&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-4-观察者根据事件详情定制执行\"><a href=\"#No-4-观察者根据事件详情定制执行\" class=\"headerlink\" title=\"No 4. 观察者根据事件详情定制执行\"></a>No 4. 观察者根据事件详情定制执行</h3><p>根据被观察发生的具体事件，让不同的观察者去进行处理。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.google.common.collect.Lists;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 四阶段：观察者需要根据事件详情自主决定是否需要执行&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * 思路：新增WakeUpEvent类，actionOnWakeUp方法传入该类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Child child = <span class=\"keyword\">new</span> Child();</span><br><span class=\"line\">    child.wakeUp();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 婴儿</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Child</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/** 是否哭泣 */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> cry = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** 引入观察者们 */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> List&lt;Observer&gt; observers = Lists.newArrayList(<span class=\"keyword\">new</span> Dad(), <span class=\"keyword\">new</span> Mum());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * BB醒了，开始哭</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 16:01</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">wakeUp</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;BB Waked Up! Crying&quot;</span>);</span><br><span class=\"line\">    cry = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 产生事件</span></span><br><span class=\"line\">    WakeUpEvent event = <span class=\"keyword\">new</span> WakeUpEvent(System.currentTimeMillis(), <span class=\"string\">&quot;bed&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Observer observer : observers) &#123;</span><br><span class=\"line\">      observer.actionOnWakeUp(event);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 事件类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WakeUpEvent</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/** 什么时间哭 */</span></span><br><span class=\"line\">  <span class=\"keyword\">long</span> timestamp;</span><br><span class=\"line\">  <span class=\"comment\">/** 哪里哭 */</span></span><br><span class=\"line\">  String loc;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">WakeUpEvent</span><span class=\"params\">(<span class=\"keyword\">long</span> timestamp, String loc)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.timestamp = timestamp;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.loc = loc;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 观察者抽象类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Observer</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 婴儿醒了之后的动作</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 16:30</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> event 发生的事件</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">actionOnWakeUp</span><span class=\"params\">(WakeUpEvent event)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 观察者：宝爸</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dad</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observer</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">actionOnWakeUp</span><span class=\"params\">(WakeUpEvent event)</span> </span>&#123;</span><br><span class=\"line\">    feed();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 宝爸奶孩子</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 16:23</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">feed</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Daddy feeding&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 观察者：宝妈</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mum</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observer</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">actionOnWakeUp</span><span class=\"params\">(WakeUpEvent event)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (StringUtils.equals(<span class=\"string\">&quot;bed&quot;</span>, event.loc)) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 事件发生在床上时，宝妈抱抱</span></span><br><span class=\"line\">      hug();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 宝妈抱宝宝</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 16:37</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">hug</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Mummy hugging&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-5-根据事件源定制处理\"><a href=\"#No-5-根据事件源定制处理\" class=\"headerlink\" title=\"No 5. 根据事件源定制处理\"></a>No 5. 根据事件源定制处理</h3><p>根据事件源对象，观察者可进行不同的处理。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.google.common.collect.Lists;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 五阶段：处理事件时，大多数情况下，需要事件源对象&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * 思路：事件中封装了源对象，当需要时，可以把源对象get出来</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Child child = <span class=\"keyword\">new</span> Child();</span><br><span class=\"line\">    child.wakeUp();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 婴儿</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Child</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/** 是否哭泣 */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> cry = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"comment\">/** 引入观察者们 */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> List&lt;Observer&gt; observers = Lists.newArrayList(<span class=\"keyword\">new</span> Dad(), <span class=\"keyword\">new</span> Mum());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * BB醒了，开始哭</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 16:01</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">wakeUp</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;BB Waked Up! Crying&quot;</span>);</span><br><span class=\"line\">    cry = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 产生事件</span></span><br><span class=\"line\">    WakeUpEvent event = <span class=\"keyword\">new</span> WakeUpEvent(System.currentTimeMillis(), <span class=\"string\">&quot;bed&quot;</span>, <span class=\"keyword\">this</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Observer observer : observers) &#123;</span><br><span class=\"line\">      observer.actionOnWakeUp(event);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 事件抽象类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Event</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 获取事件的源对象本身</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 19:47</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 源对象</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">abstract</span> T <span class=\"title\">getSource</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 事件类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WakeUpEvent</span> <span class=\"keyword\">extends</span> <span class=\"title\">Event</span>&lt;<span class=\"title\">Child</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/** 什么时间哭 */</span></span><br><span class=\"line\">  <span class=\"keyword\">long</span> timestamp;</span><br><span class=\"line\">  <span class=\"comment\">/** 哪里哭 */</span></span><br><span class=\"line\">  String loc;</span><br><span class=\"line\">  <span class=\"comment\">/** 源对象：婴儿 */</span></span><br><span class=\"line\">  Child child;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\">Child <span class=\"title\">getSource</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> child;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">WakeUpEvent</span><span class=\"params\">(<span class=\"keyword\">long</span> timestamp, String loc, Child child)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.timestamp = timestamp;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.loc = loc;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.child = child;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 观察者抽象类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Observer</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 婴儿醒了之后的动作</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 16:30</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> event 发生的事件</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">actionOnWakeUp</span><span class=\"params\">(WakeUpEvent event)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 观察者：宝爸</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dad</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">actionOnWakeUp</span><span class=\"params\">(WakeUpEvent event)</span> </span>&#123;</span><br><span class=\"line\">    feed();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 宝爸奶孩子</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 16:23</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">feed</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Daddy feeding&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 观察者：宝妈</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mum</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observer</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">actionOnWakeUp</span><span class=\"params\">(WakeUpEvent event)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (StringUtils.equals(<span class=\"string\">&quot;bed&quot;</span>, event.loc)) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 事件发生在床上时，宝妈抱抱</span></span><br><span class=\"line\">      hug();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 宝妈抱宝宝</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 16:37</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">hug</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Mummy hugging&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["设计模式"],"tags":["设计模式","观察者"]},{"title":"【设计模式】Chain of Responsibility-责任链","url":"https://chiaralee.gitee.io/2021/04/13/【设计模式】Chain-of-Responsibility-责任链/","content":"<h1 id=\"责任链模式（Chain-of-Responsibility-Pattern）\"><a href=\"#责任链模式（Chain-of-Responsibility-Pattern）\" class=\"headerlink\" title=\"责任链模式（Chain of Responsibility Pattern）\"></a>责任链模式（Chain of Responsibility Pattern）</h1><h2 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h2><p>​        责任链模式<strong>屏蔽了请求的处理过程</strong>，你发起一个请求到底是谁处理的，这个你不用关心，只要你把请</p>\n<p>求抛给责任链的第一个处理者，最终会返回一个处理结果（当然也可以不做任何处理），作为请求者可以不</p>\n<p>用知道到底是需要谁来处理的，这是责任链模式的核心；同时责任链模式也可以<strong>做为一种补救模式</strong>来使用，</p>\n<p>举个简单例子，如项目开发的时候，需求确认是这样的：一个请求（比如银行客户存款的币种），一个处理</p>\n<p>者（只处理人民币），但是随着业务的发展（改革开放了嘛，还要处理美元、日元等等），处理者的数量和</p>\n<p>类型都有所增加，那这时候就可以在第一个处理者后面建立一个链，也就是责任链来处理请求，你是人民</p>\n<p>币，好，还是第一个业务逻辑来处理，你是美元，好，传递到第二个业务逻辑来处理，日元，欧元…，这</p>\n<p>些都不用在对原有的业务逻辑产生很大改变，通过扩展实现类就可以很好的解决这些需求变更的问题。 </p>\n<h2 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h2><p>调试时不方便，当链条较长、环节较多时，由于责任链类似递归的方式，调试的逻辑比较复杂</p>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><p>以消息过滤为例，通过使 <code>FilterChain implements Filter</code> 实现灵活配置filter，并利用 <code>boolean doFilter(Msg msg)</code> 返回结果实现灵活配置过滤器是否需要继续执行。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.google.common.collect.Lists;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 责任链</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Msg msg = <span class=\"keyword\">new</span> Msg();</span><br><span class=\"line\">    msg.setMsg(<span class=\"string\">&quot;chiaralee.gitee.io， :); &lt;script&gt;，一起996鸭&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 处理msg</span></span><br><span class=\"line\">    FilterChain fc1 = <span class=\"keyword\">new</span> FilterChain();</span><br><span class=\"line\">    fc1.add(<span class=\"keyword\">new</span> HTMLFilter()).add(<span class=\"keyword\">new</span> SensitiveFilter());</span><br><span class=\"line\">    FilterChain fc2 = <span class=\"keyword\">new</span> FilterChain();</span><br><span class=\"line\">    fc2.add(<span class=\"keyword\">new</span> FaceFilter()).add(<span class=\"keyword\">new</span> UrlFilter());</span><br><span class=\"line\">    <span class=\"comment\">// 链条链接（因为FilterChain impl Filter，可以直接add）</span></span><br><span class=\"line\">    fc1.add(fc2);</span><br><span class=\"line\"></span><br><span class=\"line\">    fc1.doFilter(msg);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(msg);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Msg</span> </span>&#123;</span><br><span class=\"line\">  String name;</span><br><span class=\"line\">  String msg;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getMsg</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> msg;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMsg</span><span class=\"params\">(String msg)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.msg = msg;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Msg&#123;&quot;</span> + <span class=\"string\">&quot;msg=&#x27;&quot;</span> + msg + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> + <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 消息的不同过滤器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Filter</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 消息过滤</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 10:42</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 是否继续过滤，true：继续过滤</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">doFilter</span><span class=\"params\">(Msg m)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 处理脚本语言的过滤器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HTMLFilter</span> <span class=\"keyword\">implements</span> <span class=\"title\">Filter</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">doFilter</span><span class=\"params\">(Msg msg)</span> </span>&#123;</span><br><span class=\"line\">    String r = msg.getMsg();</span><br><span class=\"line\">    r = r.replace(<span class=\"string\">&quot;&lt;&quot;</span>, <span class=\"string\">&quot;[&quot;</span>);</span><br><span class=\"line\">    r = r.replace(<span class=\"string\">&quot;&gt;&quot;</span>, <span class=\"string\">&quot;]&quot;</span>);</span><br><span class=\"line\">    msg.setMsg(r);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 处理敏感词的过滤器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SensitiveFilter</span> <span class=\"keyword\">implements</span> <span class=\"title\">Filter</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">doFilter</span><span class=\"params\">(Msg msg)</span> </span>&#123;</span><br><span class=\"line\">    String r = msg.getMsg();</span><br><span class=\"line\">    r = r.replace(<span class=\"string\">&quot;996&quot;</span>, <span class=\"string\">&quot;955&quot;</span>);</span><br><span class=\"line\">    msg.setMsg(r);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 颜文字的过滤器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FaceFilter</span> <span class=\"keyword\">implements</span> <span class=\"title\">Filter</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">doFilter</span><span class=\"params\">(Msg msg)</span> </span>&#123;</span><br><span class=\"line\">    String r = msg.getMsg();</span><br><span class=\"line\">    r = r.replace(<span class=\"string\">&quot;:)&quot;</span>, <span class=\"string\">&quot;^V^&quot;</span>);</span><br><span class=\"line\">    msg.setMsg(r);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * url的过滤器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UrlFilter</span> <span class=\"keyword\">implements</span> <span class=\"title\">Filter</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">doFilter</span><span class=\"params\">(Msg msg)</span> </span>&#123;</span><br><span class=\"line\">    String r = msg.getMsg();</span><br><span class=\"line\">    r = r.replace(<span class=\"string\">&quot;chiaralee.gitee.io&quot;</span>, <span class=\"string\">&quot;https://chiaralee.gitee.io/&quot;</span>);</span><br><span class=\"line\">    msg.setMsg(r);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 过滤链</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FilterChain</span> <span class=\"keyword\">implements</span> <span class=\"title\">Filter</span> </span>&#123;</span><br><span class=\"line\">  List&lt;Filter&gt; filters = Lists.newArrayList();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 过滤链</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 10:45</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> FilterChain <span class=\"title\">add</span><span class=\"params\">(Filter filter)</span> </span>&#123;</span><br><span class=\"line\">    filters.add(filter);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">doFilter</span><span class=\"params\">(Msg msg)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Filter filter : filters) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!filter.doFilter(msg)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"✏️附：JavaEE-Filter-FilterChain\"><a href=\"#✏️附：JavaEE-Filter-FilterChain\" class=\"headerlink\" title=\"✏️附：JavaEE Filter/FilterChain\"></a>✏️附：JavaEE Filter/FilterChain</h3><p>模拟JavaEE中过滤器的实现逻辑，通过在 <code>doFilter</code> 函数中传入FilterChain实现不同对象（请求、应答）的正序、逆序过滤</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.google.common.collect.Lists;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 模拟JavaEE Filter/FilterChain&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * 已知：过滤器F1,F2；请求request；应答response&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * 需求：请求以F1,F2顺序过滤执行，应答以F2,F1顺序过滤执行&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * 即，过滤器同时可过滤请求、应答；且请求、应答过滤器执行顺序相反&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * 思路：doFilter函数中传入FilterChain</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ServletMain</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Request request = <span class=\"keyword\">new</span> Request();</span><br><span class=\"line\">    request.str = <span class=\"string\">&quot;chiaralee.gitee.io， :); &lt;script&gt;，一起996鸭&quot;</span>;</span><br><span class=\"line\">    Response response = <span class=\"keyword\">new</span> Response();</span><br><span class=\"line\">    response.str = <span class=\"string\">&quot;response&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 处理msg</span></span><br><span class=\"line\">    FilterChain fc = <span class=\"keyword\">new</span> FilterChain();</span><br><span class=\"line\">    fc.add(<span class=\"keyword\">new</span> HTMLFilter()).add(<span class=\"keyword\">new</span> SensitiveFilter());</span><br><span class=\"line\"></span><br><span class=\"line\">    fc.doFilter(request, response, fc);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(request);</span><br><span class=\"line\">    System.out.println(response);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Request</span> </span>&#123;</span><br><span class=\"line\">  String str;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Request&#123;&quot;</span> + <span class=\"string\">&quot;str=&#x27;&quot;</span> + str + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> + <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Response</span> </span>&#123;</span><br><span class=\"line\">  String str;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Response&#123;&quot;</span> + <span class=\"string\">&quot;str=&#x27;&quot;</span> + str + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> + <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 消息的不同过滤器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Filter</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 消息过滤</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 10:42</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">doFilter</span><span class=\"params\">(Request request, Response response, FilterChain filterChain)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 处理脚本语言的过滤器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HTMLFilter</span> <span class=\"keyword\">implements</span> <span class=\"title\">Filter</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doFilter</span><span class=\"params\">(Request request, Response response, FilterChain filterChain)</span> </span>&#123;</span><br><span class=\"line\">    request.str = request.str.replace(<span class=\"string\">&quot;&lt;&quot;</span>, <span class=\"string\">&quot;[&quot;</span>);</span><br><span class=\"line\">    request.str = request.str.replace(<span class=\"string\">&quot;&gt;&quot;</span>, <span class=\"string\">&quot;]&quot;</span>);</span><br><span class=\"line\">    filterChain.doFilter(request, response, filterChain);</span><br><span class=\"line\">    response.str += <span class=\"string\">&quot;--HTMLFilter&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 处理敏感词的过滤器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SensitiveFilter</span> <span class=\"keyword\">implements</span> <span class=\"title\">Filter</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doFilter</span><span class=\"params\">(Request request, Response response, FilterChain filterChain)</span> </span>&#123;</span><br><span class=\"line\">    request.str = request.str.replace(<span class=\"string\">&quot;996&quot;</span>, <span class=\"string\">&quot;955&quot;</span>);</span><br><span class=\"line\">    filterChain.doFilter(request, response, filterChain);</span><br><span class=\"line\">    response.str += <span class=\"string\">&quot;--SensitiveFilter&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 过滤链</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/14</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FilterChain</span> <span class=\"keyword\">implements</span> <span class=\"title\">Filter</span> </span>&#123;</span><br><span class=\"line\">  List&lt;Filter&gt; filters = Lists.newArrayList();</span><br><span class=\"line\">  <span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 过滤链</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/14 10:45</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> FilterChain <span class=\"title\">add</span><span class=\"params\">(Filter filter)</span> </span>&#123;</span><br><span class=\"line\">    filters.add(filter);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doFilter</span><span class=\"params\">(Request request, Response response, FilterChain filterChain)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index != filters.size()) &#123;</span><br><span class=\"line\">      filters.get(index++).doFilter(request, response, filterChain);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["设计模式"],"tags":["设计模式","责任链"]},{"title":"【设计模式】Decorator-装饰器","url":"https://chiaralee.gitee.io/2021/04/13/【设计模式】Decorator-装饰器/","content":"<h1 id=\"装饰器模式（Decorator-Pattern）\"><a href=\"#装饰器模式（Decorator-Pattern）\" class=\"headerlink\" title=\"装饰器模式（Decorator Pattern）\"></a>装饰器模式（Decorator Pattern）</h1><h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>装饰器模式又名包装模式（Wrapper Pattern），是 <code>继承关系的一种替代方案</code> 。</p>\n<ul>\n<li>以对客户透明的方式<strong>动态</strong>的给一个对象附加上更多的责任。换言之，客户端并不会觉得对象在装饰前和装饰后有什么不同。</li>\n<li>可以在不是用创造更多子类的情况下，将对象的功能加以拓展。</li>\n</ul>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><p><img src=\"装饰器.png\" alt=\"装饰器\"></p>\n<h3 id=\"构件\"><a href=\"#构件\" class=\"headerlink\" title=\"构件\"></a>构件</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 最核心的对象，也就是最原始的对象</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 业务逻辑</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/13 16:31</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">operation</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 最核心、最原始、最基本的接口或抽象类的实现，需要装饰的东西</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteComponent</span> <span class=\"keyword\">implements</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">operation</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;最核心、最原始、最基本的接口或抽象类的实现，需要装饰的东西&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"装饰器\"><a href=\"#装饰器\" class=\"headerlink\" title=\"装饰器\"></a>装饰器</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 抽象装饰器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Decorator</span> <span class=\"keyword\">implements</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> Component component;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Decorator</span><span class=\"params\">(Component component)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.component = component;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">operation</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    component.operation();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 具体装饰器A</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteDecoratorA</span> <span class=\"keyword\">extends</span> <span class=\"title\">Decorator</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ConcreteDecoratorA</span><span class=\"params\">(Component component)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(component);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">operation</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    methodA();</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.operation();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;ConcreteDecoratorA的operation执行完毕&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 装饰器A的新功能</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/13 19:34</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">methodA</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;我是ConcreteDecoratorA添加的新功能&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 具体装饰器B</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteDecoratorB</span> <span class=\"keyword\">extends</span> <span class=\"title\">Decorator</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ConcreteDecoratorB</span><span class=\"params\">(Component component)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(component);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">operation</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    methodB();</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.operation();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;ConcreteDecoratorB的operation执行完毕&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 装饰器B的新功能</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/13 19:34</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">methodB</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;我是ConcreteDecoratorB添加的新功能&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"主函数\"><a href=\"#主函数\" class=\"headerlink\" title=\"主函数\"></a>主函数</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 装饰器模式</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 当前需要被装饰的东西</span></span><br><span class=\"line\">    Component component = <span class=\"keyword\">new</span> ConcreteComponent();</span><br><span class=\"line\">    <span class=\"comment\">// 可使用装饰器任意组合：同时拥有B/A两种装饰器的功能</span></span><br><span class=\"line\">    ConcreteDecoratorB decorator = <span class=\"keyword\">new</span> ConcreteDecoratorB(<span class=\"keyword\">new</span> ConcreteDecoratorA(component));</span><br><span class=\"line\">    decorator.operation();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["设计模式"],"tags":["设计模式","装饰器"]},{"title":"【设计模式】Facade&Mediator-门面&调停者","url":"https://chiaralee.gitee.io/2021/04/13/【设计模式】Facade-Mediator-门面-调停者/","content":"<blockquote>\n<p>门面模式和调停者模式有相似之处，都是用一个类来协调其他类的关系。</p>\n<p>门面模式是对外协调，调停者模式是对内协调。</p>\n</blockquote>\n<h1 id=\"门面模式（Facade-Pattern）\"><a href=\"#门面模式（Facade-Pattern）\" class=\"headerlink\" title=\"门面模式（Facade Pattern）\"></a>门面模式（Facade Pattern）</h1><p><img src=\"门面.png\" alt=\"门面\"></p>\n<p>当有一堆很复杂的关系时，对外调用会很麻烦。</p>\n<p>这时可以把对外提供的接口封装到一个类里，由这个类统一管理其他类，并对外提供接口。</p>\n<h1 id=\"调停者模式（Mediator-Pattern）\"><a href=\"#调停者模式（Mediator-Pattern）\" class=\"headerlink\" title=\"调停者模式（Mediator Pattern）\"></a>调停者模式（Mediator Pattern）</h1><p><img src=\"调停者.png\" alt=\"调停者\"></p>\n<p>当有一堆很复杂的关系时，想新增一个新的类，又要和其他类交互时会很麻烦。</p>\n<p>这时可以抽出一个部分，让它和其他类打交道。</p>\n<blockquote>\n<p>应用：消息中间件</p>\n</blockquote>\n","categories":["设计模式"],"tags":["设计模式","门面","调停者"]},{"title":"【设计模式】Factory-工厂系列","url":"https://chiaralee.gitee.io/2021/04/12/【设计模式】Factory-工厂系列/","content":"<blockquote>\n<p><strong>任何可以产生对象的方法或类，都可以称之为工厂。</strong></p>\n<p>所以单例也是一种工厂——静态工厂。</p>\n<p>为什么有了new之后还要有工厂？</p>\n<ul>\n<li>是为了灵活控制生产过程</li>\n<li>还可以控制对象访问权限</li>\n<li>给对象添加修饰和日志等</li>\n</ul>\n</blockquote>\n<h1 id=\"简单工厂模式（Simple-Factory-Pattern）\"><a href=\"#简单工厂模式（Simple-Factory-Pattern）\" class=\"headerlink\" title=\"简单工厂模式（Simple Factory Pattern）\"></a>简单工厂模式（Simple Factory Pattern）</h1><h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><p>需求：任意定制交通工具</p>\n<p>思路：创建 <code>SimpleVehicleFactory</code> 用于生产任意交通工具</p>\n<h3 id=\"交通工具类\"><a href=\"#交通工具类\" class=\"headerlink\" title=\"交通工具类\"></a>交通工具类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 交通工具抽象类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AbstractVehicle</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 乘坐交通工具</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/13 13:20</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">go</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 魔法族：交通工具</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Broom</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractVehicle</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">go</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;光轮2000&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 人族：交通工具</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Car</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractVehicle</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">go</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;甲壳虫&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"工厂类\"><a href=\"#工厂类\" class=\"headerlink\" title=\"工厂类\"></a>工厂类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.ldd.factory.vo.Broom;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ldd.factory.vo.Car;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 简单工厂：&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * 当我们new一个交通工具的时候，如果有控制权限的要求，而每个对象的权限是不一样的。&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * 飞机有飞机的权限，汽车有汽车的权限。这时候用简单的面向对象的方式就不合适了。&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * 这时候就要用工厂，让产生对象的过程不用new，交给工厂处理。因为工厂可以灵活的控制生产过程，定制权限、修饰、日志。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SimpleVehicleFactory</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 创建人族交通工具</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/13 13:30</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 车</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> Car <span class=\"title\">createCar</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 前置处理：权限、日志等</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Car();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 创建魔法族交通工具</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/13 13:31</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 扫帚</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> Broom <span class=\"title\">createBroom</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 前置处理：权限、日志等</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Broom();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"主函数\"><a href=\"#主函数\" class=\"headerlink\" title=\"主函数\"></a>主函数</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.ldd.factory.vo.AbstractVehicle;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 简单工厂</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    SimpleVehicleFactory factory = <span class=\"keyword\">new</span> SimpleVehicleFactory();</span><br><span class=\"line\">    <span class=\"comment\">// 通过简单工厂灵活创建实例，而无需关注每个实例的前置处理细节</span></span><br><span class=\"line\">    AbstractVehicle vehicle = factory.createBroom();</span><br><span class=\"line\">    vehicle.go();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"工厂方法模式（Factory-Method-Pattern）\"><a href=\"#工厂方法模式（Factory-Method-Pattern）\" class=\"headerlink\" title=\"工厂方法模式（Factory Method Pattern）\"></a>工厂方法模式（Factory Method Pattern）</h1><h2 id=\"🌰举个栗子🌰-1\"><a href=\"#🌰举个栗子🌰-1\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><p>需求：任意定制生产过程</p>\n<p>思路：创建 <code>XXXFactory</code>，内含 <code>AbstractVehicle create()</code> 方法</p>\n<h3 id=\"工厂类-1\"><a href=\"#工厂类-1\" class=\"headerlink\" title=\"工厂类\"></a>工厂类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.ldd.factory.vo.Car;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 工厂方法&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * 针对每一种产品来做一个工厂。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CarFactory</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 创建交通工具</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/13 13:51</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 汽车</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> Car <span class=\"title\">create</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;生产一辆甲壳虫&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Car();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"主函数-1\"><a href=\"#主函数-1\" class=\"headerlink\" title=\"主函数\"></a>主函数</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.ldd.factory.vo.AbstractVehicle;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 工厂方法</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    AbstractVehicle vehicle = <span class=\"keyword\">new</span> CarFactory().create();</span><br><span class=\"line\">    vehicle.go();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"抽象工厂模式（Abstract-Factory-Pattern）\"><a href=\"#抽象工厂模式（Abstract-Factory-Pattern）\" class=\"headerlink\" title=\"抽象工厂模式（Abstract Factory Pattern）\"></a>抽象工厂模式（Abstract Factory Pattern）</h1><h2 id=\"🌰举个栗子🌰-2\"><a href=\"#🌰举个栗子🌰-2\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><p>需求：任意定制产品一族</p>\n<p>思路：创建抽象工厂类 <code>AbstractFactory</code>，内含一族产品所需抽象方法</p>\n<p><img src=\"抽象工厂.png\" alt=\"抽象工厂\"></p>\n<h3 id=\"食物类\"><a href=\"#食物类\" class=\"headerlink\" title=\"食物类\"></a>食物类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 食物抽象类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AbstractFood</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 打印食物名</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/13 13:22</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">printName</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 魔法族：食物</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mushroom</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractFood</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;见手青&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"工厂类-2\"><a href=\"#工厂类-2\" class=\"headerlink\" title=\"工厂类\"></a>工厂类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.ldd.factory.vo.AbstractFood;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ldd.factory.vo.AbstractVehicle;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 抽象工厂类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AbstractFactory</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 创建交通工具</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/13 13:58</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> com.ldd.factory.vo.AbstractVehicle</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> AbstractVehicle <span class=\"title\">createVehicle</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 创建食物</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/13 13:59</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> com.ldd.factory.vo.AbstractFood</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> AbstractFood <span class=\"title\">createFood</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ldd.factory.vo.AbstractFood;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ldd.factory.vo.AbstractVehicle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ldd.factory.vo.Broom;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ldd.factory.vo.Mushroom;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 魔法族工厂类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MagicFactory</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractFactory</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> AbstractVehicle <span class=\"title\">createVehicle</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Broom();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> AbstractFood <span class=\"title\">createFood</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Mushroom();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"主函数-2\"><a href=\"#主函数-2\" class=\"headerlink\" title=\"主函数\"></a>主函数</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.ldd.factory.vo.AbstractFood;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ldd.factory.vo.AbstractVehicle;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 抽象工厂</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    AbstractFactory factory = <span class=\"keyword\">new</span> MagicFactory();</span><br><span class=\"line\">    AbstractVehicle vehicle = factory.createVehicle();</span><br><span class=\"line\">    vehicle.go();</span><br><span class=\"line\">    AbstractFood food = factory.createFood();</span><br><span class=\"line\">    food.printName();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<!-- TODO Spring IOC-->\n","categories":["设计模式"],"tags":["咕咕咕","设计模式","工厂方法","抽象工厂"]},{"title":"【设计模式】Strategy-策略","url":"https://chiaralee.gitee.io/2021/04/11/【设计模式】Strategy-策略/","content":"<h1 id=\"策略模式（Strategy-Pattern）\"><a href=\"#策略模式（Strategy-Pattern）\" class=\"headerlink\" title=\"策略模式（Strategy Pattern）\"></a>策略模式（Strategy Pattern）</h1><blockquote>\n<p>ref：《设计模式之禅》</p>\n<p>​        刘备要到江东娶老婆了，走之前诸葛亮给赵云（伴郎）三个锦囊妙计，说是按天机拆开解决棘手问题，</p>\n<p>嘿，还别说，真是解决了大问题，搞到最后是周瑜陪了夫人又折兵呀，那咱们先看看这个场景是什么样子</p>\n<p>的。 </p>\n<p>​        先说这个场景中的要素：三个妙计，一个锦囊，一个赵云，妙计是小亮同志给的，妙计是放置在锦囊</p>\n<p>里，俗称就是锦囊妙计嘛，那赵云就是一个干活的人，从锦囊中取出妙计，执行，然后获胜，用 JAVA 程序</p>\n<p>怎么表现这个呢？我们先看类图：<br><img src=\"策略模式.png\" alt=\"策略模式\"></p>\n<p>策略模式体现了面向对象的OCP原则。</p>\n</blockquote>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>是对算法的封装，把算法的责任和算法本身分隔开，委派给不同的对象管理。即，准备一组算法，并将每个算法封装起来，使得他们可以互换。</p>\n<h2 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h2><ul>\n<li>使算法更易于被切换和扩展</li>\n<li>算法的选择由客户端决定，提高了系统的灵活性</li>\n<li>消除了一些 <code>if...else</code> 条件语句</li>\n</ul>\n<h2 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h2><ul>\n<li>因客户端需要理解所有具体策略间的区别，以便选择合适的算法，增加了客户端的使用难度</li>\n</ul>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><blockquote>\n<p>以 <code>java.util.Comparator</code> 接口为例，实现对同一对象使用不同排序规则。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@FunctionalInterface</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Comparator</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(T o1, T o2)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"定义待排序类：Dog\"><a href=\"#定义待排序类：Dog\" class=\"headerlink\" title=\"定义待排序类：Dog\"></a>定义待排序类：Dog</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Comparator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 待排序类：狗</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/11</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dog</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparator</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> food, weight;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Dog</span><span class=\"params\">(<span class=\"keyword\">int</span> food, <span class=\"keyword\">int</span> weight)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.food = food;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.weight = weight;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Object o1, Object o2)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Dog&#123;&quot;</span> + <span class=\"string\">&quot;food=&quot;</span> + food + <span class=\"string\">&quot;, weight=&quot;</span> + weight + <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"定义排序类：Sorter\"><a href=\"#定义排序类：Sorter\" class=\"headerlink\" title=\"定义排序类：Sorter\"></a>定义排序类：Sorter</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Comparator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 排序类</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/11</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Sorter</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 排序</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/11 21:38</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 原数组</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> comparator 比较器</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(T[] arr, Comparator&lt;T&gt; comparator)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; i; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (comparator.compare(arr[i], arr[j]) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          swap(arr, i, j);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 数组交换</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/11 21:39</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 原数组</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> i 待交换的位置1</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> j 待交换的位置2</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(T[] arr, <span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> j)</span> </span>&#123;</span><br><span class=\"line\">    T temp = arr[i];</span><br><span class=\"line\">    arr[i] = arr[j];</span><br><span class=\"line\">    arr[j] = temp;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"定义执行排序类：Main\"><a href=\"#定义执行排序类：Main\" class=\"headerlink\" title=\"定义执行排序类：Main\"></a>定义执行排序类：Main</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 策略模式</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/11</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Dog[] arr = &#123;<span class=\"keyword\">new</span> Dog(<span class=\"number\">3</span>, <span class=\"number\">5</span>), <span class=\"keyword\">new</span> Dog(<span class=\"number\">5</span>, <span class=\"number\">1</span>), <span class=\"keyword\">new</span> Dog(<span class=\"number\">1</span>, <span class=\"number\">3</span>)&#125;;</span><br><span class=\"line\">    Sorter&lt;Dog&gt; sorter = <span class=\"keyword\">new</span> Sorter&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">// 食量正序排序</span></span><br><span class=\"line\">    sorter.sort(</span><br><span class=\"line\">        arr,</span><br><span class=\"line\">        (o1, o2) -&gt; &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (o1.food &lt; o2.food) <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">          <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (o1.food &gt; o2.food) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">          <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    <span class=\"comment\">//    // 体重正序排序</span></span><br><span class=\"line\">    <span class=\"comment\">//    sorter.sort(</span></span><br><span class=\"line\">    <span class=\"comment\">//        arr,</span></span><br><span class=\"line\">    <span class=\"comment\">//        (o1, o2) -&gt; &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//          if (o1.weight &lt; o2.weight) return -1;</span></span><br><span class=\"line\">    <span class=\"comment\">//          else if (o1.weight &gt; o2.weight) return 1;</span></span><br><span class=\"line\">    <span class=\"comment\">//          else return 0;</span></span><br><span class=\"line\">    <span class=\"comment\">//        &#125;);</span></span><br><span class=\"line\">    System.out.println(Arrays.toString(arr));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["设计模式"],"tags":["设计模式","策略"]},{"title":"【设计模式】Singleton-单例","url":"https://chiaralee.gitee.io/2021/04/10/【设计模式】Singleton-单例/","content":"<h1 id=\"单例模式（Singleton-Pattern）\"><a href=\"#单例模式（Singleton-Pattern）\" class=\"headerlink\" title=\"单例模式（Singleton Pattern）\"></a>单例模式（Singleton Pattern）</h1><blockquote>\n<p>ref：《设计模式之禅》</p>\n<p>​        这个模式是很有意思，而且比较简单，但是我还是要说因为它使用的是如此的广泛，如此的有人缘，</p>\n<p>单例就是单一、独苗的意思，那什么是独一份呢？你的思维是独一份，除此之外还有什么不能山寨的呢？</p>\n<p>我们举个比较难复制的对象：皇帝 </p>\n<p>​        中国的历史上很少出现两个皇帝并存的时期，是有，但不多，那我们就认为皇帝是个单例模式，在这</p>\n<p>个场景中，有皇帝，有大臣，大臣是天天要上朝参见皇帝的，今天参拜的皇帝应该和昨天、前天的一样（过</p>\n<p>渡期的不考虑，别找茬哦），大臣磕完头，抬头一看，嗨，还是昨天那个皇帝，单例模式，绝对的单例模式，先看类图：</p>\n<p><img src=\"单例模式.png\" alt=\"单例模式\"></p>\n<ul>\n<li><code>private的构造函数</code> 是保证这个类不能被其他类new出来</li>\n<li><code>getInstance()</code> 是获得唯一一个实例化对象</li>\n</ul>\n</blockquote>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>保证一个类仅有一个实例，并提供一个访问它的全局访问点。</p>\n<ol>\n<li>单例类只能有一个实例</li>\n<li>单例类必须自己创建自己的唯一实例</li>\n<li>单例类必须给所有其他对象提供这一实例</li>\n</ol>\n<h2 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h2><ul>\n<li>在内存中仅有一个实例，减少了内存的开销</li>\n<li>避免对资源的多重占用</li>\n</ul>\n<h2 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h2><ul>\n<li>没有接口，不能继承，与单一职责原则冲突（一个类应该只关心内部逻辑，而不关心外面怎么来实例化的）</li>\n</ul>\n<h2 id=\"🌰举个栗子🌰\"><a href=\"#🌰举个栗子🌰\" class=\"headerlink\" title=\"🌰举个栗子🌰\"></a>🌰举个栗子🌰</h2><h3 id=\"No-1-饿汉模式\"><a href=\"#No-1-饿汉模式\" class=\"headerlink\" title=\"No 1. 饿汉模式\"></a>No 1. 饿汉模式</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 饿汉模式</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;简单实用，推荐使用！</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;类加载到内存后，实例化一个单例，JVM保证线程安全</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;唯一缺点：不管用到与否，类装载时完成实例化（不用的话，装载它干哈）</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/11</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mgr01</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Mgr01 INSTANCE = <span class=\"keyword\">new</span> Mgr01();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Mgr01</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Mgr01 <span class=\"title\">getInstance</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> INSTANCE;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-2-懒汉模式（DCL）\"><a href=\"#No-2-懒汉模式（DCL）\" class=\"headerlink\" title=\"No 2. 懒汉模式（DCL）\"></a>No 2. 懒汉模式（DCL）</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 懒汉模式</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;Lazy Loading</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;达到了按需初始化的目的，并通过DCL解决多线程时无法”单一实例“的问题</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/11</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mgr05</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">volatile</span> Mgr05 INSTANCE; <span class=\"comment\">// 使用volatile防止指令重排</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Mgr05</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Mgr05 <span class=\"title\">getInstance</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (INSTANCE == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// DCL双重检查</span></span><br><span class=\"line\">      <span class=\"keyword\">synchronized</span> (Mgr05.class) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (INSTANCE == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">          INSTANCE = <span class=\"keyword\">new</span> Mgr05();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> INSTANCE;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-3-懒汉模式（静态内部类）\"><a href=\"#No-3-懒汉模式（静态内部类）\" class=\"headerlink\" title=\"No 3. 懒汉模式（静态内部类）\"></a>No 3. 懒汉模式（静态内部类）</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 静态内部类方式</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;JVM保证单例</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;加载外部类时不会加载内部类，这样可以实现懒加载</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/11</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mgr06</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Mgr06</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mgr06Holder</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Mgr06 INSTANCE = <span class=\"keyword\">new</span> Mgr06();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Mgr06 <span class=\"title\">getInstance</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Mgr06Holder.INSTANCE;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"No-4-枚举单例\"><a href=\"#No-4-枚举单例\" class=\"headerlink\" title=\"No 4. 枚举单例\"></a>No 4. 枚举单例</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 枚举单例</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;完美的单例模式，《Effective Java》中推荐写法</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;不仅可以解决线程同步，还可以防止反序列化</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/11</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Mgr07</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 唯一的取值，下面的调用只能调用这一个</span></span><br><span class=\"line\">  INSTANCE;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 业务方法</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/11 13:13</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">m</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["设计模式"],"tags":["设计模式","单例"]},{"title":"谷歌OKR","url":"https://chiaralee.gitee.io/2021/04/07/谷歌OKR/","content":"<blockquote>\n<p>ref : <a class=\"link\"   href=\"https://www.bilibili.com/video/BV1RT4y137an\" >纯干货丨学习效率低？总半途而废？谷歌OKR让你逆袭丨高效工作 任务管理 告别拖延症<i class=\"fas fa-external-link-alt\"></i></a></p>\n</blockquote>\n<h1 id=\"什么是OKR工作法\"><a href=\"#什么是OKR工作法\" class=\"headerlink\" title=\"什么是OKR工作法\"></a>什么是OKR工作法</h1><h2 id=\"核心\"><a href=\"#核心\" class=\"headerlink\" title=\"核心\"></a>核心</h2><p>目标和关键结果</p>\n<h2 id=\"辅助\"><a href=\"#辅助\" class=\"headerlink\" title=\"辅助\"></a>辅助</h2><p>本周任务、状态指标、未来任务</p>\n<h1 id=\"能帮我解决什么问题\"><a href=\"#能帮我解决什么问题\" class=\"headerlink\" title=\"能帮我解决什么问题\"></a>能帮我解决什么问题</h1><h2 id=\"战略清晰\"><a href=\"#战略清晰\" class=\"headerlink\" title=\"战略清晰\"></a>战略清晰</h2><ul>\n<li>是灯塔也是简单又犀利的量表</li>\n<li>结果导向</li>\n<li>能够呈现出最需要被关注的任务/问题</li>\n<li>进度可视化，容不得自己骗自己的情况发生，发生的话会光速打脸</li>\n</ul>\n<h2 id=\"提供持续稳定的动力\"><a href=\"#提供持续稳定的动力\" class=\"headerlink\" title=\"提供持续稳定的动力\"></a>提供持续稳定的动力</h2><ul>\n<li>避免目标和优先顺序不清晰引起的思路混乱</li>\n<li>以及随之而来的消极怠工</li>\n</ul>\n<h2 id=\"让正确的事情连续发生\"><a href=\"#让正确的事情连续发生\" class=\"headerlink\" title=\"让正确的事情连续发生\"></a>让正确的事情连续发生</h2><ul>\n<li>将你从舒适区中拽出</li>\n<li>助你在正确的方向上一路狂奔而去</li>\n</ul>\n<h2 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h2><p>考试准备、兴趣学习、求职就业、职场任务、创业团队，任何你觉得让你浮躁胸闷气短理不出头绪想干但又无从下手的复杂项目</p>\n<h1 id=\"如何制定一个好用的OKR\"><a href=\"#如何制定一个好用的OKR\" class=\"headerlink\" title=\"如何制定一个好用的OKR\"></a>如何制定一个好用的OKR</h1><h2 id=\"准备材料\"><a href=\"#准备材料\" class=\"headerlink\" title=\"准备材料\"></a>准备材料</h2><p>便签纸/喜欢的项目管理软件/思维导图软件</p>\n<h2 id=\"基本格式\"><a href=\"#基本格式\" class=\"headerlink\" title=\"基本格式\"></a>基本格式</h2><h3 id=\"目标-amp-关键结果\"><a href=\"#目标-amp-关键结果\" class=\"headerlink\" title=\"目标&amp;关键结果\"></a>目标&amp;关键结果</h3><p>备注每一条的信心指数，从（5/10）开始</p>\n<h3 id=\"本周要做的任务\"><a href=\"#本周要做的任务\" class=\"headerlink\" title=\"本周要做的任务\"></a>本周要做的任务</h3><p>5-6件事，优先级分P1和P2</p>\n<h3 id=\"状态指标\"><a href=\"#状态指标\" class=\"headerlink\" title=\"状态指标\"></a>状态指标</h3><p>完成目标同时重要的软性指标，使用颜色标记当下状态</p>\n<h3 id=\"未来1个月要完成的任务\"><a href=\"#未来1个月要完成的任务\" class=\"headerlink\" title=\"未来1个月要完成的任务\"></a>未来1个月要完成的任务</h3><h3 id=\"已经完成的事\"><a href=\"#已经完成的事\" class=\"headerlink\" title=\"已经完成的事\"></a>已经完成的事</h3><h2 id=\"制定要求\"><a href=\"#制定要求\" class=\"headerlink\" title=\"制定要求\"></a>制定要求</h2><h3 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h3><p>鼓舞人心，完成的期限在1-3个月左右</p>\n<h3 id=\"关键结果\"><a href=\"#关键结果\" class=\"headerlink\" title=\"关键结果\"></a>关键结果</h3><p>制定时有50%的信心可以完成</p>\n<h3 id=\"5min自查\"><a href=\"#5min自查\" class=\"headerlink\" title=\"5min自查\"></a>5min自查</h3><ul>\n<li>目标让我兴奋嘛？</li>\n<li>这个优先级别列表能确保我完成OKR嘛？</li>\n<li>我的能力够吗？</li>\n<li>是否有人在我陷入困境后能帮助我？</li>\n<li>我准备好立刻出发了嘛？</li>\n<li>知道马上要做什么吗？</li>\n</ul>\n<h2 id=\"追踪和盘点\"><a href=\"#追踪和盘点\" class=\"headerlink\" title=\"追踪和盘点\"></a>追踪和盘点</h2><h3 id=\"每周五\"><a href=\"#每周五\" class=\"headerlink\" title=\"每周五\"></a>每周五</h3><ul>\n<li>先庆祝做得好的部分，奖励大脑</li>\n<li>再盘点表现出的问题以及潜在风险</li>\n<li>撰写简单总结</li>\n</ul>\n<h3 id=\"每周一\"><a href=\"#每周一\" class=\"headerlink\" title=\"每周一\"></a>每周一</h3><p>设定10分钟固定时间明确本周OKR</p>\n<h3 id=\"总结撰写的思路\"><a href=\"#总结撰写的思路\" class=\"headerlink\" title=\"总结撰写的思路\"></a>总结撰写的思路</h3><ul>\n<li>状态过低的需要标注红色并找到原因</li>\n<li>本周任务的完成情况标记并总结原因</li>\n<li>列出下周3件新增任务，写可执行步骤</li>\n<li>列出潜在风险或者阻碍，如有</li>\n<li>奖励一下自己</li>\n<li>其他可爱备注</li>\n</ul>\n<h1 id=\"个人使用心得-amp-技巧分享\"><a href=\"#个人使用心得-amp-技巧分享\" class=\"headerlink\" title=\"个人使用心得&amp;技巧分享\"></a>个人使用心得&amp;技巧分享</h1><ul>\n<li>把时间花在最重要的事情上，必须选择最重要的目标，而不是不切实际地想完成所有的事情</li>\n<li>及时总结，不断学习</li>\n<li>“换个CEO”的思路</li>\n<li>关注产出的结果，不要被虚假的充实感蒙蔽</li>\n</ul>\n","categories":["方法论"],"tags":["方法论"]},{"title":"【ALL IN】排序","url":"https://chiaralee.gitee.io/2021/04/01/【ALL-IN】排序/","content":"<h1 id=\"概览\"><a href=\"#概览\" class=\"headerlink\" title=\"概览\"></a>概览</h1><blockquote>\n<p><strong>《忆排序 面试我最强》 马老师</strong></p>\n<p>选泡插，</p>\n<p>快归堆希统计基<sup>①</sup>，</p>\n<p>恩方<sup>②</sup>恩老<sup>③</sup>恩一三<sup>④</sup>，</p>\n<p>对恩加K<sup>⑤</sup>恩乘K<sup>⑥</sup>，</p>\n<p>不稳稳稳不稳稳，</p>\n<p>不稳不稳稳稳稳<sup>⑦</sup>！</p>\n<p><em>释义：</em></p>\n<p><em>① 选（选择排序）一个大炮（冒泡排序）插（插入排序）他一下，做统（桶排序）计（计数排序）的这个基（基数排序）友，就快（快速排序）归（归并排序）西（希尔排序）了。</em></p>\n<p><em>② 选（选择排序）泡（冒泡排序）插（插入排序）时间复杂度为 恩方 O(n²)</em></p>\n<p><em>③ 快（选择排序）归（归并排序）堆（堆排序）时间复杂度为 恩老 O(nlog<sub>2</sub>n)</em></p>\n<p><em>④ 希（希尔排序）时间复杂度为 恩一三 O(n<sup>1.3</sup>)</em></p>\n<p><em>⑤ 统（桶排序）计（计数排序）这俩排序时间复杂度为 恩加K O(n+k)</em></p>\n<p><em>⑥ 基（基数排序）时间复杂度为 恩乘K O(n\\</em>k)*</p>\n<p>⑦ 选（选择排序）泡（冒泡排序）插（插入排序） 快（快速排序）归（归并排序）堆（堆排序）希（希尔排序）统（桶排序）计（计数排序）基（基数排序） 10种排序稳定性依次为 不稳 稳 稳 不稳 稳 不稳 不稳 稳 稳 稳</p>\n</blockquote>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">中文</th>\n<th style=\"text-align:center\">英文</th>\n<th style=\"text-align:center\">平均时间复杂度</th>\n<th style=\"text-align:center\">最坏时间复杂度</th>\n<th style=\"text-align:center\">最好时间复杂度</th>\n<th style=\"text-align:center\">空间复杂度</th>\n<th style=\"text-align:center\">稳定性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">选择排序</td>\n<td style=\"text-align:center\">Selection</td>\n<td style=\"text-align:center\"><strong>O(n²)</strong></td>\n<td style=\"text-align:center\">O(n²)</td>\n<td style=\"text-align:center\">O(n²)</td>\n<td style=\"text-align:center\"><strong>O(1)</strong></td>\n<td style=\"text-align:center\"><strong>不稳定</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">冒泡排序</td>\n<td style=\"text-align:center\">Bubble</td>\n<td style=\"text-align:center\"><strong>O(n²)</strong></td>\n<td style=\"text-align:center\">O(n²)</td>\n<td style=\"text-align:center\">O(n)</td>\n<td style=\"text-align:center\"><strong>O(1)</strong></td>\n<td style=\"text-align:center\"><strong>稳定</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong><font color=red>插入排序</font></strong></td>\n<td style=\"text-align:center\">Insertion</td>\n<td style=\"text-align:center\"><strong>O(n²)</strong></td>\n<td style=\"text-align:center\">O(n²)</td>\n<td style=\"text-align:center\">O(n)</td>\n<td style=\"text-align:center\"><strong>O(1)</strong></td>\n<td style=\"text-align:center\"><strong>稳定</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong><font color=red>堆排序</font></strong></td>\n<td style=\"text-align:center\">Heap</td>\n<td style=\"text-align:center\"><strong>O(nlog<sub>2</sub>n)</strong></td>\n<td style=\"text-align:center\">O(nlog<sub>2</sub>n)</td>\n<td style=\"text-align:center\">O(nlog<sub>2</sub>n)</td>\n<td style=\"text-align:center\"><strong>O(1)</strong></td>\n<td style=\"text-align:center\"><strong>不稳定</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">希尔排序</td>\n<td style=\"text-align:center\">Shell</td>\n<td style=\"text-align:center\"><strong>O(n<sup>1.3</sup>)</strong></td>\n<td style=\"text-align:center\">O(n²)</td>\n<td style=\"text-align:center\">O(n)</td>\n<td style=\"text-align:center\"><strong>O(1)</strong></td>\n<td style=\"text-align:center\"><strong>不稳定</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong><font color=red>归并排序</font></strong></td>\n<td style=\"text-align:center\">Merge</td>\n<td style=\"text-align:center\"><strong>O(nlog<sub>2</sub>n)</strong></td>\n<td style=\"text-align:center\">O(nlog<sub>2</sub>n)</td>\n<td style=\"text-align:center\">O(nlog<sub>2</sub>n)</td>\n<td style=\"text-align:center\"><strong>O(n)</strong></td>\n<td style=\"text-align:center\"><strong>稳定</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong><font color=red>快速排序</font></strong></td>\n<td style=\"text-align:center\">Quick</td>\n<td style=\"text-align:center\"><strong>O(nlog<sub>2</sub>n)</strong></td>\n<td style=\"text-align:center\">O(n²)</td>\n<td style=\"text-align:center\">O(nlog<sub>2</sub>n)</td>\n<td style=\"text-align:center\"><strong>O(log<sub>2</sub>n)</strong></td>\n<td style=\"text-align:center\"><strong>不稳定</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">桶排序</td>\n<td style=\"text-align:center\">Bucket</td>\n<td style=\"text-align:center\"><strong>O(n+k)</strong></td>\n<td style=\"text-align:center\">O(n²)</td>\n<td style=\"text-align:center\">O(n)</td>\n<td style=\"text-align:center\"><strong>O(n+k)</strong></td>\n<td style=\"text-align:center\"><strong>稳定</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">计数排序</td>\n<td style=\"text-align:center\">Counting</td>\n<td style=\"text-align:center\"><strong>O(n+k)</strong></td>\n<td style=\"text-align:center\">O(n+k)</td>\n<td style=\"text-align:center\">O(n+k)</td>\n<td style=\"text-align:center\"><strong>O(n+k)</strong></td>\n<td style=\"text-align:center\"><strong>稳定</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">基数排序</td>\n<td style=\"text-align:center\">Radix</td>\n<td style=\"text-align:center\"><strong>O(n*k)</strong></td>\n<td style=\"text-align:center\">O(n*k)</td>\n<td style=\"text-align:center\">O(n*k)</td>\n<td style=\"text-align:center\"><strong>O(n+k)</strong></td>\n<td style=\"text-align:center\"><strong>稳定</strong></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p><a class=\"link\"   href=\"https://www.bilibili.com/video/BV1Ky4y1S7Jz\" >趣味动画 | 程序员必看的十大排序算法【力扣 LeetCode】<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h1 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h1><p>最简单但最没用（最好情况和最坏情况的时间复杂度都很高，且不稳定）的排序算法。</p>\n<h2 id=\"算法步骤\"><a href=\"#算法步骤\" class=\"headerlink\" title=\"算法步骤\"></a>算法步骤</h2><ol>\n<li>从序列中找到最小元素，放到序列的起始位置</li>\n<li>除排好序的最值外，新的序列重复步骤1，直到排序完毕</li>\n</ol>\n<p><img src=\"selectionSort.gif\" alt=\"选择排序\"></p>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 选择排序</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021年4月2日</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SelectionSort</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">38</span>, <span class=\"number\">5</span>, <span class=\"number\">47</span>, <span class=\"number\">15</span>, <span class=\"number\">36</span>, <span class=\"number\">26</span>, <span class=\"number\">27</span>, <span class=\"number\">2</span>, <span class=\"number\">46</span>, <span class=\"number\">4</span>, <span class=\"number\">19</span>, <span class=\"number\">50</span>, <span class=\"number\">48</span>&#125;;</span><br><span class=\"line\">    sort(arr);</span><br><span class=\"line\">    System.out.println(Arrays.toString(arr));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 数组排序</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 序列</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 查找子数组中最小的位置</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span> minPos = findMinPos(arr, i);</span><br><span class=\"line\">      <span class=\"comment\">// 交换数据</span></span><br><span class=\"line\">      SortUtils.swap(arr, i, minPos);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 返回子数组中最小的位置</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 数组</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> start 查找的起始位置</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 最小的位置</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">findMinPos</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr, <span class=\"keyword\">int</span> start)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> minPos = start;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = start + <span class=\"number\">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">      minPos = arr[minPos] &gt; arr[i] ? i : minPos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> minPos;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"优化项\"><a href=\"#优化项\" class=\"headerlink\" title=\"优化项\"></a>优化项</h2><p>在未排序的序列中同时找到两端元素（最小、最大），分别放于序列的起始、末尾。由此，可使外层遍历减半。</p>\n<h3 id=\"代码实现-1\"><a href=\"#代码实现-1\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 选择排序优化</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;同时查找出最大值、最小值</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021年4月2日</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SelectionSort2</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">38</span>, <span class=\"number\">5</span>, <span class=\"number\">47</span>, <span class=\"number\">15</span>, <span class=\"number\">36</span>, <span class=\"number\">26</span>, <span class=\"number\">27</span>, <span class=\"number\">2</span>, <span class=\"number\">46</span>, <span class=\"number\">4</span>, <span class=\"number\">19</span>, <span class=\"number\">50</span>, <span class=\"number\">48</span>&#125;;</span><br><span class=\"line\">    sort(arr);</span><br><span class=\"line\">    System.out.println(Arrays.toString(arr));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 数组排序</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 序列</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length / <span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 查找的范围：起始位置</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span> start = i;</span><br><span class=\"line\">      <span class=\"comment\">// 查找的范围：结束位置</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span> end = arr.length - i - <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"comment\">// 范围内的最小值、最大值</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span>[] sidesPos = findSidesPos(arr, start, end);</span><br><span class=\"line\"><span class=\"comment\">//      System.out.format(</span></span><br><span class=\"line\"><span class=\"comment\">//          &quot;%s\\n%d ~ %d : minIndex - %d(%d), maxIndex - %d(%d)\\n&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">//          Arrays.toString(arr),</span></span><br><span class=\"line\"><span class=\"comment\">//          start,</span></span><br><span class=\"line\"><span class=\"comment\">//          end,</span></span><br><span class=\"line\"><span class=\"comment\">//          sidesPos[0],</span></span><br><span class=\"line\"><span class=\"comment\">//          arr[sidesPos[0]],</span></span><br><span class=\"line\"><span class=\"comment\">//          sidesPos[1],</span></span><br><span class=\"line\"><span class=\"comment\">//          arr[sidesPos[1]]);</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 交换数据</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (start == sidesPos[<span class=\"number\">0</span>] &amp;&amp; end == sidesPos[<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 起始位置最小，结束位置最大，无需交换</span></span><br><span class=\"line\">        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (end == sidesPos[<span class=\"number\">0</span>] &amp;&amp; start == sidesPos[<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 起始位置最大，结束位置最小</span></span><br><span class=\"line\">        SortUtils.swap(arr, start, end);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (start == sidesPos[<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 起始位置最大，先交换起始位置</span></span><br><span class=\"line\">        SortUtils.swap(arr, end, sidesPos[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        SortUtils.swap(arr, start, sidesPos[<span class=\"number\">0</span>]);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        SortUtils.swap(arr, start, sidesPos[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        SortUtils.swap(arr, end, sidesPos[<span class=\"number\">1</span>]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 同时查找出最大值、最小值</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 数组</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> start 查找的起始位置</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> end 查找的结束位置</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> &#123;最小值，最大值&#125;</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[] findSidesPos(<span class=\"keyword\">int</span>[] arr, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> end) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] sidesPos = &#123;start, end&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = start; i &lt;= end; i++) &#123;</span><br><span class=\"line\">      sidesPos[<span class=\"number\">0</span>] = arr[sidesPos[<span class=\"number\">0</span>]] &gt; arr[i] ? i : sidesPos[<span class=\"number\">0</span>];</span><br><span class=\"line\">      sidesPos[<span class=\"number\">1</span>] = arr[sidesPos[<span class=\"number\">1</span>]] &lt; arr[i] ? i : sidesPos[<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sidesPos;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h1><h2 id=\"算法步骤-1\"><a href=\"#算法步骤-1\" class=\"headerlink\" title=\"算法步骤\"></a>算法步骤</h2><ol>\n<li>相邻数据两两比较，将最大值排至末尾</li>\n<li>除排好序的最值外，新的序列重复步骤1，直到排序完成</li>\n</ol>\n<p><img src=\"bubbleSort.gif\" alt=\"冒泡排序\"></p>\n<h3 id=\"代码实现-2\"><a href=\"#代码实现-2\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 冒泡排序</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021年4月6日</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BubbleSort</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">38</span>, <span class=\"number\">5</span>, <span class=\"number\">47</span>, <span class=\"number\">15</span>, <span class=\"number\">36</span>, <span class=\"number\">26</span>, <span class=\"number\">27</span>, <span class=\"number\">2</span>, <span class=\"number\">46</span>, <span class=\"number\">4</span>, <span class=\"number\">19</span>, <span class=\"number\">50</span>, <span class=\"number\">48</span>&#125;;</span><br><span class=\"line\">    sort(arr);</span><br><span class=\"line\">    System.out.println(Arrays.<span class=\"function\">toStri <span class=\"title\">ng</span><span class=\"params\">(arr)</span>)</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 数组排序</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 序列</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; i; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[i] &lt; arr[j]) &#123;</span><br><span class=\"line\">          SortUtils.swap(arr, i, j);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h1><p>对于基本有序的数组是最好用的，也是稳定的，类似打扑克牌。</p>\n<h2 id=\"算法步骤-2\"><a href=\"#算法步骤-2\" class=\"headerlink\" title=\"算法步骤\"></a>算法步骤</h2><ol>\n<li>取未排序的元素依次由后向前，逐一比较，直至插入正确的顺序中</li>\n<li>重复步骤1，直到排序完成</li>\n</ol>\n<p><img src=\"insertionSort.gif\" alt=\"插入排序\"></p>\n<h3 id=\"代码实现-3\"><a href=\"#代码实现-3\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 插入排序</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021年4月7日</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InsertionSort</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">38</span>, <span class=\"number\">5</span>, <span class=\"number\">47</span>, <span class=\"number\">15</span>, <span class=\"number\">36</span>, <span class=\"number\">26</span>, <span class=\"number\">27</span>, <span class=\"number\">2</span>, <span class=\"number\">46</span>, <span class=\"number\">4</span>, <span class=\"number\">19</span>, <span class=\"number\">50</span>, <span class=\"number\">48</span>&#125;;</span><br><span class=\"line\">    sort(arr);</span><br><span class=\"line\">    System.out.println(Arrays.toString(arr));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 数组排序</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 序列</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i; j &gt; <span class=\"number\">0</span> &amp;&amp; arr[j] &lt; arr[j - <span class=\"number\">1</span>]; j--) &#123;</span><br><span class=\"line\"><span class=\"comment\">//        System.out.format(&quot;Move %d to %d : %s\\n&quot;, j, j - 1, Arrays.toString(arr));</span></span><br><span class=\"line\">        SortUtils.swap(arr, j, j - <span class=\"number\">1</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"优化项-1\"><a href=\"#优化项-1\" class=\"headerlink\" title=\"优化项\"></a>优化项</h2><p>用临时变量记录标记项，去掉swap方法，顺序向后复制较大的值，找到需要插入的位置后，赋值。</p>\n<p>较原算法减少了赋值的次数。</p>\n<h3 id=\"代码实现-4\"><a href=\"#代码实现-4\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 插入排序</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;li&gt;去掉swap方法</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021年4月7日</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InsertionSort2</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">38</span>, <span class=\"number\">5</span>, <span class=\"number\">47</span>, <span class=\"number\">15</span>, <span class=\"number\">36</span>, <span class=\"number\">26</span>, <span class=\"number\">27</span>, <span class=\"number\">2</span>, <span class=\"number\">46</span>, <span class=\"number\">4</span>, <span class=\"number\">19</span>, <span class=\"number\">50</span>, <span class=\"number\">48</span>&#125;;</span><br><span class=\"line\">    sort(arr);</span><br><span class=\"line\">    System.out.println(Arrays.toString(arr));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 数组排序</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 序列</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 当前等待插入的值</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span> cur = arr[i];</span><br><span class=\"line\">      <span class=\"comment\">// 前一个需要比较的位置</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span> j = i - <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (; j &gt;= <span class=\"number\">0</span> &amp;&amp; cur &lt; arr[j]; j--) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 向后移动</span></span><br><span class=\"line\">        arr[j + <span class=\"number\">1</span>] = arr[j];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 插入最终位置</span></span><br><span class=\"line\">      arr[j + <span class=\"number\">1</span>] = cur;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"选泡插（三种简单排序）对比\"><a href=\"#选泡插（三种简单排序）对比\" class=\"headerlink\" title=\"选泡插（三种简单排序）对比\"></a>选泡插（三种简单排序）对比</h1><ul>\n<li>选择<ul>\n<li>基本不用，较慢</li>\n</ul>\n</li>\n<li>冒泡<ul>\n<li>基本不用，不稳定</li>\n</ul>\n</li>\n<li>插入<ul>\n<li>样本小且基本有序的时候效率比较高</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"希尔排序\"><a href=\"#希尔排序\" class=\"headerlink\" title=\"希尔排序\"></a>希尔排序</h1><blockquote>\n<p>From 1959, Design By Shell</p>\n</blockquote>\n<p>改进的插入排序：</p>\n<ul>\n<li><p>在间隔大的时候，移动的次数少。</p>\n</li>\n<li><p>在间隔小的时候，移动的距离短。</p>\n</li>\n</ul>\n<p>因为跳着排，所以不稳定，所以不常用。</p>\n<h2 id=\"算法步骤-3\"><a href=\"#算法步骤-3\" class=\"headerlink\" title=\"算法步骤\"></a>算法步骤</h2><ol>\n<li>先给定一个间隔（gap），按指定间隔使用插入排序完成子集的排序</li>\n<li>缩小间隔，重复步骤1</li>\n<li>直到间隔缩小至1时，进行最后一轮插入排序，完成排序</li>\n</ol>\n<p><img src=\"shellSort.gif\" alt=\"希尔排序\"></p>\n<h3 id=\"代码实现-5\"><a href=\"#代码实现-5\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 希尔排序</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021年4月7日</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ShellSort</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">38</span>, <span class=\"number\">5</span>, <span class=\"number\">47</span>, <span class=\"number\">15</span>, <span class=\"number\">36</span>, <span class=\"number\">26</span>, <span class=\"number\">27</span>, <span class=\"number\">2</span>, <span class=\"number\">46</span>, <span class=\"number\">4</span>, <span class=\"number\">19</span>, <span class=\"number\">50</span>, <span class=\"number\">48</span>&#125;;</span><br><span class=\"line\">    sort(arr);</span><br><span class=\"line\">    System.out.println(Arrays.toString(arr));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 数组排序</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 序列</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> gap = arr.length &gt;&gt; <span class=\"number\">1</span>; gap &gt; <span class=\"number\">0</span>; gap /= <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = gap; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 当前等待插入的值</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> cur = arr[i];</span><br><span class=\"line\">        <span class=\"comment\">// 前一个需要比较的位置</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> j = i - gap;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; j &gt;= <span class=\"number\">0</span> &amp;&amp; cur &lt; arr[j]; j -= gap) &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 向后移动</span></span><br><span class=\"line\">          arr[j + gap] = arr[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 插入最终位置</span></span><br><span class=\"line\">        arr[j + gap] = cur;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"优化项-2\"><a href=\"#优化项-2\" class=\"headerlink\" title=\"优化项\"></a>优化项</h2><p>采用Knuth序列优化gap取值</p>\n<h3 id=\"Knuth序列\"><a href=\"#Knuth序列\" class=\"headerlink\" title=\"Knuth序列\"></a>Knuth序列</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h = 1</span><br><span class=\"line\">h = h*3 + 1</span><br></pre></td></tr></table></figure>\n<h3 id=\"代码实现-6\"><a href=\"#代码实现-6\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 数组排序</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> arr 序列</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> h = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (h &lt;= arr.length / <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">    h = h * <span class=\"number\">3</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> gap = h; gap &gt; <span class=\"number\">0</span>; gap = (gap - <span class=\"number\">1</span>) / <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = gap; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 当前等待插入的值</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span> cur = arr[i];</span><br><span class=\"line\">      <span class=\"comment\">// 前一个需要比较的位置</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span> j = i - gap;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (; j &gt;= <span class=\"number\">0</span> &amp;&amp; cur &lt; arr[j]; j -= gap) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 向后移动</span></span><br><span class=\"line\">        arr[j + gap] = arr[j];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 插入最终位置</span></span><br><span class=\"line\">      arr[j + gap] = cur;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h1><p>Java对象排序算法：Tim Sort（改进的归并排序）</p>\n<h2 id=\"算法步骤-4\"><a href=\"#算法步骤-4\" class=\"headerlink\" title=\"算法步骤\"></a>算法步骤</h2><p><img src=\"mergeSort.gif\" alt=\"归并排序\"></p>\n<h3 id=\"代码实现-7\"><a href=\"#代码实现-7\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 归并排序</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021年4月7日</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MergeSort</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">38</span>, <span class=\"number\">5</span>, <span class=\"number\">47</span>, <span class=\"number\">15</span>, <span class=\"number\">36</span>, <span class=\"number\">26</span>, <span class=\"number\">27</span>, <span class=\"number\">2</span>, <span class=\"number\">46</span>, <span class=\"number\">4</span>, <span class=\"number\">19</span>, <span class=\"number\">50</span>, <span class=\"number\">48</span>&#125;;</span><br><span class=\"line\">    <span class=\"comment\">//    int[] arr = &#123;3, 6, 32, 42, 2, 25, 41&#125;; // 用于调试merge方法</span></span><br><span class=\"line\">    sort(arr, <span class=\"number\">0</span>, arr.length - <span class=\"number\">1</span>);</span><br><span class=\"line\">    System.out.println(Arrays.toString(arr));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 数组排序</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 原序列</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> start 需要排序的起始位置</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> end 需要排序的结束位置</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> end)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (start == end) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> mid = start + (end - start) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 左半边排序</span></span><br><span class=\"line\">    sort(arr, start, mid);</span><br><span class=\"line\">    <span class=\"comment\">// 右半边排序</span></span><br><span class=\"line\">    sort(arr, mid + <span class=\"number\">1</span>, end);</span><br><span class=\"line\">    <span class=\"comment\">// 合并</span></span><br><span class=\"line\">    merge(arr, start, end);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 数组合并</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 原序列</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> start 需要合并的起始位置</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> end 需要合并的结束位置</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> end)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mid = start + (end - start) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 合并后的新数组</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] tmp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[end - start + <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 前半截</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = start;</span><br><span class=\"line\">    <span class=\"comment\">// 后半截</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> j = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 填充新数组</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> k = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt;= mid &amp;&amp; j &lt;= end) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// i、j均未越界</span></span><br><span class=\"line\">      tmp[k++] = arr[i] &lt;= arr[j] ? arr[i++] : arr[j++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt;= mid) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 前半截未取完</span></span><br><span class=\"line\">      tmp[k++] = arr[i++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (j &lt;= end) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 后半截未取完</span></span><br><span class=\"line\">      tmp[k++] = arr[j++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 临时数组拷贝至原数组中</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> value : tmp) &#123;</span><br><span class=\"line\">      arr[start++] = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Java对象排序——TimSort多路归并排序\"><a href=\"#Java对象排序——TimSort多路归并排序\" class=\"headerlink\" title=\"Java对象排序——TimSort多路归并排序\"></a>Java对象排序——TimSort多路归并排序</h2><p>对象排序一般要求稳定，1.8以后使用 <code>java.util.TimSort&lt;T&gt;</code> 进行对象排序。</p>\n<p>TimSort：多路归并排序。</p>\n<p>最小块使用binarySort（插入排序+二分查找位置），整体使用mergeSort两两归并。</p>\n<h1 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h1><h2 id=\"算法步骤-5\"><a href=\"#算法步骤-5\" class=\"headerlink\" title=\"算法步骤\"></a>算法步骤</h2><ol>\n<li>选择一个数 <code>pivot</code>，将序列分为两段，<code>&lt;= pivot</code> 放第一段，<code>&gt; pivot</code> 放第二段</li>\n<li>对第一段、第二段递归执行步骤1</li>\n</ol>\n<p><img src=\"quickSort.gif\" alt=\"快速排序\"></p>\n<h3 id=\"代码实现-8\"><a href=\"#代码实现-8\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 快排</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021年4月8日</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QuickSort</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">38</span>, <span class=\"number\">5</span>, <span class=\"number\">47</span>, <span class=\"number\">15</span>, <span class=\"number\">36</span>, <span class=\"number\">26</span>, <span class=\"number\">27</span>, <span class=\"number\">2</span>, <span class=\"number\">46</span>, <span class=\"number\">4</span>, <span class=\"number\">19</span>, <span class=\"number\">50</span>, <span class=\"number\">48</span>&#125;;</span><br><span class=\"line\">    sort(arr, <span class=\"number\">0</span>, arr.length - <span class=\"number\">1</span>);</span><br><span class=\"line\">    System.out.println(Arrays.toString(arr));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 数组排序</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 原序列</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> start 需要排序的起始位置</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> end 需要排序的结束位置</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> end)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (start &gt;= end) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> pivotIndex = partition(arr, start, end);</span><br><span class=\"line\">    sort(arr, start, pivotIndex - <span class=\"number\">1</span>);</span><br><span class=\"line\">    sort(arr, pivotIndex + <span class=\"number\">1</span>, end);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 分割数组</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 原数组</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> start 待分割的子数组起始位置（包含）</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> end 待分割的子数组结束位置（包含）</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> 分割后，中轴所在的位置</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">partition</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> end)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 小于等于中轴的扫描指针</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> left = start;</span><br><span class=\"line\">    <span class=\"comment\">// 大于中轴的扫描指针</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> right = end - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (left &lt; right) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 从左查找第一个大于中轴的位置</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> (left &lt;= right &amp;&amp; arr[left] &lt;= arr[end]) &#123;</span><br><span class=\"line\">        left++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 从右查找第一个小于等于中轴的位置</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> (left &lt;= right &amp;&amp; arr[right] &gt; arr[end]) &#123;</span><br><span class=\"line\">        right--;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (left &lt; right) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 均找到需要交换的点</span></span><br><span class=\"line\">        SortUtils.swap(arr, left, right);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (arr[left] &gt; arr[end]) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 仅在左指针指向元素大于中轴时，交换</span></span><br><span class=\"line\">      SortUtils.swap(arr, left, end);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> left;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"优化项-3\"><a href=\"#优化项-3\" class=\"headerlink\" title=\"优化项\"></a>优化项</h2><h3 id=\"双轴快排\"><a href=\"#双轴快排\" class=\"headerlink\" title=\"双轴快排\"></a>双轴快排</h3><p>选取两个数 <code>pivot1, pivot2</code>，将序列分为三段，<code>&lt; pivot1</code> 放第一段，<code>pivot1 &lt;= &amp;&amp; &lt;= pivot2</code> 放第二段，<code>&gt; pivot2</code> 放第三段。</p>\n<h1 id=\"Arrays-sort-int\"><a href=\"#Arrays-sort-int\" class=\"headerlink\" title=\"Arrays.sort(int[])\"></a>Arrays.sort(int[])</h1><p><img src=\"Arrays.sort(\" alt=\"Arrays.sort()\">.png)</p>\n<h1 id=\"计数排序\"><a href=\"#计数排序\" class=\"headerlink\" title=\"计数排序\"></a>计数排序</h1><p>非比较排序，<code>桶排序</code> 思想的一种。</p>\n<p>适用于：数据量较大，但取值范围较小的情况。</p>\n<p>例如：</p>\n<ul>\n<li>某大型企业数万名员工的年龄排序</li>\n<li>如何快速得知高考名次</li>\n</ul>\n<h2 id=\"算法步骤-6\"><a href=\"#算法步骤-6\" class=\"headerlink\" title=\"算法步骤\"></a>算法步骤</h2><p><img src=\"countingSort.gif\" alt=\"计数排序\"></p>\n<h3 id=\"代码实现-9\"><a href=\"#代码实现-9\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 计数排序</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021年4月9日</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CountingSort</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">7</span>, <span class=\"number\">3</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">9</span>, <span class=\"number\">2</span>&#125;;</span><br><span class=\"line\">    sort(arr, <span class=\"number\">9</span>);</span><br><span class=\"line\">    System.out.println(Arrays.toString(arr));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 数组排序</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 序列</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> maxNum 待排序序列的最大值</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr, <span class=\"keyword\">int</span> maxNum)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 根据最大值生成用于计数的桶序列</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] count = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[maxNum + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"comment\">// 计数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">      count[arr[i]]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 将计数结果累加，用于保证排序的稳定性</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; count.length; i++) &#123;</span><br><span class=\"line\">      count[i] = count[i - <span class=\"number\">1</span>] + count[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 备份原数组</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arrBack = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[arr.length];</span><br><span class=\"line\">    System.arraycopy(arr, <span class=\"number\">0</span>, arrBack, <span class=\"number\">0</span>, arr.length);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 根据累加结果，遍历原数组，插入结果数组中</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = arrBack.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 从累加结果中，获取原数组当前元素需要插入的位置，赋值</span></span><br><span class=\"line\">      arr[--count[arrBack[i]]] = arrBack[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"基数排序\"><a href=\"#基数排序\" class=\"headerlink\" title=\"基数排序\"></a>基数排序</h1><ul>\n<li>非比较排序，<code>桶排序</code> 思想的一种，本质上是一种多关键字排序。</li>\n<li>有低位优先（<code>LSD</code>：Least Significant Digit First）和高位优先（<code>MSD</code>：Most Significant Digit First）两种。其中，LSD的每次循环都是一次计数排序；MSD则是利用递归的一种分治思想。</li>\n</ul>\n<p>使用场景：字符串排序，取最长的字符串的长度作为digit；每个字符作为一位。</p>\n<h2 id=\"算法步骤-7\"><a href=\"#算法步骤-7\" class=\"headerlink\" title=\"算法步骤\"></a>算法步骤</h2><p><img src=\"radixSort.gif\" alt=\"基数排序\"></p>\n<h3 id=\"代码实现-10\"><a href=\"#代码实现-10\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 基数排序</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/4/10</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RadixSort</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">38</span>, <span class=\"number\">5</span>, <span class=\"number\">47</span>, <span class=\"number\">15</span>, <span class=\"number\">36</span>, <span class=\"number\">26</span>, <span class=\"number\">27</span>, <span class=\"number\">2</span>, <span class=\"number\">46</span>, <span class=\"number\">4</span>, <span class=\"number\">19</span>, <span class=\"number\">50</span>, <span class=\"number\">48</span>&#125;;</span><br><span class=\"line\">    sort(arr, <span class=\"number\">2</span>);</span><br><span class=\"line\">    System.out.println(Arrays.toString(arr));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 数组排序</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@date</span> 2021/4/10 8:45</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> arr 原数组</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> digit 数组中最大的位数</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr, <span class=\"keyword\">int</span> digit)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 用于计数的桶序列</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] count = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; digit; k++) &#123;</span><br><span class=\"line\">      Arrays.fill(count, <span class=\"number\">0</span>);</span><br><span class=\"line\">      <span class=\"comment\">// 除数（用于取个、十、百等位）</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span> division = (<span class=\"keyword\">int</span>) Math.pow(<span class=\"number\">10</span>, k);</span><br><span class=\"line\">      <span class=\"comment\">// 根据个位数排序</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">        count[arr[i] / division % <span class=\"number\">10</span>]++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 计数结果累加</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; count.length; i++) &#123;</span><br><span class=\"line\">        count[i] = count[i - <span class=\"number\">1</span>] + count[i];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 备份原数组</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span>[] arrBack = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[arr.length];</span><br><span class=\"line\">      System.arraycopy(arr, <span class=\"number\">0</span>, arrBack, <span class=\"number\">0</span>, arr.length);</span><br><span class=\"line\">      <span class=\"comment\">// 排序</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = arrBack.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        arr[--count[arrBack[i] / division % <span class=\"number\">10</span>]] = arrBack[i];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"桶排序\"><a href=\"#桶排序\" class=\"headerlink\" title=\"桶排序\"></a>桶排序</h1><ul>\n<li>不太重要，普通情况不常用。</li>\n<li>特殊情况较常用，且计数排序 &gt; 基数排序</li>\n<li>桶内排序存在时间换空间，空间换时间的取舍问题，无法做到最好。</li>\n</ul>\n<h2 id=\"算法步骤-8\"><a href=\"#算法步骤-8\" class=\"headerlink\" title=\"算法步骤\"></a>算法步骤</h2><p><img src=\"bucketSort.gif\" alt=\"桶排序\"></p>\n<h1 id=\"堆排序\"><a href=\"#堆排序\" class=\"headerlink\" title=\"堆排序\"></a>堆排序</h1><h2 id=\"算法步骤-9\"><a href=\"#算法步骤-9\" class=\"headerlink\" title=\"算法步骤\"></a>算法步骤</h2><p><img src=\"heapSort.gif\" alt=\"堆排序\"></p>\n<h3 id=\"代码实现-11\"><a href=\"#代码实现-11\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["算法"],"tags":["咕咕咕","all-in","算法","排序"]},{"title":"进程、线程、纤程","url":"https://chiaralee.gitee.io/2021/03/29/进程、线程、纤程/","content":"<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><blockquote>\n<p>线程在Linux中的实现：</p>\n<p>就是一个普通进程，只是线程和其他一些进程共享某些资源，如地址空间。</p>\n<p>其他系统（Microsoft Windows 或 Sun Solaris）都有各自的所谓LWP（Lightweight Process：轻量级进程）的实现。</p>\n<p>——《Linux内核设计与实现》第三版P28 3.4</p>\n</blockquote>\n<p>进程是OS分配资源的基本单位，线程是执行调度的基本单位（线程共享进程的内存空间，没有自己独立的内存空间）。</p>\n<p>纤程又叫做协程，是用户态的线程，线程中的线程，其切换和调度不需要经过OS。优点是：1. 占有资源少（OS中启一个线程，约1M；线程中启一个纤程，约4K）；2. 切换比较简单；3. 可以启动很多个（10W+）。</p>\n<h2 id=\"Java中线程、纤程运行时长比较Demo\"><a href=\"#Java中线程、纤程运行时长比较Demo\" class=\"headerlink\" title=\"Java中线程、纤程运行时长比较Demo\"></a>Java中线程、纤程运行时长比较Demo</h2><blockquote>\n<p>环境依赖：</p>\n<p>jdk1.8 + quasar0.7（0.8需使用jdk10编译）</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-core --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.3.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/co.paralleluniverse/quasar-core --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>co.paralleluniverse<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>quasar-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.7.10<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>代码段：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> co.paralleluniverse.fibers.Fiber;</span><br><span class=\"line\"><span class=\"keyword\">import</span> co.paralleluniverse.strands.SuspendableRunnable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.StopWatch;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ExecutionException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 相同逻辑线程、纤程运行时长比较</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Miibo</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021年3月29日</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloFiber</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    StopWatch stopWatch = <span class=\"keyword\">new</span> StopWatch(<span class=\"string\">&quot;quasar-core&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> total = <span class=\"number\">10000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 操作系统级启动一个线程（JVM），该线程中启动1w个纤程</span></span><br><span class=\"line\">    stopWatch.start(<span class=\"string\">&quot;Fiber&quot;</span>);</span><br><span class=\"line\">    doFiber(total);</span><br><span class=\"line\">    stopWatch.stop();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 操作系统级启动1w个线程</span></span><br><span class=\"line\">    stopWatch.start(<span class=\"string\">&quot;Thread&quot;</span>);</span><br><span class=\"line\">    doThread(total);</span><br><span class=\"line\">    stopWatch.stop();</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(stopWatch.prettyPrint());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 启动线程</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> size 线程个数</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">doThread</span><span class=\"params\">(<span class=\"keyword\">int</span> size)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">    Thread[] list = <span class=\"keyword\">new</span> Thread[size];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.length; i++) &#123;</span><br><span class=\"line\">      list[i] = <span class=\"keyword\">new</span> Thread(HelloFiber::calc);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.length; i++) &#123;</span><br><span class=\"line\">      list[i].start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.length; i++) &#123;</span><br><span class=\"line\">      list[i].join();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 启动纤程</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> size 纤程个数</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">doFiber</span><span class=\"params\">(<span class=\"keyword\">int</span> size)</span> <span class=\"keyword\">throws</span> ExecutionException, InterruptedException </span>&#123;</span><br><span class=\"line\">    Fiber&lt;Void&gt;[] list = <span class=\"keyword\">new</span> Fiber[size];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.length; i++) &#123;</span><br><span class=\"line\">      list[i] = <span class=\"keyword\">new</span> Fiber&lt;&gt;((SuspendableRunnable) HelloFiber::calc);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.length; i++) &#123;</span><br><span class=\"line\">      list[i].start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.length; i++) &#123;</span><br><span class=\"line\">      list[i].join();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/** 模拟耗时的一段逻辑 */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">calc</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> m = <span class=\"number\">0</span>; m &lt; <span class=\"number\">10000</span>; m++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">200</span>; i++) result += i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">StopWatch &#x27;quasar-core&#x27;: running time = 1066884800 ns</span></span><br><span class=\"line\"><span class=\"comment\">---------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\">ns         %     Task name</span></span><br><span class=\"line\"><span class=\"comment\">---------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\">193756100  018%  Fiber</span></span><br><span class=\"line\"><span class=\"comment\">873128700  082%  Thread</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"进程\"><a href=\"#进程\" class=\"headerlink\" title=\"进程\"></a>进程</h1><h2 id=\"创建和启动\"><a href=\"#创建和启动\" class=\"headerlink\" title=\"创建和启动\"></a>创建和启动</h2><p>通过系统函数 <code>fork()</code> 创建，通过系统函数 <code>exec()</code> 启动。</p>\n<p>从A中fork出一个B进程时，A称之为B的父进程，B称之为A的子进程。</p>\n<h2 id=\"调度\"><a href=\"#调度\" class=\"headerlink\" title=\"调度\"></a>调度</h2><p>内核进程调度器需决定：</p>\n<ol>\n<li>该哪个进程运行？</li>\n<li>何时开始？</li>\n<li>运行多长时间？</li>\n</ol>\n<p>Linux中，每个进程都可以有一个自己的调度方案。</p>\n<h3 id=\"调度策略发展\"><a href=\"#调度策略发展\" class=\"headerlink\" title=\"调度策略发展\"></a>调度策略发展</h3><p>Linux 2.5 经典Unix O(1)调度策略（分时间片），偏向服务器，对交互不友好（不能及时响应）。</p>\n<p>Linux 2.6.23 采用CFS调度策略（Completely Fair Scheduler：完全公平调度算法），其抢占时机取决于新的可运行程序消耗了多少处理器使用比。如果消耗的使用比比当前进程小，则新进程立刻投入运行，抢占当前进程。否则，将推迟其运行。</p>\n<h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><h4 id=\"进程类型\"><a href=\"#进程类型\" class=\"headerlink\" title=\"进程类型\"></a>进程类型</h4><ul>\n<li><p>IO密集型：大部分时间用于等待IO</p>\n</li>\n<li><p>CPU密集型：大部分时间用于闷头计算</p>\n</li>\n</ul>\n<h4 id=\"进程优先级\"><a href=\"#进程优先级\" class=\"headerlink\" title=\"进程优先级\"></a>进程优先级</h4><ul>\n<li><p>实时进程 &gt; 普通进程（0 - 99）</p>\n<ul>\n<li>实时进程相当于急诊，普通进程相当于普通门诊</li>\n<li>实时进程默认使用 <code>SCHED_FIFO</code>（First In First Out） 和 <code>SCHED_RR</code>（Round Robin） 两种，普通进程默认使用CFS</li>\n</ul>\n</li>\n<li><p>普通进程nice值（-20 - 19）</p>\n</li>\n</ul>\n<h4 id=\"时间分配\"><a href=\"#时间分配\" class=\"headerlink\" title=\"时间分配\"></a>时间分配</h4><ul>\n<li><p>linux采用按优先级的CPU <strong>时间比</strong></p>\n</li>\n<li><p>其他同多采用按优先级的 <strong>时间片</strong></p>\n</li>\n</ul>\n","categories":["操作系统"],"tags":["操作系统","进程","线程","纤程","协程"]},{"title":"乱序执行","url":"https://chiaralee.gitee.io/2021/03/26/乱序执行/","content":"<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>乱序执行（out-of-order execution，简称 <code>OoOE</code> 或 <code>OOE</code> ）是指CPU采用了允许将多条指令不按程序规定的顺序分开发送给各相应电路单元处理的技术。</p>\n<h1 id=\"证明\"><a href=\"#证明\" class=\"headerlink\" title=\"证明\"></a>证明</h1><p><a class=\"link\"   href=\"https://preshing.com/20120515/memory-reordering-caught-in-the-act/\" >https://preshing.com/20120515/memory-reordering-caught-in-the-act/<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h1 id=\"DCL单例为什么要加volatile？\"><a href=\"#DCL单例为什么要加volatile？\" class=\"headerlink\" title=\"DCL单例为什么要加volatile？\"></a>DCL单例为什么要加volatile？</h1><blockquote>\n<p>来自美团的面试题</p>\n</blockquote>\n<ol>\n<li><p>对象创建的过程：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 源码</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">T</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m = <span class=\"number\">8</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">T t = <span class=\"keyword\">new</span> T();</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">; 汇编码</span><br><span class=\"line\">0 new #2 &lt;T&gt; ; 为t在内存中开辟一块空间，此时m为默认值0</span><br><span class=\"line\">3 dup ; duplicate，在栈帧中，复制一份引用（invokespecial方法会消耗一个）</span><br><span class=\"line\">4 invokespecial #3 &lt;T.&lt;init&gt;&gt; ; 执行构造方法，m变为8</span><br><span class=\"line\">7 astore_1 ; 弹出栈顶值，赋值给局部变量1号位（btw：0号位是this）</span><br><span class=\"line\">8 return</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li><p>DCL单例（Double Check Lock）中，以上述类T为例。</p>\n<p>假设：</p>\n<ol>\n<li>Thread 1 执行 <code>0 new #2 &lt;T&gt;</code> 后，<code>4 invokespecial #3 &lt;T.&lt;init&gt;&gt;</code> 与 <code>7 astore_1</code>  出现指令重排，还未执行 <code>4 invokespecial #3 &lt;T.&lt;init&gt;&gt;</code> 就执行了 <code>7 astore_1</code> ，此时，t处于<strong>半初始化状态</strong>，m为默认值0；</li>\n<li>Thread 2 在t处于半初始化状态时，执行语句块 <code>if(t != null) balabala</code> ，将直接使用半初始化状态的对象。</li>\n</ol>\n<p>因此，在DCL里，需要使用volatile（btw：volatile有禁止指令重排序的作用）。</p>\n</li>\n</ol>\n<h1 id=\"禁止指令重排\"><a href=\"#禁止指令重排\" class=\"headerlink\" title=\"禁止指令重排\"></a>禁止指令重排</h1><h2 id=\"硬件层面\"><a href=\"#硬件层面\" class=\"headerlink\" title=\"硬件层面\"></a>硬件层面</h2><h3 id=\"内存屏障\"><a href=\"#内存屏障\" class=\"headerlink\" title=\"内存屏障\"></a>内存屏障</h3><p>对某部分内存做操作时，前后添加屏障，该屏障前后的操作不可被乱序执行。</p>\n<p>以Intel为例：</p>\n<ul>\n<li>lfence（load fence）：读屏障，在lfence指令上下的<strong>读操作</strong>不能进行重排序。</li>\n<li>sfence（save fence）：写屏障，在sfence指令上下的<strong>写操作</strong>不能进行重排序。</li>\n<li>mfence（mixed fence）：读写屏障，在mfence指令上下的<strong>读写操作</strong>不能进行重排序。</li>\n</ul>\n<h3 id=\"锁总线：LOCK指令\"><a href=\"#锁总线：LOCK指令\" class=\"headerlink\" title=\"锁总线：LOCK指令\"></a>锁总线：LOCK指令</h3><p>原子指令，x86上的 <code>LOCK</code> 指令是个Full Barrier（指令上下的无论读指令还是写指令都不能进行重排序），执行时，会锁住内存总线来确保执行顺序，跨越多个CPU。</p>\n<h2 id=\"JVM层面\"><a href=\"#JVM层面\" class=\"headerlink\" title=\"JVM层面\"></a>JVM层面</h2><h3 id=\"JSR内存屏障\"><a href=\"#JSR内存屏障\" class=\"headerlink\" title=\"JSR内存屏障\"></a>JSR内存屏障</h3><p>LL（LoadLoad屏障）：LoadLoadBarrier指令上下的<strong>读操作</strong>不能进行重排序。</p>\n<p>SS（StoreStore屏障）：StoreStoreBarrier指令上下的<strong>写操作</strong>不能进行重排序。</p>\n<p>LS（LoadStore屏障）：LoadStoreBarrier指令上下的<strong>读、写操作</strong>不能进行重排序。</p>\n<p>SL（StoreLoad屏障）：StoreLoadBarrier指令上下的<strong>写、读操作</strong>不能进行重排序。</p>\n<blockquote>\n<p>volatile的实现细节如下（非常保守）：</p>\n<ul>\n<li><p>volatile写操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">StoreStoreBarrier</span><br><span class=\"line\">volatile写操作</span><br><span class=\"line\">StoreLoadBarrier</span><br></pre></td></tr></table></figure>\n<p>volatile修饰的内存，写操作不可与<strong>之前的写</strong>操作重排；不可与<strong>之后的读</strong>操作重排。</p>\n</li>\n</ul>\n<ul>\n<li><p>volatile读操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LoadLoadBarrier</span><br><span class=\"line\">volatile读操作</span><br><span class=\"line\">LoadStoreBarrier</span><br></pre></td></tr></table></figure>\n<p>volatile修饰的内存，读操作不可与<strong>之前的读</strong>操作重排；不可与<strong>之后的写</strong>操作重排。</p>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"Happens-before原则\"><a href=\"#Happens-before原则\" class=\"headerlink\" title=\"Happens-before原则\"></a>Happens-before原则</h3><p><a class=\"link\"   href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-17.html#jls-17.4.5\" >JLS17.4.5<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h2 id=\"as-if-serial\"><a href=\"#as-if-serial\" class=\"headerlink\" title=\"as-if-serial\"></a>as-if-serial</h2><p>不管如何重排序，单线程执行的结果不变改变，看上去像是serial</p>\n","categories":["操作系统"],"tags":["操作系统","乱序执行","指令重排","屏障"]},{"title":"Java相关硬件知识","url":"https://chiaralee.gitee.io/2021/03/26/Java相关硬件知识/","content":"<blockquote>\n<p>马老师说：</p>\n<p>读书的原则：不求甚解，观其大略</p>\n<p>你如果进到庐山里头，二话不说，蹲下头来，弯下腰，就对着某棵树某棵小草猛研究而不是说先把庐山的整体脉络跟那研究清楚了，那么你的学习方法肯定效率巨低而且特别痛苦，最重要的还是慢慢地还打击你的积极性，说我的学习怎么那么不happy啊，怎么那么特没劲那，因为你的学习方法错了，大体读明白，先拿来用，用着用着，很多道理你就明白了</p>\n</blockquote>\n<h1 id=\"操作系统\"><a href=\"#操作系统\" class=\"headerlink\" title=\"操作系统\"></a>操作系统</h1><p>是一个承上启下的软件，向上管理应用（进程），向下管理硬件（内存、硬盘、cpu、显卡等）。</p>\n<h2 id=\"用户态、内核态\"><a href=\"#用户态、内核态\" class=\"headerlink\" title=\"用户态、内核态\"></a>用户态、内核态</h2><p>CPU分不同的指令级别。</p>\n<p>Linux内核跑在ring 0级（内核态）， 用户程序跑在ring 3级（用户态），对于系统的关键访问，需要经过kernel的同意，保证系统健壮性。内核执行的操作有200多个系统调用，如：sendfile read write pthread fork 等。</p>\n<p>当在系统中执行一个程序时，大部分时间是运行在用户态下的，在其需要操作系统帮助完成一些用户态自己没有特权和能力完成的操作时就会切换到内核态。</p>\n<p>举个栗子：用户运行一个程序时，程序创建的进程开始运行自己的代码逻辑，此时处于用户态。如果需要执行文件操作等，必须通过write等系统调用，这些系统调用会调用内核的代码，此时进程会切换到内核态。内核态的进程执行完后又会回到用户态。</p>\n<p><em>JVM -&gt; 在OS的视角里，就是个普通程序，所以跑在ring 3级。</em></p>\n<h1 id=\"计算机组成\"><a href=\"#计算机组成\" class=\"headerlink\" title=\"计算机组成\"></a>计算机组成</h1><p><img src=\"计算机组成.png\" alt=\"计算机组成\"></p>\n<h2 id=\"CPU的基本组成\"><a href=\"#CPU的基本组成\" class=\"headerlink\" title=\"CPU的基本组成\"></a>CPU的基本组成</h2><ul>\n<li>ALU（Arithmetic &amp; Logic Unit）：<ul>\n<li>运算单元</li>\n</ul>\n</li>\n<li>Registers：<ul>\n<li>寄存器，暂时存储CPU计算需要用到的数据</li>\n</ul>\n</li>\n<li>PC（Program Counter）：<ul>\n<li>程序计数器，记录当前指令地址</li>\n</ul>\n</li>\n<li>CU（Control Unit）：<ul>\n<li>控制单元</li>\n</ul>\n</li>\n<li>MMU（Memory Management Unit）：<ul>\n<li>内存管理单元</li>\n</ul>\n</li>\n<li>cache line：<ul>\n<li>缓存行，L1、L2、L3</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"存储器的层次结构\"><a href=\"#存储器的层次结构\" class=\"headerlink\" title=\"存储器的层次结构\"></a>存储器的层次结构</h2><p><img src=\"存储器的层次结构.png\" alt=\"存储器的层次结构\"></p>\n<p>从L0读取数据比从L4读取数据快了近100倍。</p>\n<h1 id=\"合并写技术（Write-Combining）\"><a href=\"#合并写技术（Write-Combining）\" class=\"headerlink\" title=\"合并写技术（Write Combining）\"></a>合并写技术（Write Combining）</h1><p><strong>Write Combining Buffer</strong>，一般是4个字节。</p>\n<p>因为ALU速度太快了，为了提高效率，CPU在写入L1的同时，写入一个WC Buffer，满了之后，再直接更新到L2，即：CPU在写入L1时，同时用WC写入L2。</p>\n<p><img src=\"合并写.png\" alt=\"合并写\"></p>\n<h1 id=\"系统启动\"><a href=\"#系统启动\" class=\"headerlink\" title=\"系统启动\"></a>系统启动</h1><p>通电 -&gt; BIOS/UEFI 工作 -&gt; 自检 -&gt; 到硬盘的固定位置加载bootloader -&gt; 从CMOS读取可配置信息</p>\n<h1 id=\"内存管理\"><a href=\"#内存管理\" class=\"headerlink\" title=\"内存管理\"></a>内存管理</h1><h2 id=\"发展历程\"><a href=\"#发展历程\" class=\"headerlink\" title=\"发展历程\"></a>发展历程</h2><ol>\n<li><p>DOS：同一时间只能有一个进程在进行</p>\n</li>\n<li><p>Windows9X：多个进程装入内存中</p>\n<p>此时，引入两个问题：内存不够用，进程之间互相打扰。</p>\n<p>为了解决以上两个问题，演变成：虚拟地址，分页装入，软硬件结合寻址。</p>\n</li>\n</ol>\n<h3 id=\"分页——解决内存不够用\"><a href=\"#分页——解决内存不够用\" class=\"headerlink\" title=\"分页——解决内存不够用\"></a>分页——解决内存不够用</h3><p>内存中分成固定大小的页框（4K），硬盘上的程序也分成4K大小的块，用到哪一块，加载哪一块，当内存装满时，通过LRU（Least Recently Used：最不常用）算法交换分区（把最不常用的一块放到swap分区，把最新的一块加载进来）。</p>\n<p><em>LRU算法：<a class=\"link\"   href=\"https://leetcode-cn.com/problems/lru-cache/\" >LeetCode #146<i class=\"fas fa-external-link-alt\"></i></a> 阿里、头条要求手撕</em></p>\n<ul>\n<li>采用：哈希表（命中元素时间复杂度O(1)） + 双向链表（排序、新增操作时间复杂度O(1)）</li>\n</ul>\n<h3 id=\"虚拟内存——解决相互打扰\"><a href=\"#虚拟内存——解决相互打扰\" class=\"headerlink\" title=\"虚拟内存——解决相互打扰\"></a>虚拟内存——解决相互打扰</h3><ul>\n<li>为了保证互不影响，让进程工作在虚拟空间，所用的空间地址不再是直接的物理地址，而是虚拟的地址，因此，进程不可访问到别的进程的空间。</li>\n<li>虚拟空间大小即寻址空间大小，64位系统为2^64bit，比物理空间大很多。</li>\n<li>每个进程都虚拟的独占整个CPU</li>\n<li>内存映射：<ul>\n<li>逻辑地址（偏移量） + 段的基地址 = 线性地址 （虚拟空间）</li>\n<li>线性地址通过 OS + MMU（硬件 Memory Management Unit）转换为物理地址</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"ZGC\"><a href=\"#ZGC\" class=\"headerlink\" title=\"ZGC\"></a>ZGC</h2><p>算法：<strong>Colored Pointer</strong></p>\n<ul>\n<li>GC信息记录在指针上，而不是在头部（Mark Word），带来好处：immediate memory use</li>\n<li>不支持32位系统，不支持压缩指针</li>\n<li>64位分为：42位（表示地址）+ 4位（颜色状态）+ 18位（空闲指针），即，寻址空间为4T（JDK13），目前最大16T（2^44）</li>\n</ul>\n<blockquote>\n<p>CPU 如何区分 <code>一个立即数</code> 和 <code>一条指令</code>？</p>\n<p>总线内部分为：数据总线、地址总线、控制总线，其中地址总线目前仅48位</p>\n</blockquote>\n<h1 id=\"内核同步机制\"><a href=\"#内核同步机制\" class=\"headerlink\" title=\"内核同步机制\"></a>内核同步机制</h1><ol>\n<li><p>原子操作 – 内核中类似于AtomicXXX，位于<linux/types.h></p>\n</li>\n<li><p>自旋锁 – 内核中通过汇编支持的cas，位于<asm/spinlock.h></p>\n</li>\n<li><p>读-写自旋 – 类似于ReadWriteLock，可同时读，只能一个写</p>\n<p>读的时候是共享锁，写的时候是排他锁</p>\n</li>\n<li><p>顺序锁（2.6）： – 线程可以挂起的读写自旋锁</p>\n<p>序列计数器（从0开始，写时增加(+1)，写完释放(+1)，读前发现单数，说明有写线程，等待，读前读后序列一样，说明没有写线程打断）</p>\n</li>\n<li><p>信号量 – 类似于Semaphore(PV操作 down up操作 占有和释放）</p>\n<p>重量级锁，线程会进入wait，适合长时间持有的锁情况</p>\n</li>\n<li><p>读-写信号量 – downread upread downwrite upwrite</p>\n<p>（多个写，可以分段写，比较少用）(分段锁）</p>\n</li>\n<li><p>互斥体(mutex) – 特殊的信号量（二值信号量）</p>\n</li>\n<li><p>完成变量 – 特殊的信号量（A发出信号给B，B等待在完成变量上）</p>\n<p>vfork() 在子进程结束时通过完成变量叫醒父进程 类似于(Latch)</p>\n</li>\n<li><p>BKL：大内核锁（早期，现在已经不用）</p>\n</li>\n<li><p>禁止抢占（内核级） – preempt_disable()</p>\n</li>\n<li><p>内存屏障 – 见volatile</p>\n</li>\n</ol>\n","categories":["操作系统"],"tags":["操作系统","计算机组成","存储器","内存管理","LRU算法"]},{"title":"量子计算机","url":"https://chiaralee.gitee.io/2021/03/25/量子计算机/","content":"<blockquote>\n<p><strong>遇事不决，量子力学。</strong></p>\n</blockquote>\n<p>1个普通比特（bit），只能代表1或0中的一个数，</p>\n<p>1个量子比特（qubit），可以同时表示1和0</p>\n<p>…</p>\n<p>18个普通比特，只能代表2^18个数中的<strong>一个数</strong>，</p>\n<p>18个量子比特，可以<strong>同时</strong>代表2^18个数。</p>\n<p><em>类似平行宇宙，无数个宇宙一起计算，结果反映到你看到的宇宙中</em></p>\n<blockquote>\n<p>潘建伟院士如是说：</p>\n<p>如果你要实现一个300位的一个大数的质因数分解，用传统计算机来算的话，你需要15万年。但是如果你用量子计算机来算，只需要一秒钟。</p>\n</blockquote>\n<p>RSA加密算法GG。</p>\n","categories":["操作系统"],"tags":["操作系统","量子计算机"]},{"title":"CentOS 7.9 安装启动 Redis6.0.6 报错合集","url":"https://chiaralee.gitee.io/2021/03/16/CentOS-7-9-安装启动-Redis6-0-6-报错合集/","content":"<h1 id=\"Redis安装步骤\"><a href=\"#Redis安装步骤\" class=\"headerlink\" title=\"Redis安装步骤\"></a>Redis安装步骤</h1><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /opt/</span><br><span class=\"line\"><span class=\"comment\"># 最新稳定版下载地址可在 http://redis.cn/ 获得</span></span><br><span class=\"line\">wget <span class=\"string\">&#x27;http://download.redis.io/releases/redis-6.0.6.tar.gz&#x27;</span></span><br><span class=\"line\">tar xf redis-6.0.6.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> redis-6.0.6</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 阅读README.md，学习编译启动命令：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编译</span></span><br><span class=\"line\">make</span><br><span class=\"line\">make install PREFIX=/opt/redis6</span><br><span class=\"line\">vi /etc/profile</span><br><span class=\"line\">... <span class=\"built_in\">export</span> REDIS_HOME=/opt/redis6</span><br><span class=\"line\">... <span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$REDIS_HOME</span>/bin</span><br><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> utils</span><br><span class=\"line\">./install_server.sh</span><br></pre></td></tr></table></figure>\n<h1 id=\"报错合集\"><a href=\"#报错合集\" class=\"headerlink\" title=\"报错合集\"></a>报错合集</h1><h2 id=\"1号坑：make时，报错\"><a href=\"#1号坑：make时，报错\" class=\"headerlink\" title=\"1号坑：make时，报错\"></a>1号坑：make时，报错</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make[1]: *** [server.o] Error 1</span><br><span class=\"line\">make[1]: Leaving directory `/opt/redis-6.0.6/src&#x27;</span><br><span class=\"line\">make: *** [all] Error 2</span><br></pre></td></tr></table></figure>\n<h3 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h3><p>因gcc版本过低，升级即可解决，升级命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看当前gcc版本</span></span><br><span class=\"line\">gcc -v</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 升级</span></span><br><span class=\"line\">yum -y install centos-release-scl</span><br><span class=\"line\">yum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 临时启用</span></span><br><span class=\"line\">scl enable devtoolset-9 bash</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 长期使用新版gcc，需修改环境变量</span></span><br><span class=\"line\">echo &quot;source /opt/rh/devtoolset-9/enable&quot; &gt;&gt; /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">gcc -v</span><br></pre></td></tr></table></figure>\n<h2 id=\"2号坑：install-server-sh启动时，报错\"><a href=\"#2号坑：install-server-sh启动时，报错\" class=\"headerlink\" title=\"2号坑：install_server.sh启动时，报错\"></a>2号坑：install_server.sh启动时，报错</h2><p><img src=\"Snipaste_2021-03-16_16-46-00.png\" alt=\"报错信息\"></p>\n<h3 id=\"解决办法-1\"><a href=\"#解决办法-1\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h3><p>修改install_server启动脚本，注释以下几行代码：</p>\n<p><img src=\"Snipaste_2021-03-16_16-44-02.png\" alt=\"注释代码\"></p>\n","categories":["Redis"],"tags":["Linux","Redis","异常"]},{"title":"Redis(一) 基操","url":"https://chiaralee.gitee.io/2021/03/15/Redis-一-基操/","content":"<h1 id=\"常识\"><a href=\"#常识\" class=\"headerlink\" title=\"常识\"></a>常识</h1><ol>\n<li>寻址时，磁盘（毫秒级）比内存（纳秒级）慢10W倍</li>\n<li>I/O Buffer：<ol>\n<li>磁盘有磁道和扇区，一个扇区512Byte，索引成本变大</li>\n<li>操作系统，无论读多少，都是最少以4k大小从磁盘读取数据</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"数据存储发展\"><a href=\"#数据存储发展\" class=\"headerlink\" title=\"数据存储发展\"></a>数据存储发展</h1><ol>\n<li><p>文件存储</p>\n<p>随着文件变大，查询速度变慢，磁盘I/O成为瓶颈</p>\n</li>\n<li><p>数据库存储</p>\n<p>关系型数据库建表时，必须给出schema</p>\n<ul>\n<li>类型：字段的字节大小</li>\n<li>存储方式：行级存储</li>\n</ul>\n<blockquote>\n<p>表很大时，性能下降？</p>\n<ol>\n<li><p>如果有索引，增删改变慢（维护索引）</p>\n</li>\n<li><p>查询命中索引时，1个或少量查询依然很快</p>\n</li>\n<li><p>查询命中索引时，并发或复杂查询时变慢（受硬盘带宽影响速度变慢，需读取多个data page到内存）</p>\n<p><img src=\"数据库存储数据.png\" alt=\"关系型数据库存储数据\"></p>\n</li>\n</ol>\n</blockquote>\n</li>\n<li><p>SAP HANA</p>\n<p>内存级别的关系型数据库，用不起，跳过</p>\n</li>\n<li><p>缓存（Redis、Memcached）</p>\n<p>Memcached：value没有类型概念</p>\n<p>Redis：支持多种类型的数据结构，如 <code>字符串（strings）</code>， <code>散列（hashes）</code>， <code>列表（lists）</code>， <code>集合（sets）</code>， <code>有序集合（sorted sets）</code> 与范围查询， bitmaps， hyperloglogs 和 地理空间（geospatial） 索引半径查询。</p>\n</li>\n</ol>\n<blockquote>\n<p>取回Value中的某一个元素，如：返回list[index]</p>\n<ul>\n<li><p>Memcached：返回value全量数据到Client端</p>\n<p>存在以下两个复杂点：</p>\n<ul>\n<li>Server端：网卡IO</li>\n<li>Client端：编写代码实现Value的解码操作</li>\n</ul>\n</li>\n<li><p>Redis：规避Memcached两个复杂点，Server对每种类型都有自己的方法，不需要取走全量数据，Client端代码比较轻盈。即：<code>计算向数据移动</code>。</p>\n</li>\n</ul>\n</blockquote>\n","categories":["Redis"],"tags":["Redis"]},{"title":"SB树","url":"https://chiaralee.gitee.io/2021/03/15/SB树/","content":"<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>SB树（Size Balanced Tree）是一种自平衡二叉搜索树，它是由国内ACM选手陈启峰在高中时提出的。</p>\n<p>SB树具有以下性质：任何<strong>叔叔节点</strong>的子树的节点总数<strong>不小于</strong>任何一个<strong>侄子节点</strong>的子树的节点总数。 <em>(侄子节点：定义为一个节点的兄弟节点的两个子节点)</em></p>\n<h1 id=\"破坏平衡性的四种情况\"><a href=\"#破坏平衡性的四种情况\" class=\"headerlink\" title=\"破坏平衡性的四种情况\"></a>破坏平衡性的四种情况</h1><h2 id=\"LL型\"><a href=\"#LL型\" class=\"headerlink\" title=\"LL型\"></a>LL型</h2><h3 id=\"原因：\"><a href=\"#原因：\" class=\"headerlink\" title=\"原因：\"></a>原因：</h3><p>头节点 <code>ROOT</code> 的左儿子 <code>L</code> 的左儿子 <code>LL</code> 的节点个数 <strong>大于</strong> 头节点 <code>ROOT</code> 的右儿子 <code>R</code> 的节点个数</p>\n<h2 id=\"LR型\"><a href=\"#LR型\" class=\"headerlink\" title=\"LR型\"></a>LR型</h2><h3 id=\"原因：-1\"><a href=\"#原因：-1\" class=\"headerlink\" title=\"原因：\"></a>原因：</h3><p>头节点 <code>ROOT</code> 的左儿子 <code>L</code> 的右儿子 <code>LR</code> 的节点个数 <strong>大于</strong> 头节点 <code>ROOT</code> 的右儿子 <code>R</code> 的节点个数</p>\n<h2 id=\"RR型\"><a href=\"#RR型\" class=\"headerlink\" title=\"RR型\"></a>RR型</h2><h3 id=\"原因：-2\"><a href=\"#原因：-2\" class=\"headerlink\" title=\"原因：\"></a>原因：</h3><p>头节点 <code>ROOT</code> 的右儿子 <code>R</code> 的右儿子 <code>RR</code> 的节点个数 <strong>大于</strong> 头节点 <code>ROOT</code> 的左儿子 <code>L</code> 的节点个数</p>\n<h2 id=\"RL型\"><a href=\"#RL型\" class=\"headerlink\" title=\"RL型\"></a>RL型</h2><h3 id=\"原因：-3\"><a href=\"#原因：-3\" class=\"headerlink\" title=\"原因：\"></a>原因：</h3><p>头节点 <code>ROOT</code> 的右儿子 <code>R</code> 的左儿子 <code>RL</code> 的节点个数 <strong>大于</strong> 头节点 <code>ROOT</code> 的左儿子 <code>L</code> 的节点个数</p>\n<h2 id=\"平衡性维护函数伪代码\"><a href=\"#平衡性维护函数伪代码\" class=\"headerlink\" title=\"平衡性维护函数伪代码\"></a>平衡性维护函数伪代码</h2><blockquote>\n<p>同AVL树类似，不同处：旋转后，需对<strong>子节点发生变化的根</strong>递归调用修复平衡性的函数。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 修复SBT平衡性</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> cur 需要调整的根节点</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> 调整后的根节点</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">Node <span class=\"title\">maintain</span><span class=\"params\">(Node cur)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == cur) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cur;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 左儿子的节点数</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> lSize = <span class=\"keyword\">null</span> != cur.l ? cur.l.size : <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 左儿子的左儿子的节点数</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> llSize = (<span class=\"keyword\">null</span> != cur.l &amp;&amp; <span class=\"keyword\">null</span> != cur.l.l) ? cur.l.l.size : <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 左儿子的右儿子的节点数</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> lrSize = (<span class=\"keyword\">null</span> != cur.l &amp;&amp; <span class=\"keyword\">null</span> != cur.l.r) ? cur.l.r.size : <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 右儿子的节点数</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> rSize = <span class=\"keyword\">null</span> != cur.r ? cur.r.size : <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 右儿子的右儿子的节点数</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> rrSize = (<span class=\"keyword\">null</span> != cur.r &amp;&amp; <span class=\"keyword\">null</span> != cur.r.r) ? cur.r.r.size : <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 右儿子的左儿子的节点数</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> rlSize = (<span class=\"keyword\">null</span> != cur.r &amp;&amp; <span class=\"keyword\">null</span> != cur.r.l) ? cur.r.l.size : <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (llSize &gt; rSize) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//// LL型违规 ////</span></span><br><span class=\"line\">        <span class=\"comment\">// 对头节点进行一次右旋，返回新树的根节点</span></span><br><span class=\"line\">        cur = rightRotate(cur);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 新根的右儿子的子节点发生变化，递归调用maintain，修复平衡性</span></span><br><span class=\"line\">        cur.r = maintain(cur.r);</span><br><span class=\"line\">        <span class=\"comment\">// 新根的子节点发生变化，递归调用maintain，修复平衡性</span></span><br><span class=\"line\">        cur = maintain(cur);</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (lrSize &gt; rSize) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//// LR型违规 ////</span></span><br><span class=\"line\">        <span class=\"comment\">// 对左儿子进行一次左旋，返回新的左儿子</span></span><br><span class=\"line\">        cur.l = leftRotate(cur.l);</span><br><span class=\"line\">        <span class=\"comment\">// 对头节点进行一次右旋，返回新树的根节点</span></span><br><span class=\"line\">        cur = rightRotate(cur);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 新根的左儿子的子节点发生变化，递归调用maintain，修复平衡性</span></span><br><span class=\"line\">        cur.l = maintain(cur.l);</span><br><span class=\"line\">        <span class=\"comment\">// 新根的右儿子的子节点发生变化，递归调用maintain，修复平衡性</span></span><br><span class=\"line\">        cur.r = maintain(cur.r);</span><br><span class=\"line\">        <span class=\"comment\">// 新根的子节点发生变化，递归调用maintain，修复平衡性</span></span><br><span class=\"line\">        cur = maintain(cur);</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (rrSize &gt; lSize) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//// RR型违规 ////</span></span><br><span class=\"line\">        <span class=\"comment\">// 对头节点进行一次左旋，返回新树的根节点</span></span><br><span class=\"line\">        cur = leftRotate(cur);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 新根的左儿子的子节点发生变化，递归调用maintain，修复平衡性</span></span><br><span class=\"line\">        cur.l = maintain(cur.l);</span><br><span class=\"line\">        <span class=\"comment\">// 新根的子节点发生变化，递归调用maintain，修复平衡性</span></span><br><span class=\"line\">        cur = maintain(cur);</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (rlSize &gt; lSize) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//// RL型违规 ////</span></span><br><span class=\"line\">        <span class=\"comment\">// 对右儿子进行一次右旋，返回新的右儿子</span></span><br><span class=\"line\">        cur.r = rightRotate(cur.r);</span><br><span class=\"line\">        <span class=\"comment\">// 对头节点进行一次左旋，返回新树的根节点</span></span><br><span class=\"line\">        cur = leftRotate(cur);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 新根的左儿子的子节点发生变化，递归调用maintain，修复平衡性</span></span><br><span class=\"line\">        cur.l = maintain(cur.l);</span><br><span class=\"line\">        <span class=\"comment\">// 新根的右儿子的子节点发生变化，递归调用maintain，修复平衡性</span></span><br><span class=\"line\">        cur.r = maintain(cur.r);</span><br><span class=\"line\">        <span class=\"comment\">// 新根的子节点发生变化，递归调用maintain，修复平衡性</span></span><br><span class=\"line\">        cur = maintain(cur);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> cur;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["数据结构"],"tags":["数据结构","SB树"]},{"title":"AVL树","url":"https://chiaralee.gitee.io/2021/03/12/AVL树/","content":"<blockquote>\n<p>AVL树在线动画：<br><a class=\"link\"   href=\"https://www.cs.usfca.edu/~galles/visualization/AVLtree.html\" >https://www.cs.usfca.edu/~galles/visualization/AVLtree.html<i class=\"fas fa-external-link-alt\"></i></a></p>\n</blockquote>\n<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>AVL 树（Self-balancing binary search tree）就是最早被提出的自平衡二叉搜索树，它是由两名俄国的科学家（G. M. <strong>A</strong>delson-<strong>V</strong>elsky 和 E. M. <strong>L</strong>andis）提出。</p>\n<p>AVL树具有以下性质：它是<strong>一棵空树</strong>或它的左右两个子树的<strong>高度差的绝对值不超过1</strong>，并且左右两个子树都是一棵平衡二叉树。</p>\n<h1 id=\"破坏平衡性的四种情况\"><a href=\"#破坏平衡性的四种情况\" class=\"headerlink\" title=\"破坏平衡性的四种情况\"></a>破坏平衡性的四种情况</h1><h2 id=\"LL型\"><a href=\"#LL型\" class=\"headerlink\" title=\"LL型\"></a>LL型</h2><h3 id=\"原因：\"><a href=\"#原因：\" class=\"headerlink\" title=\"原因：\"></a>原因：</h3><p>头节点 <code>ROOT</code> 的左儿子 <code>L</code> 的左儿子 <code>LL</code> 导致平衡被打破</p>\n<h3 id=\"解法：\"><a href=\"#解法：\" class=\"headerlink\" title=\"解法：\"></a>解法：</h3><ol>\n<li>对头节点 <code>ROOT</code> 进行一次 <code>右旋</code> ，即可恢复平衡</li>\n</ol>\n<h3 id=\"举个栗子：\"><a href=\"#举个栗子：\" class=\"headerlink\" title=\"举个栗子：\"></a>举个栗子：</h3><blockquote>\n<p>依次插入数字：3 -&gt; 2 -&gt; 1，当插入数字1时，平衡性被破坏（头节点左子树高度2，右子树高度0，相差&gt;1）</p>\n</blockquote>\n<p><img src=\"AVL树-LL违规.png\" alt=\"AVL树-LL违规\"></p>\n<h2 id=\"LR型\"><a href=\"#LR型\" class=\"headerlink\" title=\"LR型\"></a>LR型</h2><h3 id=\"原因：-1\"><a href=\"#原因：-1\" class=\"headerlink\" title=\"原因：\"></a>原因：</h3><p>头节点 <code>ROOT</code> 的左儿子 <code>L</code> 的右儿子 <code>LR</code> 导致平衡被打破</p>\n<h3 id=\"解法：-1\"><a href=\"#解法：-1\" class=\"headerlink\" title=\"解法：\"></a>解法：</h3><blockquote>\n<p>将孙子节点 <code>R</code> 移至头节点，即可恢复平衡</p>\n</blockquote>\n<ol>\n<li>对左儿子 <code>L</code> 进行一次 <code>左旋</code></li>\n<li>对头节点 <code>ROOT</code> 进行一次 <code>右旋</code> ，即可恢复平衡</li>\n</ol>\n<h3 id=\"举个栗子：-1\"><a href=\"#举个栗子：-1\" class=\"headerlink\" title=\"举个栗子：\"></a>举个栗子：</h3><blockquote>\n<p>依次插入数字：3 -&gt; 1 -&gt; 2，当插入数字2时，平衡性被破坏（头节点左子树高度2，右子树高度0，相差&gt;1）</p>\n</blockquote>\n<p><img src=\"AVL树-LR违规.png\" alt=\"AVL树-LR违规\"></p>\n<h2 id=\"LL-LR型\"><a href=\"#LL-LR型\" class=\"headerlink\" title=\"LL + LR型\"></a>LL + LR型</h2><blockquote>\n<p>解法同LL型</p>\n</blockquote>\n<h3 id=\"举个栗子：-2\"><a href=\"#举个栗子：-2\" class=\"headerlink\" title=\"举个栗子：\"></a>举个栗子：</h3><p>如下所示，删除节点J后，A的左儿子B的 <code>左儿子D（LL型）</code> 和 <code>右儿子E（LR型）</code> 导致平衡被打破</p>\n<p>此时，A的左子树高度3，右子树高度1，相差&gt;1</p>\n<p>对节点A进行一次右旋，即可恢复平衡</p>\n<p><img src=\"AVL树-LL&amp;LR违规.png\" alt=\"AVL树-LL&amp;LR违规\"></p>\n<h2 id=\"RR型\"><a href=\"#RR型\" class=\"headerlink\" title=\"RR型\"></a>RR型</h2><h3 id=\"原因：-2\"><a href=\"#原因：-2\" class=\"headerlink\" title=\"原因：\"></a>原因：</h3><p>头节点 <code>ROOT</code> 的右儿子 <code>R</code> 的右儿子 <code>RR</code> 导致平衡被打破</p>\n<h3 id=\"解法：-2\"><a href=\"#解法：-2\" class=\"headerlink\" title=\"解法：\"></a>解法：</h3><ol>\n<li>对头节点 <code>ROOT</code> 进行一次 <code>左旋</code> ，即可恢复平衡</li>\n</ol>\n<h3 id=\"举个栗子：-3\"><a href=\"#举个栗子：-3\" class=\"headerlink\" title=\"举个栗子：\"></a>举个栗子：</h3><blockquote>\n<p>依次插入数字：1 -&gt; 2 -&gt; 3，当插入数字3时，平衡性被破坏（头节点左子树高度0，右子树高度2，相差&gt;1）</p>\n</blockquote>\n<p><img src=\"AVL树-RR违规.png\" alt=\"AVL树-RR违规\"></p>\n<h2 id=\"RL型\"><a href=\"#RL型\" class=\"headerlink\" title=\"RL型\"></a>RL型</h2><h3 id=\"原因：-3\"><a href=\"#原因：-3\" class=\"headerlink\" title=\"原因：\"></a>原因：</h3><p>头节点 <code>ROOT</code> 的右儿子 <code>R</code> 的左儿子 <code>RL</code> 导致平衡被打破</p>\n<h3 id=\"解法：-3\"><a href=\"#解法：-3\" class=\"headerlink\" title=\"解法：\"></a>解法：</h3><blockquote>\n<p>将孙子节点 <code>L</code> 移至头节点，即可恢复平衡</p>\n</blockquote>\n<ol>\n<li>对右儿子 <code>R</code> 进行一次 <code>右旋</code></li>\n<li>对头节点 <code>ROOT</code> 进行一次 <code>左旋</code> ，即可恢复平衡</li>\n</ol>\n<h3 id=\"举个栗子：-4\"><a href=\"#举个栗子：-4\" class=\"headerlink\" title=\"举个栗子：\"></a>举个栗子：</h3><blockquote>\n<p>依次插入数字：1 -&gt; 3 -&gt; 2，当插入数字2时，平衡性被破坏（头节点左子树高度0，右子树高度2，相差&gt;1）</p>\n</blockquote>\n<p><img src=\"AVL树-RL违规.png\" alt=\"AVL树-RL违规\"></p>\n<h2 id=\"RR-RL型\"><a href=\"#RR-RL型\" class=\"headerlink\" title=\"RR + RL型\"></a>RR + RL型</h2><blockquote>\n<p>解法同RR型，栗子参考 <code>LL + LR型</code></p>\n</blockquote>\n","categories":["数据结构"],"tags":["AVL树","数据结构"]},{"title":"about","url":"https://chiaralee.gitee.io/about/index.html","content":"<h1 id=\"✨今天的你比昨天更博学了吗？\"><a href=\"#✨今天的你比昨天更博学了吗？\" class=\"headerlink\" title=\"✨今天的你比昨天更博学了吗？\"></a>✨今天的你比昨天更博学了吗？</h1><ul>\n<li><p>Dhu，1991，Winter.</p>\n<p>喜欢旅游，喜欢睡懒觉。</p>\n<p>国家一级打瞌睡表演艺术家。</p>\n</li>\n<li><p>Gitee <a class=\"link\"   href=\"https://gitee.com/chiaralee\" >@chiaralee<i class=\"fas fa-external-link-alt\"></i></a></p>\n</li>\n<li><p>Gmail <a href=\"https://chiaralee.gitee.io/about/\">chiaralee1223@gmail.com</a></p>\n</li>\n<li><p>LeetCode <a class=\"link\"   href=\"https://leetcode-cn.com/u/mi-bu-z/\" >咪卜<i class=\"fas fa-external-link-alt\"></i></a></p>\n</li>\n<li><p>杭州</p>\n</li>\n</ul>\n","categories":[],"tags":[]},{"title":"","url":"https://chiaralee.gitee.io/css/personal-style.css","content":"html.page-home {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    /*background-image: url('/images/pexels-polina-tankilevitch-4523008.jpg');*/\n    background-color: transparent;\n    background-size: cover;\n    background-position: center center;\n    background-repeat: no-repeat;\n\n    /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n    /*background: linear-gradient( #c6ffdd, transparent), linear-gradient( 90deg, #fbd786, transparent), linear-gradient( -90deg, #f7797d, transparent);*/\n    background-blend-mode: screen;\n\n    background: linear-gradient(to right, #FFEEEE, #DDEFBB);\n}","categories":[],"tags":[]},{"title":"category","url":"https://chiaralee.gitee.io/category/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"https://chiaralee.gitee.io/project/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"https://chiaralee.gitee.io/link/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"https://chiaralee.gitee.io/tag/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"https://chiaralee.gitee.io/search/index.html","content":"","categories":[],"tags":[]}]